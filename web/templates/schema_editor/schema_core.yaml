id: https://example.com/DH_LinkML
name: DH_LinkML
description: "The DataHarmonizer template for editing a schema."
version: 1.0.0
in_language: 
- 'en'
imports:
- 'linkml:types'
prefixes:
  linkml: 'https://w3id.org/linkml/'
  ONTOLOGY: 'http://purl.obolibrary.org/obo/ONTOLOGY_'
classes:

  Schema:
    name: Schema
    title: Schema
    description: The top-level description of a LinkML schema.  A schema contains tables (LinkML classes) that detail one or more DataHarmonizer templates, fields/columns, and picklists (which are themselves LinkML classes, slots, and enumerations)
    see_also: 
      - templates/schema_editor/SOP.pdf
    unique_keys:
      schema_key:
        description: A slot is uniquely identified by the schema it appears in as well as its name
        unique_key_slots:
        - name

  Prefix:
    name: Prefix
    title: Prefix
    description: A prefix used in the URIs mentioned in this schema.
    unique_keys:
      prefix_key:
        description: A slot is uniquely identified by the schema it appears in as well as its name
        unique_key_slots:
        - schema_id
        - prefix
        - reference

  Class:
    name: Class
    title: Table
    description: A table (LinkML class) specification contained in given schema.  A table may be a top-level DataHarmonizer "template" that can be displayed in a spreadsheet tab, or it may be a subordinate 1-many table linked to a parent table by a primary key field.  
    unique_keys:
      class_key:
        description: A class is uniquely identified by the schema it appears in as well as its name.
        unique_key_slots:
        - schema_id
        - name

  UniqueKey:
    name: UniqueKey
    title: Table key
    description: A table linking the name of each multi-component(slot) key to the schema class it appears in.
    unique_keys:
      uniquekey_key:
        description: A slot is uniquely identified by the schema it appears in as well as its name
        unique_key_slots:
        - schema_id
        - class_name
        - name

  Slot:
    name: Slot
    title: Field
    description: One or more fields (LinkML slots) contained in given schema. A field (slot) can be used in one or more table (class) specifications.  A field defines a visible column in a template, and can be a basic number, date, string, picklist (categorical or ordinal), or other single-field datatype.
    unique_keys:
      slot_key:
        description: A slot is uniquely identified by the schema it appears in as well as its name
        unique_key_slots:
        - schema_id
        - name
        - slot_type

  Annotation:
    name: Annotation
    title: Annotation
    description: One or more fields (LinkML slots) contained in given schema. A field (slot) can be used in one or more table (class) specifications.  A field defines a visible column in a template, and can be a basic number, date, string, picklist (categorical or ordinal), or other single-field datatype.
    unique_keys:
      slot_key:
        description: A slot is uniquely identified by the schema it appears in as well as its name
        unique_key_slots:
        - schema_id
        - name
        - slot_type

  Enum:
    name: Enum
    title: Picklist
    description: One or more enumerations in given schema.  An enumeration can be used in the "range" or "any of" attribute of a slot.  Each enumeration has a flat list or hierarchy of permitted values.
    unique_keys:
      enum_key:
        description: An enumeration is uniquely identified by the schema it appears in as well as its name.
        unique_key_slots:
        - schema_id
        - name

  PermissibleValue:
    name: PermissibleValue
    title: Picklist choices
    description: An enumeration picklist value.
    unique_keys:
      permissiblevalue_key:
        description: An enumeration is uniquely identified by the schema it appears in as well as its name.
        unique_key_slots:
        - schema_id
        - enum_id
        - text

  EnumSource:
    name: EnumSource
    title: Picklist Source
    description: The external (URI reachable) source of an ontology or other parseable vocabulary that aids in composing this menu.  This includes specifications for extracting nodes or branches for inclusion or exclusion in the picklist (LinkML) enumeration.
    unique_keys:
      enum_source_key:
        description: A picklist source consists of the schema, enumeration, inclusion or exclusion flag, and source URI of the ontology.
        unique_key_slots:
        - schema_id
        - enum_id
        - criteria
        - source_ontology

  Setting: 
    name: Setting
    title: Setting
    description: A regular expression that can be reused in a structured_pattern. See:https://linkml.io/linkml/faq/modeling.html#can-i-reuse-regular-expression-patterns.
    unique_keys:
      settings_key:
        description: A setting is uniquely identified by the name key whose value is a regular expression.
        unique_key_slots:
        - schema_id
        - name
        - value

  Rule: 
    name: Rule
    title: Rule
    description: A rule that executes the change in state of one or more fields (slots).  Each rule has a "precondition" expression of constraints one or more fields' values and a postcondition expression stating what the same or other field's values change to.


  Extension: 
    name: Extension
    title: Extension
    description: A list of LinkML attribute-value pairs that are not directly part of the schema's class/slot structure.  Locale information is held here.
    unique_keys:
      extension_key:
        description: A key which details each schema's extension.
        unique_key_slots:
        - schema_id
        - name

  Container:
      tree_root: true
      attributes:
        Schemas:
          range: Schema
          multivalued: true
          inlined_as_list: true
        Prefixes:
          range: Prefix
          multivalued: true
          inlined_as_list: true
        Settings:
          range: Setting
          multivalued: true
          inlined_as_list: true         
        Extensions:
          range: Extension
          multivalued: true
          inlined_as_list: true 

        Enums:
          range: Enum
          multivalued: true
          inlined_as_list: true
        PermissibleValues:
          range: PermissibleValue
          multivalued: true
          inlined_as_list: true
        EnumSources:
          range: EnumSource
          multivalued: true
          inlined_as_list: true  

        Slots:
          range: Slot
          multivalued: true
          inlined_as_list: true
        Annotations:
          range: Annotation
          multivalued: true
          inlined_as_list: true

        Classes:
          range: Class
          multivalued: true
          inlined_as_list: true
        UniqueKeys:
          range: UniqueKey
          multivalued: true
          inlined_as_list: true        

slots: 
  schema_id:
    name: schema_id
    title: schema ID
    description: The unique URI for identifying the LinkML schema that this class, slot, enumeration or other LinkML element belongs to.
    required: true
    range: uri
    annotations:
      foreign_key:
        tag: foreign_key
        value: Schema.name

  class_id:
    name: class_id
    title: Class
    description: The class name that this table is linked to.

    range: SchemaClassMenu
    annotations:
      foreign_key:
        tag: foreign_key
        value: Class.name

  slot_id:
    name: slot_id
    title: Slot
    description: The class name that this table is linked to.
    required: true
    range: WhitespaceMinimizedString
    annotations:
      foreign_key:
        tag: foreign_key
        value: Slot.name

  enum_id:
    name: enum_id
    title: Enumeration
    description: The enumeration name that this table is linked to.
    required: true
    range: WhitespaceMinimizedString
    annotations:
      foreign_key:
        tag: foreign_key
        value: Enum.name

enums: 
  SchemaSlotTypeMenu:
    name: SchemaSlotTypeMenu
    title: Slot Type
    permissible_values:
      slot:
        text: slot
        title: Schema field
        description: A field (LinkML slot) that is stored in the schema's field (slot) library.  This field specification is available for customizable reuse in any table (LinkML class).  Note however that its attributes which have values cannot be overriden when reused.
      slot_usage:
        text: slot_usage
        title: Table field (from schema)
        description: A table field whose name and source attributes come from a schema library field. It can add its own attributes, but cannot overwrite the schema field ones.  (A LinkML schema slot referenced within a class's slot_usage list of slots.)
      attribute:
        text: attribute
        title: Table field (independent)
        description: A table field which is not reused from the schema.  The field can impose its own attribute values.

  SchemaAnnotationTypeMenu:
    name: SchemaAnnotationTypeMenu
    title: Annotation Type
    permissible_values:
      schema:
        text: schema
        title: Schema
      class:
        text: class
        title: Table
      slot:
        text: slot
        title: Schema field
        description: A field (LinkML slot) that is stored in the schema's field (slot) library.  This field specification is available for customizable reuse in any table (LinkML class).  Note however that its attributes which have values cannot be overriden when reused.
      slot_usage:
        text: slot_usage
        title: Table field (from schema)
        description: A table field whose name and source attributes come from a schema library field. It can add its own attributes, but cannot overwrite the schema field ones.  (A LinkML schema slot referenced within a class's slot_usage list of slots.)
      attribute:
        text: attribute
        title: Table field (independent)
        description: A table field which is not reused from the schema.  The field can impose its own attribute values.

  EnumCriteriaMenu:
      name: EnumCriteriaMenu
      title: Criteria Menu
      permissible_values:
        include:
          text: include
          title: include
        exclude:
          text: exclude
          title: exclude

types:
  WhitespaceMinimizedString:
    name: 'WhitespaceMinimizedString'
    typeof: string
    description: 'A string that has all whitespace trimmed off of beginning and end, and all internal whitespace segments reduced to single spaces. Whitespace includes #x9 (tab), #xA (linefeed), and #xD (carriage return).'
    base: str
    uri: xsd:token
  Provenance:
    name: 'Provenance'
    typeof: string
    description: 'A field containing a DataHarmonizer versioning marker. It is issued by DataHarmonizer when validation is applied to a given row of data.'
    base: str
    uri: xsd:token
settings:
  Title_Case: "(((?<=\\b)[^a-z\\W]\\w*?|[\\W])+)"
  UPPER_CASE: "[A-Z\\W\\d_]*"
  lower_case: "[a-z\\W\\d_]*"
