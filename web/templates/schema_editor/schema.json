{
  "name": "DH_LinkML",
  "description": "The DataHarmonizer template for editing a schema.",
  "in_language": "en",
  "id": "https://example.com/DH_LinkML",
  "version": "1.0.0",
  "prefixes": {
    "linkml": {
      "prefix_prefix": "linkml",
      "prefix_reference": "https://w3id.org/linkml/"
    },
    "ONTOLOGY": {
      "prefix_prefix": "ONTOLOGY",
      "prefix_reference": "http://purl.obolibrary.org/obo/ONTOLOGY_"
    },
    "xsd": {
      "prefix_prefix": "xsd",
      "prefix_reference": "http://www.w3.org/2001/XMLSchema#"
    },
    "shex": {
      "prefix_prefix": "shex",
      "prefix_reference": "http://www.w3.org/ns/shex#"
    },
    "schema": {
      "prefix_prefix": "schema",
      "prefix_reference": "http://schema.org/"
    }
  },
  "default_prefix": "https://example.com/DH_LinkML/",
  "types": {
    "WhitespaceMinimizedString": {
      "name": "WhitespaceMinimizedString",
      "description": "A string that has all whitespace trimmed off of beginning and end, and all internal whitespace segments reduced to single spaces. Whitespace includes #x9 (tab), #xA (linefeed), and #xD (carriage return).",
      "from_schema": "https://example.com/DH_LinkML",
      "typeof": "string",
      "base": "str",
      "uri": "xsd:token"
    },
    "Provenance": {
      "name": "Provenance",
      "description": "A field containing a DataHarmonizer versioning marker. It is issued by DataHarmonizer when validation is applied to a given row of data.",
      "from_schema": "https://example.com/DH_LinkML",
      "typeof": "string",
      "base": "str",
      "uri": "xsd:token"
    },
    "string": {
      "name": "string",
      "description": "A character string",
      "notes": [
        "In RDF serializations, a slot with range of string is treated as a literal or type xsd:string.   If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"string\"."
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "exact_mappings": [
        "schema:Text"
      ],
      "base": "str",
      "uri": "xsd:string"
    },
    "integer": {
      "name": "integer",
      "description": "An integer",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"integer\"."
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "exact_mappings": [
        "schema:Integer"
      ],
      "base": "int",
      "uri": "xsd:integer"
    },
    "boolean": {
      "name": "boolean",
      "description": "A binary (true or false) value",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"boolean\"."
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "exact_mappings": [
        "schema:Boolean"
      ],
      "base": "Bool",
      "uri": "xsd:boolean",
      "repr": "bool"
    },
    "float": {
      "name": "float",
      "description": "A real number that conforms to the xsd:float specification",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"float\"."
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "exact_mappings": [
        "schema:Float"
      ],
      "base": "float",
      "uri": "xsd:float"
    },
    "double": {
      "name": "double",
      "description": "A real number that conforms to the xsd:double specification",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"double\"."
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "close_mappings": [
        "schema:Float"
      ],
      "base": "float",
      "uri": "xsd:double"
    },
    "decimal": {
      "name": "decimal",
      "description": "A real number with arbitrary precision that conforms to the xsd:decimal specification",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"decimal\"."
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "broad_mappings": [
        "schema:Number"
      ],
      "base": "Decimal",
      "uri": "xsd:decimal"
    },
    "time": {
      "name": "time",
      "description": "A time object represents a (local) time of day, independent of any particular day",
      "notes": [
        "URI is dateTime because OWL reasoners do not work with straight date or time",
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"time\"."
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "exact_mappings": [
        "schema:Time"
      ],
      "base": "XSDTime",
      "uri": "xsd:time",
      "repr": "str"
    },
    "date": {
      "name": "date",
      "description": "a date (year, month and day) in an idealized calendar",
      "notes": [
        "URI is dateTime because OWL reasoners don't work with straight date or time",
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"date\"."
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "exact_mappings": [
        "schema:Date"
      ],
      "base": "XSDDate",
      "uri": "xsd:date",
      "repr": "str"
    },
    "datetime": {
      "name": "datetime",
      "description": "The combination of a date and time",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"datetime\"."
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "exact_mappings": [
        "schema:DateTime"
      ],
      "base": "XSDDateTime",
      "uri": "xsd:dateTime",
      "repr": "str"
    },
    "date_or_datetime": {
      "name": "date_or_datetime",
      "description": "Either a date or a datetime",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"date_or_datetime\"."
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "base": "str",
      "uri": "linkml:DateOrDatetime",
      "repr": "str"
    },
    "uriorcurie": {
      "name": "uriorcurie",
      "description": "a URI or a CURIE",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"uriorcurie\"."
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "base": "URIorCURIE",
      "uri": "xsd:anyURI",
      "repr": "str"
    },
    "curie": {
      "name": "curie",
      "conforms_to": "https://www.w3.org/TR/curie/",
      "description": "a compact URI",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"curie\"."
      ],
      "comments": [
        "in RDF serializations this MUST be expanded to a URI",
        "in non-RDF serializations MAY be serialized as the compact representation"
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "base": "Curie",
      "uri": "xsd:string",
      "repr": "str"
    },
    "uri": {
      "name": "uri",
      "conforms_to": "https://www.ietf.org/rfc/rfc3987.txt",
      "description": "a complete URI",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"uri\"."
      ],
      "comments": [
        "in RDF serializations a slot with range of uri is treated as a literal or type xsd:anyURI unless it is an identifier or a reference to an identifier, in which case it is translated directly to a node"
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "close_mappings": [
        "schema:URL"
      ],
      "base": "URI",
      "uri": "xsd:anyURI",
      "repr": "str"
    },
    "ncname": {
      "name": "ncname",
      "description": "Prefix part of CURIE",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"ncname\"."
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "base": "NCName",
      "uri": "xsd:string",
      "repr": "str"
    },
    "objectidentifier": {
      "name": "objectidentifier",
      "description": "A URI or CURIE that represents an object in the model.",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"objectidentifier\"."
      ],
      "comments": [
        "Used for inheritance and type checking"
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "base": "ElementIdentifier",
      "uri": "shex:iri",
      "repr": "str"
    },
    "nodeidentifier": {
      "name": "nodeidentifier",
      "description": "A URI, CURIE or BNODE that represents a node in a model.",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"nodeidentifier\"."
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "base": "NodeIdentifier",
      "uri": "shex:nonLiteral",
      "repr": "str"
    },
    "jsonpointer": {
      "name": "jsonpointer",
      "conforms_to": "https://datatracker.ietf.org/doc/html/rfc6901",
      "description": "A string encoding a JSON Pointer. The value of the string MUST conform to JSON Point syntax and SHOULD dereference to a valid object within the current instance document when encoded in tree form.",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"jsonpointer\"."
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "base": "str",
      "uri": "xsd:string",
      "repr": "str"
    },
    "jsonpath": {
      "name": "jsonpath",
      "conforms_to": "https://www.ietf.org/archive/id/draft-goessner-dispatch-jsonpath-00.html",
      "description": "A string encoding a JSON Path. The value of the string MUST conform to JSON Point syntax and SHOULD dereference to zero or more valid objects within the current instance document when encoded in tree form.",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"jsonpath\"."
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "base": "str",
      "uri": "xsd:string",
      "repr": "str"
    },
    "sparqlpath": {
      "name": "sparqlpath",
      "conforms_to": "https://www.w3.org/TR/sparql11-query/#propertypaths",
      "description": "A string encoding a SPARQL Property Path. The value of the string MUST conform to SPARQL syntax and SHOULD dereference to zero or more valid objects within the current instance document when encoded as RDF.",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"sparqlpath\"."
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "base": "str",
      "uri": "xsd:string",
      "repr": "str"
    }
  },
  "enums": {
    "SchemaSlotTypeMenu": {
      "name": "SchemaSlotTypeMenu",
      "title": "Slot Type",
      "from_schema": "https://example.com/DH_LinkML",
      "permissible_values": {
        "slot": {
          "text": "slot",
          "description": "A field (LinkML slot) that is stored in the schema's field (slot) library.  This field specification is available for customizable reuse in any table (LinkML class).  Note however that its attributes which have values cannot be overriden when reused.",
          "title": "Schema field"
        },
        "slot_usage": {
          "text": "slot_usage",
          "description": "A table field whose name and source attributes come from a schema library field. It can add its own attributes, but cannot overwrite the schema field ones.  (A LinkML schema slot referenced within a class's slot_usage list of slots.)",
          "title": "Table field (from schema)"
        },
        "attribute": {
          "text": "attribute",
          "description": "A table field which is not reused from the schema.  The field can impose its own attribute values.",
          "title": "Table field (independent)"
        }
      }
    },
    "SchemaAnnotationTypeMenu": {
      "name": "SchemaAnnotationTypeMenu",
      "title": "Annotation Type",
      "from_schema": "https://example.com/DH_LinkML",
      "permissible_values": {
        "schema": {
          "text": "schema",
          "title": "Schema"
        },
        "class": {
          "text": "class",
          "title": "Table"
        },
        "slot": {
          "text": "slot",
          "description": "A field (LinkML slot) that is stored in the schema's field (slot) library.  This field specification is available for customizable reuse in any table (LinkML class).  Note however that its attributes which have values cannot be overriden when reused.",
          "title": "Schema field"
        },
        "slot_usage": {
          "text": "slot_usage",
          "description": "A table field whose name and source attributes come from a schema library field. It can add its own attributes, but cannot overwrite the schema field ones.  (A LinkML schema slot referenced within a class's slot_usage list of slots.)",
          "title": "Table field (from schema)"
        },
        "attribute": {
          "text": "attribute",
          "description": "A table field which is not reused from the schema.  The field can impose its own attribute values.",
          "title": "Table field (independent)"
        }
      }
    },
    "EnumCriteriaMenu": {
      "name": "EnumCriteriaMenu",
      "title": "Criteria Menu",
      "from_schema": "https://example.com/DH_LinkML",
      "permissible_values": {
        "include": {
          "text": "include",
          "title": "include"
        },
        "exclude": {
          "text": "exclude",
          "title": "exclude"
        }
      }
    },
    "TrueFalseMenu": {
      "name": "TrueFalseMenu",
      "title": "True/False Menu",
      "from_schema": "https://example.com/DH_LinkML",
      "permissible_values": {
        "TRUE": {
          "text": "TRUE",
          "title": "TRUE"
        },
        "FALSE": {
          "text": "FALSE",
          "title": "FALSE"
        }
      }
    },
    "LanguagesMenu": {
      "name": "LanguagesMenu",
      "title": "Languages Menu",
      "from_schema": "https://example.com/DH_LinkML",
      "permissible_values": {
        "ab": {
          "text": "ab",
          "title": "Abkhazian"
        },
        "aa": {
          "text": "aa",
          "title": "Afar"
        },
        "af": {
          "text": "af",
          "title": "Afrikaans"
        },
        "ak": {
          "text": "ak",
          "title": "Akan"
        },
        "sq": {
          "text": "sq",
          "title": "Albanian"
        },
        "am": {
          "text": "am",
          "title": "Amharic"
        },
        "ar": {
          "text": "ar",
          "title": "Arabic"
        },
        "an": {
          "text": "an",
          "title": "Aragonese"
        },
        "hy": {
          "text": "hy",
          "title": "Armenian"
        },
        "as": {
          "text": "as",
          "title": "Assamese"
        },
        "av": {
          "text": "av",
          "title": "Avaric"
        },
        "ae": {
          "text": "ae",
          "title": "Avestan"
        },
        "ay": {
          "text": "ay",
          "title": "Aymara"
        },
        "az": {
          "text": "az",
          "title": "Azerbaijani"
        },
        "bm": {
          "text": "bm",
          "title": "Bambara"
        },
        "ba": {
          "text": "ba",
          "title": "Bashkir"
        },
        "eu": {
          "text": "eu",
          "title": "Basque"
        },
        "be": {
          "text": "be",
          "title": "Belarusian"
        },
        "bn": {
          "text": "bn",
          "title": "Bengali"
        },
        "bi": {
          "text": "bi",
          "title": "Bislama"
        },
        "bs": {
          "text": "bs",
          "title": "Bosnian"
        },
        "br": {
          "text": "br",
          "title": "Breton"
        },
        "bg": {
          "text": "bg",
          "title": "Bulgarian"
        },
        "my": {
          "text": "my",
          "title": "Burmese"
        },
        "ca": {
          "text": "ca",
          "title": "Catalan, Valencian"
        },
        "ch": {
          "text": "ch",
          "title": "Chamorro"
        },
        "ce": {
          "text": "ce",
          "title": "Chechen"
        },
        "ny": {
          "text": "ny",
          "title": "Chichewa, Chewa, Nyanja"
        },
        "zh": {
          "text": "zh",
          "title": "Chinese"
        },
        "cv": {
          "text": "cv",
          "title": "Chuvash"
        },
        "kw": {
          "text": "kw",
          "title": "Cornish"
        },
        "co": {
          "text": "co",
          "title": "Corsican"
        },
        "cr": {
          "text": "cr",
          "title": "Cree"
        },
        "hr": {
          "text": "hr",
          "title": "Croatian"
        },
        "cs": {
          "text": "cs",
          "title": "Czech"
        },
        "da": {
          "text": "da",
          "title": "Danish"
        },
        "dv": {
          "text": "dv",
          "title": "Divehi, Dhivehi, Maldivian"
        },
        "nl": {
          "text": "nl",
          "title": "Dutch, Flemish"
        },
        "dz": {
          "text": "dz",
          "title": "Dzongkha"
        },
        "en": {
          "text": "en",
          "title": "English"
        },
        "eo": {
          "text": "eo",
          "title": "Esperanto"
        },
        "et": {
          "text": "et",
          "title": "Estonian"
        },
        "ee": {
          "text": "ee",
          "title": "Ewe"
        },
        "fo": {
          "text": "fo",
          "title": "Faroese"
        },
        "fj": {
          "text": "fj",
          "title": "Fijian"
        },
        "fi": {
          "text": "fi",
          "title": "Finnish"
        },
        "fr": {
          "text": "fr",
          "title": "French"
        },
        "fy": {
          "text": "fy",
          "title": "Western Frisian"
        },
        "ff": {
          "text": "ff",
          "title": "Fulah"
        },
        "gd": {
          "text": "gd",
          "title": "Gaelic, Scottish Gaelic"
        },
        "gl": {
          "text": "gl",
          "title": "Galician"
        },
        "lg": {
          "text": "lg",
          "title": "Ganda"
        },
        "ka": {
          "text": "ka",
          "title": "Georgian"
        },
        "de": {
          "text": "de",
          "title": "German"
        },
        "el": {
          "text": "el",
          "title": "Greek, Modern (1453–)"
        },
        "kl": {
          "text": "kl",
          "title": "Kalaallisut, Greenlandic"
        },
        "gn": {
          "text": "gn",
          "title": "Guarani"
        },
        "gu": {
          "text": "gu",
          "title": "Gujarati"
        },
        "ht": {
          "text": "ht",
          "title": "Haitian, Haitian Creole"
        },
        "ha": {
          "text": "ha",
          "title": "Hausa"
        },
        "he": {
          "text": "he",
          "title": "Hebrew"
        },
        "hz": {
          "text": "hz",
          "title": "Herero"
        },
        "hi": {
          "text": "hi",
          "title": "Hindi"
        },
        "ho": {
          "text": "ho",
          "title": "Hiri Motu"
        },
        "hu": {
          "text": "hu",
          "title": "Hungarian"
        },
        "is": {
          "text": "is",
          "title": "Icelandic"
        },
        "io": {
          "text": "io",
          "title": "Ido"
        },
        "ig": {
          "text": "ig",
          "title": "Igbo"
        },
        "id": {
          "text": "id",
          "title": "Indonesian"
        },
        "iu": {
          "text": "iu",
          "title": "Inuktitut"
        },
        "ik": {
          "text": "ik",
          "title": "Inupiaq"
        },
        "ga": {
          "text": "ga",
          "title": "Irish"
        },
        "it": {
          "text": "it",
          "title": "Italian"
        },
        "ja": {
          "text": "ja",
          "title": "Japanese"
        },
        "jv": {
          "text": "jv",
          "title": "Javanese"
        },
        "kn": {
          "text": "kn",
          "title": "Kannada"
        },
        "kr": {
          "text": "kr",
          "title": "Kanuri"
        },
        "ks": {
          "text": "ks",
          "title": "Kashmiri"
        },
        "kk": {
          "text": "kk",
          "title": "Kazakh"
        },
        "km": {
          "text": "km",
          "title": "Central Khmer"
        },
        "ki": {
          "text": "ki",
          "title": "Kikuyu, Gikuyu"
        },
        "rw": {
          "text": "rw",
          "title": "Kinyarwanda"
        },
        "ky": {
          "text": "ky",
          "title": "Kyrgyz, Kirghiz"
        },
        "kv": {
          "text": "kv",
          "title": "Komi"
        },
        "kg": {
          "text": "kg",
          "title": "Kongo"
        },
        "ko": {
          "text": "ko",
          "title": "Korean"
        },
        "kj": {
          "text": "kj",
          "title": "Kuanyama, Kwanyama"
        },
        "ku": {
          "text": "ku",
          "title": "Kurdish"
        },
        "lo": {
          "text": "lo",
          "title": "Lao"
        },
        "la": {
          "text": "la",
          "title": "Latin"
        },
        "lv": {
          "text": "lv",
          "title": "Latvian"
        },
        "li": {
          "text": "li",
          "title": "Limburgan, Limburger, Limburgish"
        },
        "ln": {
          "text": "ln",
          "title": "Lingala"
        },
        "lt": {
          "text": "lt",
          "title": "Lithuanian"
        },
        "lu": {
          "text": "lu",
          "title": "Luba-Katanga"
        },
        "lb": {
          "text": "lb",
          "title": "Luxembourgish, Letzeburgesch"
        },
        "mk": {
          "text": "mk",
          "title": "Macedonian"
        },
        "mg": {
          "text": "mg",
          "title": "Malagasy"
        },
        "ms": {
          "text": "ms",
          "title": "Malay"
        },
        "ml": {
          "text": "ml",
          "title": "Malayalam"
        },
        "mt": {
          "text": "mt",
          "title": "Maltese"
        },
        "gv": {
          "text": "gv",
          "title": "Manx"
        },
        "mi": {
          "text": "mi",
          "title": "Maori"
        },
        "mr": {
          "text": "mr",
          "title": "Marathi"
        },
        "mh": {
          "text": "mh",
          "title": "Marshallese"
        },
        "mn": {
          "text": "mn",
          "title": "Mongolian"
        },
        "na": {
          "text": "na",
          "title": "Nauru"
        },
        "nv": {
          "text": "nv",
          "title": "Navajo, Navaho"
        },
        "nd": {
          "text": "nd",
          "title": "North Ndebele"
        },
        "nr": {
          "text": "nr",
          "title": "South Ndebele"
        },
        "ng": {
          "text": "ng",
          "title": "Ndonga"
        },
        "ne": {
          "text": "ne",
          "title": "Nepali"
        },
        "no": {
          "text": "no",
          "title": "Norwegian"
        },
        "nb": {
          "text": "nb",
          "title": "Norwegian Bokmål"
        },
        "nn": {
          "text": "nn",
          "title": "Norwegian Nynorsk"
        },
        "oc": {
          "text": "oc",
          "title": "Occitan"
        },
        "oj": {
          "text": "oj",
          "title": "Ojibwa"
        },
        "or": {
          "text": "or",
          "title": "Oriya"
        },
        "om": {
          "text": "om",
          "title": "Oromo"
        },
        "os": {
          "text": "os",
          "title": "Ossetian, Ossetic"
        },
        "pi": {
          "text": "pi",
          "title": "Pali"
        },
        "ps": {
          "text": "ps",
          "title": "Pashto, Pushto"
        },
        "fa": {
          "text": "fa",
          "title": "Persian"
        },
        "pl": {
          "text": "pl",
          "title": "Polish"
        },
        "pt": {
          "text": "pt",
          "title": "Portuguese"
        },
        "pa": {
          "text": "pa",
          "title": "Punjabi, Panjabi"
        },
        "qu": {
          "text": "qu",
          "title": "Quechua"
        },
        "ro": {
          "text": "ro",
          "title": "Romanian, Moldavian, Moldovan"
        },
        "rm": {
          "text": "rm",
          "title": "Romansh"
        },
        "rn": {
          "text": "rn",
          "title": "Rundi"
        },
        "ru": {
          "text": "ru",
          "title": "Russian"
        },
        "se": {
          "text": "se",
          "title": "Northern Sami"
        },
        "sm": {
          "text": "sm",
          "title": "Samoan"
        },
        "sg": {
          "text": "sg",
          "title": "Sango"
        },
        "sa": {
          "text": "sa",
          "title": "Sanskrit"
        },
        "sc": {
          "text": "sc",
          "title": "Sardinian"
        },
        "sr": {
          "text": "sr",
          "title": "Serbian"
        },
        "sn": {
          "text": "sn",
          "title": "Shona"
        },
        "sd": {
          "text": "sd",
          "title": "Sindhi"
        },
        "si": {
          "text": "si",
          "title": "Sinhala, Sinhalese"
        },
        "sk": {
          "text": "sk",
          "title": "Slovak"
        },
        "sl": {
          "text": "sl",
          "title": "Slovenian"
        },
        "so": {
          "text": "so",
          "title": "Somali"
        },
        "st": {
          "text": "st",
          "title": "Southern Sotho"
        },
        "es": {
          "text": "es",
          "title": "Spanish, Castilian"
        },
        "su": {
          "text": "su",
          "title": "Sundanese"
        },
        "sw": {
          "text": "sw",
          "title": "Swahili"
        },
        "ss": {
          "text": "ss",
          "title": "Swati"
        },
        "sv": {
          "text": "sv",
          "title": "Swedish"
        },
        "tl": {
          "text": "tl",
          "title": "Tagalog"
        },
        "ty": {
          "text": "ty",
          "title": "Tahitian"
        },
        "tg": {
          "text": "tg",
          "title": "Tajik"
        },
        "ta": {
          "text": "ta",
          "title": "Tamil"
        },
        "tt": {
          "text": "tt",
          "title": "Tatar"
        },
        "te": {
          "text": "te",
          "title": "Telugu"
        },
        "th": {
          "text": "th",
          "title": "Thai"
        },
        "bo": {
          "text": "bo",
          "title": "Tibetan"
        },
        "ti": {
          "text": "ti",
          "title": "Tigrinya"
        },
        "to": {
          "text": "to",
          "title": "Tonga (Tonga Islands)"
        },
        "ts": {
          "text": "ts",
          "title": "Tsonga"
        },
        "tn": {
          "text": "tn",
          "title": "Tswana"
        },
        "tr": {
          "text": "tr",
          "title": "Turkish"
        },
        "tk": {
          "text": "tk",
          "title": "Turkmen"
        },
        "tw": {
          "text": "tw",
          "title": "Twi"
        },
        "ug": {
          "text": "ug",
          "title": "Uighur, Uyghur"
        },
        "uk": {
          "text": "uk",
          "title": "Ukrainian"
        },
        "ur": {
          "text": "ur",
          "title": "Urdu"
        },
        "uz": {
          "text": "uz",
          "title": "Uzbek"
        },
        "ve": {
          "text": "ve",
          "title": "Venda"
        },
        "vi": {
          "text": "vi",
          "title": "Vietnamese"
        },
        "vo": {
          "text": "vo",
          "title": "Volapük"
        },
        "wa": {
          "text": "wa",
          "title": "Walloon"
        },
        "cy": {
          "text": "cy",
          "title": "Welsh"
        },
        "wo": {
          "text": "wo",
          "title": "Wolof"
        },
        "xh": {
          "text": "xh",
          "title": "Xhosa"
        },
        "ii": {
          "text": "ii",
          "title": "Sichuan Yi, Nuosu"
        },
        "yi": {
          "text": "yi",
          "title": "Yiddish"
        },
        "yo": {
          "text": "yo",
          "title": "Yoruba"
        },
        "za": {
          "text": "za",
          "title": "Zhuang, Chuang"
        },
        "zu": {
          "text": "zu",
          "title": "Zulu"
        }
      }
    }
  },
  "slots": {
    "schema_id": {
      "name": "schema_id",
      "annotations": {
        "foreign_key": {
          "tag": "foreign_key",
          "value": "Schema.name"
        }
      },
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Prefix",
        "Class",
        "UniqueKey",
        "Slot",
        "Annotation",
        "Enum",
        "PermissibleValue",
        "EnumSource",
        "Setting",
        "Extension"
      ],
      "required": true
    },
    "class_id": {
      "name": "class_id",
      "annotations": {
        "foreign_key": {
          "tag": "foreign_key",
          "value": "Class.name"
        }
      },
      "description": "The class name that this table is linked to.",
      "title": "Class",
      "from_schema": "https://example.com/DH_LinkML",
      "range": "SchemaClassMenu"
    },
    "slot_id": {
      "name": "slot_id",
      "annotations": {
        "foreign_key": {
          "tag": "foreign_key",
          "value": "Slot.name"
        }
      },
      "description": "The class name that this table is linked to.",
      "title": "Slot",
      "from_schema": "https://example.com/DH_LinkML",
      "range": "WhitespaceMinimizedString",
      "required": true
    },
    "enum_id": {
      "name": "enum_id",
      "annotations": {
        "foreign_key": {
          "tag": "foreign_key",
          "value": "Enum.name"
        }
      },
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "PermissibleValue",
        "EnumSource"
      ],
      "required": true
    },
    "name": {
      "name": "name",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Schema",
        "Class",
        "UniqueKey",
        "Slot",
        "Annotation",
        "Enum",
        "Setting",
        "Extension"
      ],
      "required": true
    },
    "id": {
      "name": "id",
      "description": "The unique URI for identifying this LinkML schema.",
      "title": "ID",
      "comments": [
        "Typically the schema can be downloaded from this URI, but currently it is often left as an example URI during schema development."
      ],
      "examples": [
        {
          "value": "https://example.com/GRDI"
        }
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "identifier": true,
      "domain_of": [
        "Schema"
      ],
      "range": "uri",
      "required": true
    },
    "description": {
      "name": "description",
      "title": "Description",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Schema",
        "Class",
        "UniqueKey",
        "Slot",
        "Enum",
        "PermissibleValue",
        "Setting",
        "Extension"
      ]
    },
    "version": {
      "name": "version",
      "title": "Version",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Schema",
        "Class",
        "Slot"
      ],
      "range": "WhitespaceMinimizedString"
    },
    "in_language": {
      "name": "in_language",
      "description": "This is the language (ISO 639-1 Code; often en for English) that the schema’s class, slot, and enumeration titles, descriptions and other textual items are in.",
      "title": "Default language",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Schema"
      ],
      "range": "LanguagesMenu"
    },
    "locales": {
      "name": "locales",
      "description": "These are the (ISO 639-1) language codes used as keys for language translations held in the schema’s extensions.locales list.",
      "title": "Locales",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Schema"
      ],
      "range": "LanguagesMenu",
      "multivalued": true
    },
    "default_prefix": {
      "name": "default_prefix",
      "title": "Default prefix",
      "comments": [
        "A prefix to assume all classes and slots can be addressed by."
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Schema"
      ],
      "range": "uri",
      "required": true
    },
    "imports": {
      "name": "imports",
      "title": "Imports",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Schema"
      ],
      "range": "WhitespaceMinimizedString",
      "multivalued": true
    },
    "prefix": {
      "name": "prefix",
      "description": "The namespace prefix string.",
      "title": "Prefix",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Prefix"
      ],
      "range": "WhitespaceMinimizedString",
      "required": true
    },
    "reference": {
      "name": "reference",
      "description": "The URI the prefix expands to.",
      "title": "Reference",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Prefix"
      ],
      "range": "uri",
      "required": true
    },
    "title": {
      "name": "title",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Class",
        "Slot",
        "Enum",
        "PermissibleValue"
      ],
      "range": "WhitespaceMinimizedString"
    },
    "class_uri": {
      "name": "class_uri",
      "description": "A URI for identifying this class's semantic type.",
      "title": "Table URI",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Class"
      ],
      "range": "uri"
    },
    "is_a": {
      "name": "is_a",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Class",
        "PermissibleValue"
      ]
    },
    "tree_root": {
      "name": "tree_root",
      "description": "A boolian indicating whether this is a specification for a top-level data container on which serializations are based.",
      "title": "Root Table",
      "comments": [
        "Only one allowed per Schema. See https://linkml.io/linkml/data/csvs.html"
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Class"
      ],
      "any_of": [
        {
          "range": "boolean"
        },
        {
          "range": "TrueFalseMenu"
        }
      ]
    },
    "class_name": {
      "name": "class_name",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "UniqueKey",
        "Slot",
        "Annotation"
      ],
      "range": "SchemaClassMenu"
    },
    "unique_key_slots": {
      "name": "unique_key_slots",
      "description": "A list of a class's slots that make up a unique key",
      "title": "Unique key slots",
      "comments": [
        "See https://linkml.io/linkml/schemas/constraints.html"
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "UniqueKey"
      ],
      "range": "SchemaSlotMenu",
      "required": true,
      "multivalued": true
    },
    "notes": {
      "name": "notes",
      "description": "Editorial notes about an element intended primarily for internal consumption",
      "title": "Notes",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "UniqueKey",
        "Slot",
        "PermissibleValue"
      ],
      "range": "WhitespaceMinimizedString"
    },
    "slot_type": {
      "name": "slot_type",
      "title": "Type",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Slot"
      ],
      "range": "SchemaSlotTypeMenu",
      "required": true
    },
    "rank": {
      "name": "rank",
      "description": "An integer which sets the order of this slot relative to the others within a given class.  This is the LinkML rank attribute.",
      "title": "Ordering",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Slot"
      ],
      "range": "integer"
    },
    "slot_group": {
      "name": "slot_group",
      "description": "The name of a grouping to place slot within during presentation.",
      "title": "Field group",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Slot"
      ],
      "range": "SchemaSlotGroupMenu"
    },
    "inlined": {
      "name": "inlined",
      "title": "Inlined",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Slot"
      ],
      "any_of": [
        {
          "range": "boolean"
        },
        {
          "range": "TrueFalseMenu"
        }
      ]
    },
    "inlined_as_list": {
      "name": "inlined_as_list",
      "title": "Inlined as list",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Slot"
      ],
      "any_of": [
        {
          "range": "boolean"
        },
        {
          "range": "TrueFalseMenu"
        }
      ]
    },
    "slot_uri": {
      "name": "slot_uri",
      "description": "A URI for identifying this field’s (slot’s) semantic type.",
      "title": "Slot URI",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Slot"
      ],
      "range": "uri"
    },
    "range": {
      "name": "range",
      "description": "The range or ranges a slot is associated with.  If more than one, this appears in the slot's specification as a list of \"any of\" ranges.",
      "title": "Range",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Slot"
      ],
      "required": true,
      "multivalued": true,
      "any_of": [
        {
          "range": "SchemaTypeMenu"
        },
        {
          "range": "SchemaClassMenu"
        },
        {
          "range": "SchemaEnumMenu"
        }
      ]
    },
    "unit": {
      "name": "unit",
      "description": "A unit of a numeric value, expressed in the Unified Code for Units of Measure (UCUM, https://ucum.org/) codes.  A UCUM code can be looked up at https://units-of-measurement.org/",
      "title": "Unit",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Slot"
      ],
      "range": "WhitespaceMinimizedString"
    },
    "required": {
      "name": "required",
      "description": "A boolean TRUE indicates this slot is a mandatory data field.",
      "title": "Required",
      "comments": [
        "A mandatory data field will fail validation if empty."
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Slot"
      ],
      "any_of": [
        {
          "range": "boolean"
        },
        {
          "range": "TrueFalseMenu"
        }
      ]
    },
    "recommended": {
      "name": "recommended",
      "description": "A boolean TRUE indicates this slot is a recommended data field.",
      "title": "Recommended",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Slot"
      ],
      "any_of": [
        {
          "range": "boolean"
        },
        {
          "range": "TrueFalseMenu"
        }
      ]
    },
    "aliases": {
      "name": "aliases",
      "description": "A list of other names that slot can be known by.",
      "title": "Aliases",
      "comments": [
        "See https://linkml.io/linkml/schemas/metadata.html#providing-aliases"
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Slot"
      ],
      "range": "WhitespaceMinimizedString",
      "multivalued": true
    },
    "identifier": {
      "name": "identifier",
      "description": "A boolean TRUE indicates this field is an identifier such that each of its row values must be unique within the table.  In LinkML, “If a slot is declared as an identifier then it serves as a unique key for members of that class. It can also be used for inlining as a dict in JSON serializations.”",
      "title": "Identifier",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Slot"
      ],
      "any_of": [
        {
          "range": "boolean"
        },
        {
          "range": "TrueFalseMenu"
        }
      ]
    },
    "multivalued": {
      "name": "multivalued",
      "description": "A boolean TRUE indicates this slot can hold more than one values taken from its range.",
      "title": "Multivalued",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Slot"
      ],
      "any_of": [
        {
          "range": "boolean"
        },
        {
          "range": "TrueFalseMenu"
        }
      ]
    },
    "minimum_value": {
      "name": "minimum_value",
      "description": "A minimum value which is appropriate for the range data type of the slot.",
      "title": "Minimum value",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Slot"
      ],
      "range": "integer"
    },
    "maximum_value": {
      "name": "maximum_value",
      "description": "A maximum value which is appropriate for the range data type of the slot.",
      "title": "Maximum value",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Slot"
      ],
      "range": "integer"
    },
    "minimum_cardinality": {
      "name": "minimum_cardinality",
      "description": "For multivalued slots, a minimum number of values",
      "title": "Minimum cardinality",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Slot"
      ],
      "range": "integer"
    },
    "maximum_cardinality": {
      "name": "maximum_cardinality",
      "description": "For multivalued slots, a maximum number of values",
      "title": "Maximum cardinality",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Slot"
      ],
      "range": "integer"
    },
    "equals_expression": {
      "name": "equals_expression",
      "description": "Enables inferring (calculating) value based on other slot values. This is a server-side LinkML expression, having the syntax of a python expression.",
      "title": "Calculated value",
      "comments": [
        "See https://linkml.io/linkml/schemas/advanced.html#equals-expression"
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Slot"
      ],
      "range": "WhitespaceMinimizedString"
    },
    "pattern": {
      "name": "pattern",
      "description": "A regular expression pattern used to validate a slot's string range data type content.",
      "title": "Pattern",
      "comments": [
        "Regular expressions can begin with ^ to ensure start of string is tested, and $ to ensure up to end is tested."
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Slot"
      ],
      "range": "WhitespaceMinimizedString"
    },
    "todos": {
      "name": "todos",
      "description": "A delimited list of simple conditionals that pertain to this field (e.g. ‘<={today}’ , or ‘<={some_other_field_name}’.  This field may also include “work in progress” notes.",
      "title": "Conditional",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Slot"
      ],
      "range": "WhitespaceMinimizedString",
      "multivalued": true
    },
    "exact_mappings": {
      "name": "exact_mappings",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Slot",
        "PermissibleValue"
      ],
      "range": "WhitespaceMinimizedString",
      "multivalued": true
    },
    "comments": {
      "name": "comments",
      "description": "A free text field for adding other comments to guide usage of field.",
      "title": "Comments",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Slot"
      ],
      "range": "WhitespaceMinimizedString"
    },
    "examples": {
      "name": "examples",
      "description": "A free text field for including examples of string, numeric, date or categorical values.",
      "title": "Examples",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Slot"
      ],
      "range": "WhitespaceMinimizedString"
    },
    "annotation_type": {
      "name": "annotation_type",
      "title": "Annotation on",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Annotation"
      ],
      "range": "SchemaAnnotationTypeMenu",
      "required": true
    },
    "slot_name": {
      "name": "slot_name",
      "description": "If this annotation is attached to a field (LinkML slot), provide the name of the field.",
      "title": "On field",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Annotation"
      ],
      "range": "SchemaSlotMenu"
    },
    "value": {
      "name": "value",
      "title": "Value",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Annotation",
        "Setting",
        "Extension"
      ],
      "range": "string"
    },
    "enum_uri": {
      "name": "enum_uri",
      "description": "A URI for identifying this enumeration's semantic type.",
      "title": "Enum URI",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Enum"
      ],
      "range": "uri"
    },
    "inherits": {
      "name": "inherits",
      "description": "Indicates that this menu inherits choices from another menu, and includes or excludes other values (for selection and validation).",
      "title": "Inherits",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Enum"
      ],
      "range": "SchemaEnumMenu"
    },
    "text": {
      "name": "text",
      "description": "The code (LinkML permissible_value key) for the menu item choice.  It can be plain language or s(The coding name of this choice).",
      "title": "Code",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "PermissibleValue"
      ],
      "range": "WhitespaceMinimizedString",
      "required": true
    },
    "meaning": {
      "name": "meaning",
      "description": "A URI for identifying this choice's semantic type.",
      "title": "Meaning",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "PermissibleValue"
      ],
      "range": "uri"
    },
    "criteria": {
      "name": "criteria",
      "description": "Whether to include or exclude (minus) the source ontology’s given terms (and their underlying terms, if any).",
      "title": "Criteria",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "EnumSource"
      ],
      "range": "EnumCriteriaMenu",
      "required": true
    },
    "source_ontology": {
      "name": "source_ontology",
      "description": "The URI of the source ontology to trust and fetch terms from.",
      "title": "Source ontology",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "EnumSource"
      ],
      "range": "uri"
    },
    "is_direct": {
      "name": "is_direct",
      "description": "Can the vocabulary source be automatically downloaded and processed, or is a manual process involved?",
      "title": "Directly downloadable",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "EnumSource"
      ],
      "any_of": [
        {
          "range": "boolean"
        },
        {
          "range": "TrueFalseMenu"
        }
      ]
    },
    "source_nodes": {
      "name": "source_nodes",
      "description": "The selection of term nodes (and their underlying terms) to allow or exclude selections from, and to validate data by.",
      "title": "Top level term ids",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "EnumSource"
      ],
      "range": "uriorcurie",
      "multivalued": true
    },
    "include_self": {
      "name": "include_self",
      "description": "Include the listed selection of items (top of term branch or otherwise) as selectable items themselves.",
      "title": "Include top level terms",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "EnumSource"
      ],
      "any_of": [
        {
          "range": "boolean"
        },
        {
          "range": "TrueFalseMenu"
        }
      ]
    },
    "relationship_types": {
      "name": "relationship_types",
      "description": "The relations (usually owl:SubClassOf) that compose the hierarchy of terms.",
      "title": "Relations",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "EnumSource"
      ],
      "range": "WhitespaceMinimizedString",
      "multivalued": true
    }
  },
  "classes": {
    "Schema": {
      "name": "Schema",
      "description": "The top-level description of a LinkML schema.  A schema contains tables (LinkML classes) that detail one or more DataHarmonizer templates, fields/columns, and picklists (which are themselves LinkML classes, slots, and enumerations)",
      "title": "Schema",
      "from_schema": "https://example.com/DH_LinkML",
      "see_also": [
        "templates/schema_editor/SOP.pdf"
      ],
      "slot_usage": {
        "name": {
          "name": "name",
          "description": "The coding name of a LinkML schema.",
          "title": "Name",
          "comments": [
            "This is a **CamelCase** formatted name in the LinkML standard naming convention.\nA schema contains classes for describing one or more DataHarmonizer templates, fields/columns, and picklists (which are themselves LinkML classes, slots, and enumerations).\nA schema can also import other schemas and their slots, classes, etc."
          ],
          "examples": [
            {
              "value": "Wastewater"
            }
          ],
          "rank": 1,
          "slot_group": "key",
          "range": "WhitespaceMinimizedString",
          "pattern": "^([A-Z][a-z0-9]+)+$"
        },
        "id": {
          "name": "id",
          "rank": 2,
          "slot_group": "key"
        },
        "description": {
          "name": "description",
          "description": "The plain language description of this LinkML schema.",
          "rank": 3,
          "slot_group": "attributes",
          "range": "string",
          "required": true
        },
        "version": {
          "name": "version",
          "description": "The semantic version identifier for this schema.",
          "comments": [
            "See https://semver.org/"
          ],
          "examples": [
            {
              "value": "1.2.3"
            }
          ],
          "rank": 4,
          "slot_group": "attributes",
          "required": true,
          "pattern": "^\\d+\\.\\d+\\.\\d+$"
        },
        "in_language": {
          "name": "in_language",
          "rank": 5,
          "slot_group": "attributes"
        },
        "locales": {
          "name": "locales",
          "rank": 6,
          "slot_group": "attributes"
        },
        "default_prefix": {
          "name": "default_prefix",
          "rank": 7,
          "slot_group": "attributes"
        },
        "imports": {
          "name": "imports",
          "rank": 8,
          "slot_group": "attributes"
        }
      },
      "attributes": {
        "name": {
          "name": "name",
          "description": "The coding name of a LinkML schema.",
          "title": "Name",
          "comments": [
            "This is a **CamelCase** formatted name in the LinkML standard naming convention.\nA schema contains classes for describing one or more DataHarmonizer templates, fields/columns, and picklists (which are themselves LinkML classes, slots, and enumerations).\nA schema can also import other schemas and their slots, classes, etc."
          ],
          "examples": [
            {
              "value": "Wastewater"
            }
          ],
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 1,
          "alias": "name",
          "owner": "Schema",
          "domain_of": [
            "Schema",
            "Class",
            "UniqueKey",
            "Slot",
            "Annotation",
            "Enum",
            "Setting",
            "Extension"
          ],
          "slot_group": "key",
          "range": "WhitespaceMinimizedString",
          "required": true,
          "pattern": "^([A-Z][a-z0-9]+)+$"
        },
        "id": {
          "name": "id",
          "description": "The unique URI for identifying this LinkML schema.",
          "title": "ID",
          "comments": [
            "Typically the schema can be downloaded from this URI, but currently it is often left as an example URI during schema development."
          ],
          "examples": [
            {
              "value": "https://example.com/GRDI"
            }
          ],
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 2,
          "identifier": true,
          "alias": "id",
          "owner": "Schema",
          "domain_of": [
            "Schema"
          ],
          "slot_group": "key",
          "range": "uri",
          "required": true
        },
        "description": {
          "name": "description",
          "description": "The plain language description of this LinkML schema.",
          "title": "Description",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 3,
          "alias": "description",
          "owner": "Schema",
          "domain_of": [
            "Schema",
            "Class",
            "UniqueKey",
            "Slot",
            "Enum",
            "PermissibleValue",
            "Setting",
            "Extension"
          ],
          "slot_group": "attributes",
          "range": "string",
          "required": true
        },
        "version": {
          "name": "version",
          "description": "The semantic version identifier for this schema.",
          "title": "Version",
          "comments": [
            "See https://semver.org/"
          ],
          "examples": [
            {
              "value": "1.2.3"
            }
          ],
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 4,
          "alias": "version",
          "owner": "Schema",
          "domain_of": [
            "Schema",
            "Class",
            "Slot"
          ],
          "slot_group": "attributes",
          "range": "WhitespaceMinimizedString",
          "required": true,
          "pattern": "^\\d+\\.\\d+\\.\\d+$"
        },
        "in_language": {
          "name": "in_language",
          "description": "This is the language (ISO 639-1 Code; often en for English) that the schema’s class, slot, and enumeration titles, descriptions and other textual items are in.",
          "title": "Default language",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 5,
          "alias": "in_language",
          "owner": "Schema",
          "domain_of": [
            "Schema"
          ],
          "slot_group": "attributes",
          "range": "LanguagesMenu"
        },
        "locales": {
          "name": "locales",
          "description": "These are the (ISO 639-1) language codes used as keys for language translations held in the schema’s extensions.locales list.",
          "title": "Locales",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 6,
          "alias": "locales",
          "owner": "Schema",
          "domain_of": [
            "Schema"
          ],
          "slot_group": "attributes",
          "range": "LanguagesMenu",
          "multivalued": true
        },
        "default_prefix": {
          "name": "default_prefix",
          "title": "Default prefix",
          "comments": [
            "A prefix to assume all classes and slots can be addressed by."
          ],
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 7,
          "alias": "default_prefix",
          "owner": "Schema",
          "domain_of": [
            "Schema"
          ],
          "slot_group": "attributes",
          "range": "uri",
          "required": true
        },
        "imports": {
          "name": "imports",
          "title": "Imports",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 8,
          "alias": "imports",
          "owner": "Schema",
          "domain_of": [
            "Schema"
          ],
          "slot_group": "attributes",
          "range": "WhitespaceMinimizedString",
          "multivalued": true
        }
      },
      "unique_keys": {
        "schema_key": {
          "unique_key_name": "schema_key",
          "unique_key_slots": [
            "name"
          ],
          "description": "A slot is uniquely identified by the schema it appears in as well as its name"
        }
      }
    },
    "Prefix": {
      "name": "Prefix",
      "description": "A prefix used in the URIs mentioned in this schema.",
      "title": "Prefix",
      "from_schema": "https://example.com/DH_LinkML",
      "slot_usage": {
        "schema_id": {
          "name": "schema_id",
          "description": "The coding name of the schema this prefix is listed in.",
          "title": "Schema",
          "rank": 1,
          "slot_group": "key",
          "range": "Schema"
        },
        "prefix": {
          "name": "prefix",
          "rank": 2,
          "slot_group": "key"
        },
        "reference": {
          "name": "reference",
          "rank": 3,
          "slot_group": "attributes"
        }
      },
      "attributes": {
        "schema_id": {
          "name": "schema_id",
          "annotations": {
            "foreign_key": {
              "tag": "foreign_key",
              "value": "Schema.name"
            }
          },
          "description": "The coding name of the schema this prefix is listed in.",
          "title": "Schema",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 1,
          "alias": "schema_id",
          "owner": "Prefix",
          "domain_of": [
            "Prefix",
            "Class",
            "UniqueKey",
            "Slot",
            "Annotation",
            "Enum",
            "PermissibleValue",
            "EnumSource",
            "Setting",
            "Extension"
          ],
          "slot_group": "key",
          "range": "Schema",
          "required": true
        },
        "prefix": {
          "name": "prefix",
          "description": "The namespace prefix string.",
          "title": "Prefix",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 2,
          "alias": "prefix",
          "owner": "Prefix",
          "domain_of": [
            "Prefix"
          ],
          "slot_group": "key",
          "range": "WhitespaceMinimizedString",
          "required": true
        },
        "reference": {
          "name": "reference",
          "description": "The URI the prefix expands to.",
          "title": "Reference",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 3,
          "alias": "reference",
          "owner": "Prefix",
          "domain_of": [
            "Prefix"
          ],
          "slot_group": "attributes",
          "range": "uri",
          "required": true
        }
      },
      "unique_keys": {
        "prefix_key": {
          "unique_key_name": "prefix_key",
          "unique_key_slots": [
            "schema_id",
            "prefix",
            "reference"
          ],
          "description": "A slot is uniquely identified by the schema it appears in as well as its name"
        }
      }
    },
    "Class": {
      "name": "Class",
      "description": "A table (LinkML class) specification contained in given schema.  A table may be a top-level DataHarmonizer \"template\" that can be displayed in a spreadsheet tab, or it may be a subordinate 1-many table linked to a parent table by a primary key field.",
      "title": "Table",
      "from_schema": "https://example.com/DH_LinkML",
      "slot_usage": {
        "schema_id": {
          "name": "schema_id",
          "description": "The coding name of the schema this class is contained in.",
          "title": "Schema",
          "rank": 1,
          "slot_group": "key",
          "range": "Schema"
        },
        "name": {
          "name": "name",
          "description": "A class contained in given schema.",
          "title": "Name",
          "comments": [
            "Each class can be displayed in DataHarmonizer in a spreadsheet tab. A class may be visible as a top-level DataHarmonizer \"template\", or it may be a subordinate 1-many class linked to a parent class by a primary key field."
          ],
          "examples": [
            {
              "value": "WastewaterAMR|WastewaterPathogenAgnostic"
            }
          ],
          "rank": 2,
          "slot_group": "key",
          "range": "WhitespaceMinimizedString",
          "pattern": "^([A-Z]+[a-z0-9]*)+$"
        },
        "title": {
          "name": "title",
          "description": "The plain language name of a LinkML schema class.",
          "title": "Title",
          "rank": 3,
          "slot_group": "attributes",
          "required": true
        },
        "description": {
          "name": "description",
          "rank": 4,
          "slot_group": "attributes",
          "range": "string",
          "required": true
        },
        "version": {
          "name": "version",
          "description": "A semantic version identifier.",
          "comments": [
            "See https://semver.org/"
          ],
          "rank": 5,
          "slot_group": "attributes",
          "pattern": "^\\d+\\.\\d+\\.\\d+$"
        },
        "class_uri": {
          "name": "class_uri",
          "rank": 6,
          "slot_group": "attributes"
        },
        "is_a": {
          "name": "is_a",
          "title": "Is a",
          "rank": 7,
          "slot_group": "attributes",
          "range": "SchemaClassMenu"
        },
        "tree_root": {
          "name": "tree_root",
          "rank": 8,
          "slot_group": "attributes"
        }
      },
      "attributes": {
        "schema_id": {
          "name": "schema_id",
          "annotations": {
            "foreign_key": {
              "tag": "foreign_key",
              "value": "Schema.name"
            }
          },
          "description": "The coding name of the schema this class is contained in.",
          "title": "Schema",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 1,
          "alias": "schema_id",
          "owner": "Class",
          "domain_of": [
            "Prefix",
            "Class",
            "UniqueKey",
            "Slot",
            "Annotation",
            "Enum",
            "PermissibleValue",
            "EnumSource",
            "Setting",
            "Extension"
          ],
          "slot_group": "key",
          "range": "Schema",
          "required": true
        },
        "name": {
          "name": "name",
          "description": "A class contained in given schema.",
          "title": "Name",
          "comments": [
            "Each class can be displayed in DataHarmonizer in a spreadsheet tab. A class may be visible as a top-level DataHarmonizer \"template\", or it may be a subordinate 1-many class linked to a parent class by a primary key field."
          ],
          "examples": [
            {
              "value": "WastewaterAMR|WastewaterPathogenAgnostic"
            }
          ],
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 2,
          "alias": "name",
          "owner": "Class",
          "domain_of": [
            "Schema",
            "Class",
            "UniqueKey",
            "Slot",
            "Annotation",
            "Enum",
            "Setting",
            "Extension"
          ],
          "slot_group": "key",
          "range": "WhitespaceMinimizedString",
          "required": true,
          "pattern": "^([A-Z]+[a-z0-9]*)+$"
        },
        "title": {
          "name": "title",
          "description": "The plain language name of a LinkML schema class.",
          "title": "Title",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 3,
          "alias": "title",
          "owner": "Class",
          "domain_of": [
            "Class",
            "Slot",
            "Enum",
            "PermissibleValue"
          ],
          "slot_group": "attributes",
          "range": "WhitespaceMinimizedString",
          "required": true
        },
        "description": {
          "name": "description",
          "title": "Description",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 4,
          "alias": "description",
          "owner": "Class",
          "domain_of": [
            "Schema",
            "Class",
            "UniqueKey",
            "Slot",
            "Enum",
            "PermissibleValue",
            "Setting",
            "Extension"
          ],
          "slot_group": "attributes",
          "range": "string",
          "required": true
        },
        "version": {
          "name": "version",
          "description": "A semantic version identifier.",
          "title": "Version",
          "comments": [
            "See https://semver.org/"
          ],
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 5,
          "alias": "version",
          "owner": "Class",
          "domain_of": [
            "Schema",
            "Class",
            "Slot"
          ],
          "slot_group": "attributes",
          "range": "WhitespaceMinimizedString",
          "pattern": "^\\d+\\.\\d+\\.\\d+$"
        },
        "class_uri": {
          "name": "class_uri",
          "description": "A URI for identifying this class's semantic type.",
          "title": "Table URI",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 6,
          "alias": "class_uri",
          "owner": "Class",
          "domain_of": [
            "Class"
          ],
          "slot_group": "attributes",
          "range": "uri"
        },
        "is_a": {
          "name": "is_a",
          "title": "Is a",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 7,
          "alias": "is_a",
          "owner": "Class",
          "domain_of": [
            "Class",
            "PermissibleValue"
          ],
          "slot_group": "attributes",
          "range": "SchemaClassMenu"
        },
        "tree_root": {
          "name": "tree_root",
          "description": "A boolian indicating whether this is a specification for a top-level data container on which serializations are based.",
          "title": "Root Table",
          "comments": [
            "Only one allowed per Schema. See https://linkml.io/linkml/data/csvs.html"
          ],
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 8,
          "alias": "tree_root",
          "owner": "Class",
          "domain_of": [
            "Class"
          ],
          "slot_group": "attributes",
          "any_of": [
            {
              "range": "boolean"
            },
            {
              "range": "TrueFalseMenu"
            }
          ]
        }
      },
      "unique_keys": {
        "class_key": {
          "unique_key_name": "class_key",
          "unique_key_slots": [
            "schema_id",
            "name"
          ],
          "description": "A class is uniquely identified by the schema it appears in as well as its name."
        }
      }
    },
    "UniqueKey": {
      "name": "UniqueKey",
      "description": "A table linking the name of each multi-component(slot) key to the schema class it appears in.",
      "title": "Table key",
      "from_schema": "https://example.com/DH_LinkML",
      "slot_usage": {
        "schema_id": {
          "name": "schema_id",
          "description": "A schema name that this unique key class is in.",
          "title": "Schema",
          "rank": 1,
          "slot_group": "key",
          "range": "Schema"
        },
        "class_name": {
          "name": "class_name",
          "description": "A class id (name) that unique key is in",
          "title": "Class",
          "rank": 2,
          "slot_group": "key",
          "required": true
        },
        "name": {
          "name": "name",
          "description": "The coding name of this class unique key.",
          "title": "Name",
          "rank": 3,
          "slot_group": "key",
          "range": "WhitespaceMinimizedString",
          "pattern": "^[a-z]+[a-z0-9_]*$"
        },
        "unique_key_slots": {
          "name": "unique_key_slots",
          "rank": 4,
          "slot_group": "attributes"
        },
        "description": {
          "name": "description",
          "description": "The description of this unique key combination.",
          "rank": 5,
          "slot_group": "attributes",
          "range": "WhitespaceMinimizedString"
        },
        "notes": {
          "name": "notes",
          "rank": 6,
          "slot_group": "attributes"
        }
      },
      "attributes": {
        "schema_id": {
          "name": "schema_id",
          "annotations": {
            "foreign_key": {
              "tag": "foreign_key",
              "value": "Schema.name"
            }
          },
          "description": "A schema name that this unique key class is in.",
          "title": "Schema",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 1,
          "alias": "schema_id",
          "owner": "UniqueKey",
          "domain_of": [
            "Prefix",
            "Class",
            "UniqueKey",
            "Slot",
            "Annotation",
            "Enum",
            "PermissibleValue",
            "EnumSource",
            "Setting",
            "Extension"
          ],
          "slot_group": "key",
          "range": "Schema",
          "required": true
        },
        "class_name": {
          "name": "class_name",
          "description": "A class id (name) that unique key is in",
          "title": "Class",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 2,
          "alias": "class_name",
          "owner": "UniqueKey",
          "domain_of": [
            "UniqueKey",
            "Slot",
            "Annotation"
          ],
          "slot_group": "key",
          "range": "SchemaClassMenu",
          "required": true
        },
        "name": {
          "name": "name",
          "description": "The coding name of this class unique key.",
          "title": "Name",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 3,
          "alias": "name",
          "owner": "UniqueKey",
          "domain_of": [
            "Schema",
            "Class",
            "UniqueKey",
            "Slot",
            "Annotation",
            "Enum",
            "Setting",
            "Extension"
          ],
          "slot_group": "key",
          "range": "WhitespaceMinimizedString",
          "required": true,
          "pattern": "^[a-z]+[a-z0-9_]*$"
        },
        "unique_key_slots": {
          "name": "unique_key_slots",
          "description": "A list of a class's slots that make up a unique key",
          "title": "Unique key slots",
          "comments": [
            "See https://linkml.io/linkml/schemas/constraints.html"
          ],
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 4,
          "alias": "unique_key_slots",
          "owner": "UniqueKey",
          "domain_of": [
            "UniqueKey"
          ],
          "slot_group": "attributes",
          "range": "SchemaSlotMenu",
          "required": true,
          "multivalued": true
        },
        "description": {
          "name": "description",
          "description": "The description of this unique key combination.",
          "title": "Description",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 5,
          "alias": "description",
          "owner": "UniqueKey",
          "domain_of": [
            "Schema",
            "Class",
            "UniqueKey",
            "Slot",
            "Enum",
            "PermissibleValue",
            "Setting",
            "Extension"
          ],
          "slot_group": "attributes",
          "range": "WhitespaceMinimizedString"
        },
        "notes": {
          "name": "notes",
          "description": "Editorial notes about an element intended primarily for internal consumption",
          "title": "Notes",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 6,
          "alias": "notes",
          "owner": "UniqueKey",
          "domain_of": [
            "UniqueKey",
            "Slot",
            "PermissibleValue"
          ],
          "slot_group": "attributes",
          "range": "WhitespaceMinimizedString"
        }
      },
      "unique_keys": {
        "uniquekey_key": {
          "unique_key_name": "uniquekey_key",
          "unique_key_slots": [
            "schema_id",
            "class_name",
            "name"
          ],
          "description": "A slot is uniquely identified by the schema it appears in as well as its name"
        }
      }
    },
    "Slot": {
      "name": "Slot",
      "description": "One or more fields (LinkML slots) contained in given schema. A field (slot) can be used in one or more table (class) specifications.  A field defines a visible column in a template, and can be a basic number, date, string, picklist (categorical or ordinal), or other single-field datatype.",
      "title": "Field",
      "from_schema": "https://example.com/DH_LinkML",
      "slot_usage": {
        "schema_id": {
          "name": "schema_id",
          "description": "The coding name of the schema that this slot is contained in.",
          "title": "Schema",
          "comments": [
            "A schema has a list of slots it defines, but a schema can also import other schemas' slots."
          ],
          "rank": 1,
          "slot_group": "key",
          "range": "Schema"
        },
        "name": {
          "name": "name",
          "description": "The coding name of this schema slot.",
          "title": "Name",
          "comments": [
            "This is a lowercase **snake_case** formatted name in the LinkML standard naming convention.\nA slot can be used in one or more classes (templates). A slot may appear as a visible single-field datatype column in a spreadsheet (template) tab, and can define (in its range attribute) a basic number, date, string, picklist (categorical or ordinal), or other custom datatype.  A slot may also have a range pointing to more complex classes."
          ],
          "rank": 2,
          "slot_group": "key",
          "pattern": "^[a-z]+[a-z0-9_]*$",
          "any_of": [
            {
              "range": "WhitespaceMinimizedString"
            },
            {
              "range": "SchemaSlotMenu"
            }
          ]
        },
        "slot_type": {
          "name": "slot_type",
          "rank": 3,
          "slot_group": "key"
        },
        "class_name": {
          "name": "class_name",
          "description": "The table (class) name that this field is an attribute or a reused field (slot) of.",
          "title": "As used in table",
          "rank": 4,
          "slot_group": "table specific attributes"
        },
        "rank": {
          "name": "rank",
          "rank": 5,
          "slot_group": "table specific attributes"
        },
        "slot_group": {
          "name": "slot_group",
          "rank": 6,
          "slot_group": "table specific attributes"
        },
        "inlined": {
          "name": "inlined",
          "rank": 7,
          "slot_group": "table specific attributes"
        },
        "inlined_as_list": {
          "name": "inlined_as_list",
          "rank": 8,
          "slot_group": "table specific attributes"
        },
        "slot_uri": {
          "name": "slot_uri",
          "rank": 9,
          "slot_group": "attributes"
        },
        "title": {
          "name": "title",
          "description": "The plain language name of this field (slot).",
          "title": "Title",
          "comments": [
            "This can be displayed in applications and documentation."
          ],
          "rank": 10,
          "slot_group": "attributes",
          "required": true
        },
        "range": {
          "name": "range",
          "rank": 11,
          "slot_group": "attributes"
        },
        "unit": {
          "name": "unit",
          "rank": 12,
          "slot_group": "attributes"
        },
        "required": {
          "name": "required",
          "rank": 13,
          "slot_group": "attributes"
        },
        "recommended": {
          "name": "recommended",
          "rank": 14,
          "slot_group": "attributes"
        },
        "description": {
          "name": "description",
          "description": "A plan text description of this LinkML schema slot.",
          "rank": 15,
          "slot_group": "attributes",
          "range": "string",
          "required": true
        },
        "aliases": {
          "name": "aliases",
          "rank": 16,
          "slot_group": "attributes"
        },
        "identifier": {
          "name": "identifier",
          "rank": 17,
          "slot_group": "attributes"
        },
        "multivalued": {
          "name": "multivalued",
          "rank": 18,
          "slot_group": "attributes"
        },
        "minimum_value": {
          "name": "minimum_value",
          "rank": 19,
          "slot_group": "attributes"
        },
        "maximum_value": {
          "name": "maximum_value",
          "rank": 20,
          "slot_group": "attributes"
        },
        "minimum_cardinality": {
          "name": "minimum_cardinality",
          "rank": 21,
          "slot_group": "attributes"
        },
        "maximum_cardinality": {
          "name": "maximum_cardinality",
          "rank": 22,
          "slot_group": "attributes"
        },
        "equals_expression": {
          "name": "equals_expression",
          "rank": 23,
          "slot_group": "attributes"
        },
        "pattern": {
          "name": "pattern",
          "rank": 24,
          "slot_group": "attributes"
        },
        "todos": {
          "name": "todos",
          "rank": 25,
          "slot_group": "attributes"
        },
        "exact_mappings": {
          "name": "exact_mappings",
          "description": "A list of one or more Curies or URIs that point to semantically identical terms.",
          "title": "Exact mappings",
          "rank": 26,
          "slot_group": "attributes"
        },
        "comments": {
          "name": "comments",
          "rank": 27,
          "slot_group": "attributes"
        },
        "examples": {
          "name": "examples",
          "rank": 28,
          "slot_group": "attributes"
        },
        "version": {
          "name": "version",
          "description": "A version number indicating when this slot was introduced.",
          "rank": 29,
          "slot_group": "attributes"
        },
        "notes": {
          "name": "notes",
          "rank": 30,
          "slot_group": "attributes"
        }
      },
      "attributes": {
        "schema_id": {
          "name": "schema_id",
          "annotations": {
            "foreign_key": {
              "tag": "foreign_key",
              "value": "Schema.name"
            }
          },
          "description": "The coding name of the schema that this slot is contained in.",
          "title": "Schema",
          "comments": [
            "A schema has a list of slots it defines, but a schema can also import other schemas' slots."
          ],
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 1,
          "alias": "schema_id",
          "owner": "Slot",
          "domain_of": [
            "Prefix",
            "Class",
            "UniqueKey",
            "Slot",
            "Annotation",
            "Enum",
            "PermissibleValue",
            "EnumSource",
            "Setting",
            "Extension"
          ],
          "slot_group": "key",
          "range": "Schema",
          "required": true
        },
        "name": {
          "name": "name",
          "description": "The coding name of this schema slot.",
          "title": "Name",
          "comments": [
            "This is a lowercase **snake_case** formatted name in the LinkML standard naming convention.\nA slot can be used in one or more classes (templates). A slot may appear as a visible single-field datatype column in a spreadsheet (template) tab, and can define (in its range attribute) a basic number, date, string, picklist (categorical or ordinal), or other custom datatype.  A slot may also have a range pointing to more complex classes."
          ],
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 2,
          "alias": "name",
          "owner": "Slot",
          "domain_of": [
            "Schema",
            "Class",
            "UniqueKey",
            "Slot",
            "Annotation",
            "Enum",
            "Setting",
            "Extension"
          ],
          "slot_group": "key",
          "required": true,
          "pattern": "^[a-z]+[a-z0-9_]*$",
          "any_of": [
            {
              "range": "WhitespaceMinimizedString"
            },
            {
              "range": "SchemaSlotMenu"
            }
          ]
        },
        "slot_type": {
          "name": "slot_type",
          "title": "Type",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 3,
          "alias": "slot_type",
          "owner": "Slot",
          "domain_of": [
            "Slot"
          ],
          "slot_group": "key",
          "range": "SchemaSlotTypeMenu",
          "required": true
        },
        "class_name": {
          "name": "class_name",
          "description": "The table (class) name that this field is an attribute or a reused field (slot) of.",
          "title": "As used in table",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 4,
          "alias": "class_name",
          "owner": "Slot",
          "domain_of": [
            "UniqueKey",
            "Slot",
            "Annotation"
          ],
          "slot_group": "table specific attributes",
          "range": "SchemaClassMenu"
        },
        "rank": {
          "name": "rank",
          "description": "An integer which sets the order of this slot relative to the others within a given class.  This is the LinkML rank attribute.",
          "title": "Ordering",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 5,
          "alias": "rank",
          "owner": "Slot",
          "domain_of": [
            "Slot"
          ],
          "slot_group": "table specific attributes",
          "range": "integer"
        },
        "slot_group": {
          "name": "slot_group",
          "description": "The name of a grouping to place slot within during presentation.",
          "title": "Field group",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 6,
          "alias": "slot_group",
          "owner": "Slot",
          "domain_of": [
            "Slot"
          ],
          "slot_group": "table specific attributes",
          "range": "SchemaSlotGroupMenu"
        },
        "inlined": {
          "name": "inlined",
          "title": "Inlined",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 7,
          "alias": "inlined",
          "owner": "Slot",
          "domain_of": [
            "Slot"
          ],
          "slot_group": "table specific attributes",
          "any_of": [
            {
              "range": "boolean"
            },
            {
              "range": "TrueFalseMenu"
            }
          ]
        },
        "inlined_as_list": {
          "name": "inlined_as_list",
          "title": "Inlined as list",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 8,
          "alias": "inlined_as_list",
          "owner": "Slot",
          "domain_of": [
            "Slot"
          ],
          "slot_group": "table specific attributes",
          "any_of": [
            {
              "range": "boolean"
            },
            {
              "range": "TrueFalseMenu"
            }
          ]
        },
        "slot_uri": {
          "name": "slot_uri",
          "description": "A URI for identifying this field’s (slot’s) semantic type.",
          "title": "Slot URI",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 9,
          "alias": "slot_uri",
          "owner": "Slot",
          "domain_of": [
            "Slot"
          ],
          "slot_group": "attributes",
          "range": "uri"
        },
        "title": {
          "name": "title",
          "description": "The plain language name of this field (slot).",
          "title": "Title",
          "comments": [
            "This can be displayed in applications and documentation."
          ],
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 10,
          "alias": "title",
          "owner": "Slot",
          "domain_of": [
            "Class",
            "Slot",
            "Enum",
            "PermissibleValue"
          ],
          "slot_group": "attributes",
          "range": "WhitespaceMinimizedString",
          "required": true
        },
        "range": {
          "name": "range",
          "description": "The range or ranges a slot is associated with.  If more than one, this appears in the slot's specification as a list of \"any of\" ranges.",
          "title": "Range",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 11,
          "alias": "range",
          "owner": "Slot",
          "domain_of": [
            "Slot"
          ],
          "slot_group": "attributes",
          "required": true,
          "multivalued": true,
          "any_of": [
            {
              "range": "SchemaTypeMenu"
            },
            {
              "range": "SchemaClassMenu"
            },
            {
              "range": "SchemaEnumMenu"
            }
          ]
        },
        "unit": {
          "name": "unit",
          "description": "A unit of a numeric value, expressed in the Unified Code for Units of Measure (UCUM, https://ucum.org/) codes.  A UCUM code can be looked up at https://units-of-measurement.org/",
          "title": "Unit",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 12,
          "alias": "unit",
          "owner": "Slot",
          "domain_of": [
            "Slot"
          ],
          "slot_group": "attributes",
          "range": "WhitespaceMinimizedString"
        },
        "required": {
          "name": "required",
          "description": "A boolean TRUE indicates this slot is a mandatory data field.",
          "title": "Required",
          "comments": [
            "A mandatory data field will fail validation if empty."
          ],
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 13,
          "alias": "required",
          "owner": "Slot",
          "domain_of": [
            "Slot"
          ],
          "slot_group": "attributes",
          "any_of": [
            {
              "range": "boolean"
            },
            {
              "range": "TrueFalseMenu"
            }
          ]
        },
        "recommended": {
          "name": "recommended",
          "description": "A boolean TRUE indicates this slot is a recommended data field.",
          "title": "Recommended",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 14,
          "alias": "recommended",
          "owner": "Slot",
          "domain_of": [
            "Slot"
          ],
          "slot_group": "attributes",
          "any_of": [
            {
              "range": "boolean"
            },
            {
              "range": "TrueFalseMenu"
            }
          ]
        },
        "description": {
          "name": "description",
          "description": "A plan text description of this LinkML schema slot.",
          "title": "Description",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 15,
          "alias": "description",
          "owner": "Slot",
          "domain_of": [
            "Schema",
            "Class",
            "UniqueKey",
            "Slot",
            "Enum",
            "PermissibleValue",
            "Setting",
            "Extension"
          ],
          "slot_group": "attributes",
          "range": "string",
          "required": true
        },
        "aliases": {
          "name": "aliases",
          "description": "A list of other names that slot can be known by.",
          "title": "Aliases",
          "comments": [
            "See https://linkml.io/linkml/schemas/metadata.html#providing-aliases"
          ],
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 16,
          "alias": "aliases",
          "owner": "Slot",
          "domain_of": [
            "Slot"
          ],
          "slot_group": "attributes",
          "range": "WhitespaceMinimizedString",
          "multivalued": true
        },
        "identifier": {
          "name": "identifier",
          "description": "A boolean TRUE indicates this field is an identifier such that each of its row values must be unique within the table.  In LinkML, “If a slot is declared as an identifier then it serves as a unique key for members of that class. It can also be used for inlining as a dict in JSON serializations.”",
          "title": "Identifier",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 17,
          "alias": "identifier",
          "owner": "Slot",
          "domain_of": [
            "Slot"
          ],
          "slot_group": "attributes",
          "any_of": [
            {
              "range": "boolean"
            },
            {
              "range": "TrueFalseMenu"
            }
          ]
        },
        "multivalued": {
          "name": "multivalued",
          "description": "A boolean TRUE indicates this slot can hold more than one values taken from its range.",
          "title": "Multivalued",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 18,
          "alias": "multivalued",
          "owner": "Slot",
          "domain_of": [
            "Slot"
          ],
          "slot_group": "attributes",
          "any_of": [
            {
              "range": "boolean"
            },
            {
              "range": "TrueFalseMenu"
            }
          ]
        },
        "minimum_value": {
          "name": "minimum_value",
          "description": "A minimum value which is appropriate for the range data type of the slot.",
          "title": "Minimum value",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 19,
          "alias": "minimum_value",
          "owner": "Slot",
          "domain_of": [
            "Slot"
          ],
          "slot_group": "attributes",
          "range": "integer"
        },
        "maximum_value": {
          "name": "maximum_value",
          "description": "A maximum value which is appropriate for the range data type of the slot.",
          "title": "Maximum value",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 20,
          "alias": "maximum_value",
          "owner": "Slot",
          "domain_of": [
            "Slot"
          ],
          "slot_group": "attributes",
          "range": "integer"
        },
        "minimum_cardinality": {
          "name": "minimum_cardinality",
          "description": "For multivalued slots, a minimum number of values",
          "title": "Minimum cardinality",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 21,
          "alias": "minimum_cardinality",
          "owner": "Slot",
          "domain_of": [
            "Slot"
          ],
          "slot_group": "attributes",
          "range": "integer"
        },
        "maximum_cardinality": {
          "name": "maximum_cardinality",
          "description": "For multivalued slots, a maximum number of values",
          "title": "Maximum cardinality",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 22,
          "alias": "maximum_cardinality",
          "owner": "Slot",
          "domain_of": [
            "Slot"
          ],
          "slot_group": "attributes",
          "range": "integer"
        },
        "equals_expression": {
          "name": "equals_expression",
          "description": "Enables inferring (calculating) value based on other slot values. This is a server-side LinkML expression, having the syntax of a python expression.",
          "title": "Calculated value",
          "comments": [
            "See https://linkml.io/linkml/schemas/advanced.html#equals-expression"
          ],
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 23,
          "alias": "equals_expression",
          "owner": "Slot",
          "domain_of": [
            "Slot"
          ],
          "slot_group": "attributes",
          "range": "WhitespaceMinimizedString"
        },
        "pattern": {
          "name": "pattern",
          "description": "A regular expression pattern used to validate a slot's string range data type content.",
          "title": "Pattern",
          "comments": [
            "Regular expressions can begin with ^ to ensure start of string is tested, and $ to ensure up to end is tested."
          ],
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 24,
          "alias": "pattern",
          "owner": "Slot",
          "domain_of": [
            "Slot"
          ],
          "slot_group": "attributes",
          "range": "WhitespaceMinimizedString"
        },
        "todos": {
          "name": "todos",
          "description": "A delimited list of simple conditionals that pertain to this field (e.g. ‘<={today}’ , or ‘<={some_other_field_name}’.  This field may also include “work in progress” notes.",
          "title": "Conditional",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 25,
          "alias": "todos",
          "owner": "Slot",
          "domain_of": [
            "Slot"
          ],
          "slot_group": "attributes",
          "range": "WhitespaceMinimizedString",
          "multivalued": true
        },
        "exact_mappings": {
          "name": "exact_mappings",
          "description": "A list of one or more Curies or URIs that point to semantically identical terms.",
          "title": "Exact mappings",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 26,
          "alias": "exact_mappings",
          "owner": "Slot",
          "domain_of": [
            "Slot",
            "PermissibleValue"
          ],
          "slot_group": "attributes",
          "range": "WhitespaceMinimizedString",
          "multivalued": true
        },
        "comments": {
          "name": "comments",
          "description": "A free text field for adding other comments to guide usage of field.",
          "title": "Comments",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 27,
          "alias": "comments",
          "owner": "Slot",
          "domain_of": [
            "Slot"
          ],
          "slot_group": "attributes",
          "range": "WhitespaceMinimizedString"
        },
        "examples": {
          "name": "examples",
          "description": "A free text field for including examples of string, numeric, date or categorical values.",
          "title": "Examples",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 28,
          "alias": "examples",
          "owner": "Slot",
          "domain_of": [
            "Slot"
          ],
          "slot_group": "attributes",
          "range": "WhitespaceMinimizedString"
        },
        "version": {
          "name": "version",
          "description": "A version number indicating when this slot was introduced.",
          "title": "Version",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 29,
          "alias": "version",
          "owner": "Slot",
          "domain_of": [
            "Schema",
            "Class",
            "Slot"
          ],
          "slot_group": "attributes",
          "range": "WhitespaceMinimizedString"
        },
        "notes": {
          "name": "notes",
          "description": "Editorial notes about an element intended primarily for internal consumption",
          "title": "Notes",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 30,
          "alias": "notes",
          "owner": "Slot",
          "domain_of": [
            "UniqueKey",
            "Slot",
            "PermissibleValue"
          ],
          "slot_group": "attributes",
          "range": "WhitespaceMinimizedString"
        }
      },
      "unique_keys": {
        "slot_key": {
          "unique_key_name": "slot_key",
          "unique_key_slots": [
            "schema_id",
            "name",
            "slot_type"
          ],
          "description": "A slot is uniquely identified by the schema it appears in as well as its name"
        }
      }
    },
    "Annotation": {
      "name": "Annotation",
      "description": "One or more fields (LinkML slots) contained in given schema. A field (slot) can be used in one or more table (class) specifications.  A field defines a visible column in a template, and can be a basic number, date, string, picklist (categorical or ordinal), or other single-field datatype.",
      "title": "Annotation",
      "from_schema": "https://example.com/DH_LinkML",
      "slot_usage": {
        "schema_id": {
          "name": "schema_id",
          "description": "The coding name of the schema this enumeration is contained in.",
          "title": "Schema",
          "rank": 1,
          "slot_group": "key",
          "range": "Schema"
        },
        "annotation_type": {
          "name": "annotation_type",
          "rank": 2,
          "slot_group": "key"
        },
        "class_name": {
          "name": "class_name",
          "description": "If this annotation is attached to a table (LinkML class), provide the name of the table.",
          "title": "On table",
          "rank": 3,
          "slot_group": "key"
        },
        "slot_name": {
          "name": "slot_name",
          "rank": 4,
          "slot_group": "key"
        },
        "name": {
          "name": "name",
          "description": "The annotation key (i.e. name of the annotation).",
          "title": "Key",
          "comments": [
            "This is a lowercase **snake_case** formatted name in the LinkML standard naming convention."
          ],
          "rank": 5,
          "slot_group": "key",
          "range": "WhitespaceMinimizedString",
          "pattern": "^[a-z]+[a-z0-9_]*$"
        },
        "value": {
          "name": "value",
          "description": "The annotation’s value, which can be a string or an object of any kind (in non-serialized data).",
          "rank": 6,
          "slot_group": "attributes"
        }
      },
      "attributes": {
        "schema_id": {
          "name": "schema_id",
          "annotations": {
            "foreign_key": {
              "tag": "foreign_key",
              "value": "Schema.name"
            }
          },
          "description": "The coding name of the schema this enumeration is contained in.",
          "title": "Schema",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 1,
          "alias": "schema_id",
          "owner": "Annotation",
          "domain_of": [
            "Prefix",
            "Class",
            "UniqueKey",
            "Slot",
            "Annotation",
            "Enum",
            "PermissibleValue",
            "EnumSource",
            "Setting",
            "Extension"
          ],
          "slot_group": "key",
          "range": "Schema",
          "required": true
        },
        "annotation_type": {
          "name": "annotation_type",
          "title": "Annotation on",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 2,
          "alias": "annotation_type",
          "owner": "Annotation",
          "domain_of": [
            "Annotation"
          ],
          "slot_group": "key",
          "range": "SchemaAnnotationTypeMenu",
          "required": true
        },
        "class_name": {
          "name": "class_name",
          "description": "If this annotation is attached to a table (LinkML class), provide the name of the table.",
          "title": "On table",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 3,
          "alias": "class_name",
          "owner": "Annotation",
          "domain_of": [
            "UniqueKey",
            "Slot",
            "Annotation"
          ],
          "slot_group": "key",
          "range": "SchemaClassMenu"
        },
        "slot_name": {
          "name": "slot_name",
          "description": "If this annotation is attached to a field (LinkML slot), provide the name of the field.",
          "title": "On field",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 4,
          "alias": "slot_name",
          "owner": "Annotation",
          "domain_of": [
            "Annotation"
          ],
          "slot_group": "key",
          "range": "SchemaSlotMenu"
        },
        "name": {
          "name": "name",
          "description": "The annotation key (i.e. name of the annotation).",
          "title": "Key",
          "comments": [
            "This is a lowercase **snake_case** formatted name in the LinkML standard naming convention."
          ],
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 5,
          "alias": "name",
          "owner": "Annotation",
          "domain_of": [
            "Schema",
            "Class",
            "UniqueKey",
            "Slot",
            "Annotation",
            "Enum",
            "Setting",
            "Extension"
          ],
          "slot_group": "key",
          "range": "WhitespaceMinimizedString",
          "required": true,
          "pattern": "^[a-z]+[a-z0-9_]*$"
        },
        "value": {
          "name": "value",
          "description": "The annotation’s value, which can be a string or an object of any kind (in non-serialized data).",
          "title": "Value",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 6,
          "alias": "value",
          "owner": "Annotation",
          "domain_of": [
            "Annotation",
            "Setting",
            "Extension"
          ],
          "slot_group": "attributes",
          "range": "string"
        }
      },
      "unique_keys": {
        "slot_key": {
          "unique_key_name": "slot_key",
          "unique_key_slots": [
            "schema_id",
            "name",
            "annotation_type"
          ],
          "description": "A slot is uniquely identified by the schema it appears in as well as its name"
        }
      }
    },
    "Enum": {
      "name": "Enum",
      "description": "One or more enumerations in given schema.  An enumeration can be used in the \"range\" or \"any of\" attribute of a slot.  Each enumeration has a flat list or hierarchy of permitted values.",
      "title": "Picklist",
      "from_schema": "https://example.com/DH_LinkML",
      "slot_usage": {
        "schema_id": {
          "name": "schema_id",
          "description": "The coding name of the schema this enumeration is contained in.",
          "title": "Schema",
          "rank": 1,
          "slot_group": "key",
          "range": "Schema"
        },
        "name": {
          "name": "name",
          "description": "The coding name of this LinkML schema enumeration.",
          "title": "Name",
          "comments": [
            "See https://linkml.io/linkml/schemas/enums.html and https://linkml.io/linkml-model/latest/docs/EnumDefinition/"
          ],
          "rank": 2,
          "slot_group": "key",
          "range": "WhitespaceMinimizedString",
          "pattern": "^([A-Z]+[a-z0-9]*)+$"
        },
        "title": {
          "name": "title",
          "description": "The plain language name of this enumeration menu.",
          "title": "Title",
          "rank": 3,
          "slot_group": "attributes",
          "required": true
        },
        "description": {
          "name": "description",
          "description": "A plan text description of this LinkML schema enumeration menu of terms.",
          "rank": 4,
          "slot_group": "attributes",
          "range": "string"
        },
        "enum_uri": {
          "name": "enum_uri",
          "rank": 5,
          "slot_group": "attributes"
        },
        "inherits": {
          "name": "inherits",
          "rank": 6,
          "slot_group": "attributes"
        }
      },
      "attributes": {
        "schema_id": {
          "name": "schema_id",
          "annotations": {
            "foreign_key": {
              "tag": "foreign_key",
              "value": "Schema.name"
            }
          },
          "description": "The coding name of the schema this enumeration is contained in.",
          "title": "Schema",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 1,
          "alias": "schema_id",
          "owner": "Enum",
          "domain_of": [
            "Prefix",
            "Class",
            "UniqueKey",
            "Slot",
            "Annotation",
            "Enum",
            "PermissibleValue",
            "EnumSource",
            "Setting",
            "Extension"
          ],
          "slot_group": "key",
          "range": "Schema",
          "required": true
        },
        "name": {
          "name": "name",
          "description": "The coding name of this LinkML schema enumeration.",
          "title": "Name",
          "comments": [
            "See https://linkml.io/linkml/schemas/enums.html and https://linkml.io/linkml-model/latest/docs/EnumDefinition/"
          ],
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 2,
          "alias": "name",
          "owner": "Enum",
          "domain_of": [
            "Schema",
            "Class",
            "UniqueKey",
            "Slot",
            "Annotation",
            "Enum",
            "Setting",
            "Extension"
          ],
          "slot_group": "key",
          "range": "WhitespaceMinimizedString",
          "required": true,
          "pattern": "^([A-Z]+[a-z0-9]*)+$"
        },
        "title": {
          "name": "title",
          "description": "The plain language name of this enumeration menu.",
          "title": "Title",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 3,
          "alias": "title",
          "owner": "Enum",
          "domain_of": [
            "Class",
            "Slot",
            "Enum",
            "PermissibleValue"
          ],
          "slot_group": "attributes",
          "range": "WhitespaceMinimizedString",
          "required": true
        },
        "description": {
          "name": "description",
          "description": "A plan text description of this LinkML schema enumeration menu of terms.",
          "title": "Description",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 4,
          "alias": "description",
          "owner": "Enum",
          "domain_of": [
            "Schema",
            "Class",
            "UniqueKey",
            "Slot",
            "Enum",
            "PermissibleValue",
            "Setting",
            "Extension"
          ],
          "slot_group": "attributes",
          "range": "string"
        },
        "enum_uri": {
          "name": "enum_uri",
          "description": "A URI for identifying this enumeration's semantic type.",
          "title": "Enum URI",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 5,
          "alias": "enum_uri",
          "owner": "Enum",
          "domain_of": [
            "Enum"
          ],
          "slot_group": "attributes",
          "range": "uri"
        },
        "inherits": {
          "name": "inherits",
          "description": "Indicates that this menu inherits choices from another menu, and includes or excludes other values (for selection and validation).",
          "title": "Inherits",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 6,
          "alias": "inherits",
          "owner": "Enum",
          "domain_of": [
            "Enum"
          ],
          "slot_group": "attributes",
          "range": "SchemaEnumMenu"
        }
      },
      "unique_keys": {
        "enum_key": {
          "unique_key_name": "enum_key",
          "unique_key_slots": [
            "schema_id",
            "name"
          ],
          "description": "An enumeration is uniquely identified by the schema it appears in as well as its name."
        }
      }
    },
    "PermissibleValue": {
      "name": "PermissibleValue",
      "description": "An enumeration picklist value.",
      "title": "Picklist choices",
      "from_schema": "https://example.com/DH_LinkML",
      "slot_usage": {
        "schema_id": {
          "name": "schema_id",
          "description": "The coding name of the schema this menu choice's menu (enumeration) is contained in.",
          "title": "Schema",
          "rank": 1,
          "slot_group": "key",
          "range": "Schema"
        },
        "enum_id": {
          "name": "enum_id",
          "description": "The coding name of the menu (enumeration) that this choice is contained in.",
          "title": "Enum",
          "rank": 2,
          "slot_group": "key",
          "range": "Enum"
        },
        "text": {
          "name": "text",
          "rank": 3,
          "slot_group": "key"
        },
        "is_a": {
          "name": "is_a",
          "description": "The parent term name (in the same enumeration) of this term, if any.",
          "title": "Parent",
          "rank": 4,
          "slot_group": "attributes",
          "range": "WhitespaceMinimizedString"
        },
        "title": {
          "name": "title",
          "description": "The plain language title of this menu choice (LinkML PermissibleValue) to display. If none, the code will be dsplayed.",
          "title": "title",
          "rank": 5,
          "slot_group": "attributes"
        },
        "description": {
          "name": "description",
          "description": "A plan text description of the meaning of this menu choice.",
          "rank": 6,
          "slot_group": "attributes",
          "range": "string"
        },
        "exact_mappings": {
          "name": "exact_mappings",
          "title": "Code mappings",
          "rank": 7,
          "slot_group": "attributes"
        },
        "meaning": {
          "name": "meaning",
          "rank": 8,
          "slot_group": "attributes"
        },
        "notes": {
          "name": "notes",
          "rank": 9,
          "slot_group": "attributes"
        }
      },
      "attributes": {
        "schema_id": {
          "name": "schema_id",
          "annotations": {
            "foreign_key": {
              "tag": "foreign_key",
              "value": "Schema.name"
            }
          },
          "description": "The coding name of the schema this menu choice's menu (enumeration) is contained in.",
          "title": "Schema",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 1,
          "alias": "schema_id",
          "owner": "PermissibleValue",
          "domain_of": [
            "Prefix",
            "Class",
            "UniqueKey",
            "Slot",
            "Annotation",
            "Enum",
            "PermissibleValue",
            "EnumSource",
            "Setting",
            "Extension"
          ],
          "slot_group": "key",
          "range": "Schema",
          "required": true
        },
        "enum_id": {
          "name": "enum_id",
          "annotations": {
            "foreign_key": {
              "tag": "foreign_key",
              "value": "Enum.name"
            }
          },
          "description": "The coding name of the menu (enumeration) that this choice is contained in.",
          "title": "Enum",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 2,
          "alias": "enum_id",
          "owner": "PermissibleValue",
          "domain_of": [
            "PermissibleValue",
            "EnumSource"
          ],
          "slot_group": "key",
          "range": "Enum",
          "required": true
        },
        "text": {
          "name": "text",
          "description": "The code (LinkML permissible_value key) for the menu item choice.  It can be plain language or s(The coding name of this choice).",
          "title": "Code",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 3,
          "alias": "text",
          "owner": "PermissibleValue",
          "domain_of": [
            "PermissibleValue"
          ],
          "slot_group": "key",
          "range": "WhitespaceMinimizedString",
          "required": true
        },
        "is_a": {
          "name": "is_a",
          "description": "The parent term name (in the same enumeration) of this term, if any.",
          "title": "Parent",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 4,
          "alias": "is_a",
          "owner": "PermissibleValue",
          "domain_of": [
            "Class",
            "PermissibleValue"
          ],
          "slot_group": "attributes",
          "range": "WhitespaceMinimizedString"
        },
        "title": {
          "name": "title",
          "description": "The plain language title of this menu choice (LinkML PermissibleValue) to display. If none, the code will be dsplayed.",
          "title": "title",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 5,
          "alias": "title",
          "owner": "PermissibleValue",
          "domain_of": [
            "Class",
            "Slot",
            "Enum",
            "PermissibleValue"
          ],
          "slot_group": "attributes",
          "range": "WhitespaceMinimizedString"
        },
        "description": {
          "name": "description",
          "description": "A plan text description of the meaning of this menu choice.",
          "title": "Description",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 6,
          "alias": "description",
          "owner": "PermissibleValue",
          "domain_of": [
            "Schema",
            "Class",
            "UniqueKey",
            "Slot",
            "Enum",
            "PermissibleValue",
            "Setting",
            "Extension"
          ],
          "slot_group": "attributes",
          "range": "string"
        },
        "exact_mappings": {
          "name": "exact_mappings",
          "title": "Code mappings",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 7,
          "alias": "exact_mappings",
          "owner": "PermissibleValue",
          "domain_of": [
            "Slot",
            "PermissibleValue"
          ],
          "slot_group": "attributes",
          "range": "WhitespaceMinimizedString",
          "multivalued": true
        },
        "meaning": {
          "name": "meaning",
          "description": "A URI for identifying this choice's semantic type.",
          "title": "Meaning",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 8,
          "alias": "meaning",
          "owner": "PermissibleValue",
          "domain_of": [
            "PermissibleValue"
          ],
          "slot_group": "attributes",
          "range": "uri"
        },
        "notes": {
          "name": "notes",
          "description": "Editorial notes about an element intended primarily for internal consumption",
          "title": "Notes",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 9,
          "alias": "notes",
          "owner": "PermissibleValue",
          "domain_of": [
            "UniqueKey",
            "Slot",
            "PermissibleValue"
          ],
          "slot_group": "attributes",
          "range": "WhitespaceMinimizedString"
        }
      },
      "unique_keys": {
        "permissiblevalue_key": {
          "unique_key_name": "permissiblevalue_key",
          "unique_key_slots": [
            "schema_id",
            "enum_id",
            "text"
          ],
          "description": "An enumeration is uniquely identified by the schema it appears in as well as its name."
        }
      }
    },
    "EnumSource": {
      "name": "EnumSource",
      "description": "The external (URI reachable) source of an ontology or other parseable vocabulary that aids in composing this menu.  This includes specifications for extracting nodes or branches for inclusion or exclusion in the picklist (LinkML) enumeration.",
      "title": "Picklist config",
      "from_schema": "https://example.com/DH_LinkML",
      "slot_usage": {
        "schema_id": {
          "name": "schema_id",
          "description": "The coding name of the schema this menu inclusion and exclusion criteria pertain to.",
          "title": "Schema",
          "rank": 1,
          "slot_group": "key",
          "range": "Schema"
        },
        "enum_id": {
          "name": "enum_id",
          "description": "The coding name of the menu (enumeration) that this inclusion criteria pertains to.",
          "title": "Enum",
          "rank": 2,
          "slot_group": "key",
          "range": "Enum"
        },
        "criteria": {
          "name": "criteria",
          "rank": 3,
          "slot_group": "key"
        },
        "source_ontology": {
          "name": "source_ontology",
          "rank": 4,
          "slot_group": "key"
        },
        "is_direct": {
          "name": "is_direct",
          "rank": 5,
          "slot_group": "attributes"
        },
        "source_nodes": {
          "name": "source_nodes",
          "rank": 6,
          "slot_group": "attributes"
        },
        "include_self": {
          "name": "include_self",
          "rank": 7,
          "slot_group": "attributes"
        },
        "relationship_types": {
          "name": "relationship_types",
          "rank": 8,
          "slot_group": "attributes"
        }
      },
      "attributes": {
        "schema_id": {
          "name": "schema_id",
          "annotations": {
            "foreign_key": {
              "tag": "foreign_key",
              "value": "Schema.name"
            }
          },
          "description": "The coding name of the schema this menu inclusion and exclusion criteria pertain to.",
          "title": "Schema",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 1,
          "alias": "schema_id",
          "owner": "EnumSource",
          "domain_of": [
            "Prefix",
            "Class",
            "UniqueKey",
            "Slot",
            "Annotation",
            "Enum",
            "PermissibleValue",
            "EnumSource",
            "Setting",
            "Extension"
          ],
          "slot_group": "key",
          "range": "Schema",
          "required": true
        },
        "enum_id": {
          "name": "enum_id",
          "annotations": {
            "foreign_key": {
              "tag": "foreign_key",
              "value": "Enum.name"
            }
          },
          "description": "The coding name of the menu (enumeration) that this inclusion criteria pertains to.",
          "title": "Enum",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 2,
          "alias": "enum_id",
          "owner": "EnumSource",
          "domain_of": [
            "PermissibleValue",
            "EnumSource"
          ],
          "slot_group": "key",
          "range": "Enum",
          "required": true
        },
        "criteria": {
          "name": "criteria",
          "description": "Whether to include or exclude (minus) the source ontology’s given terms (and their underlying terms, if any).",
          "title": "Criteria",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 3,
          "alias": "criteria",
          "owner": "EnumSource",
          "domain_of": [
            "EnumSource"
          ],
          "slot_group": "key",
          "range": "EnumCriteriaMenu",
          "required": true
        },
        "source_ontology": {
          "name": "source_ontology",
          "description": "The URI of the source ontology to trust and fetch terms from.",
          "title": "Source ontology",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 4,
          "alias": "source_ontology",
          "owner": "EnumSource",
          "domain_of": [
            "EnumSource"
          ],
          "slot_group": "key",
          "range": "uri"
        },
        "is_direct": {
          "name": "is_direct",
          "description": "Can the vocabulary source be automatically downloaded and processed, or is a manual process involved?",
          "title": "Directly downloadable",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 5,
          "alias": "is_direct",
          "owner": "EnumSource",
          "domain_of": [
            "EnumSource"
          ],
          "slot_group": "attributes",
          "any_of": [
            {
              "range": "boolean"
            },
            {
              "range": "TrueFalseMenu"
            }
          ]
        },
        "source_nodes": {
          "name": "source_nodes",
          "description": "The selection of term nodes (and their underlying terms) to allow or exclude selections from, and to validate data by.",
          "title": "Top level term ids",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 6,
          "alias": "source_nodes",
          "owner": "EnumSource",
          "domain_of": [
            "EnumSource"
          ],
          "slot_group": "attributes",
          "range": "uriorcurie",
          "multivalued": true
        },
        "include_self": {
          "name": "include_self",
          "description": "Include the listed selection of items (top of term branch or otherwise) as selectable items themselves.",
          "title": "Include top level terms",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 7,
          "alias": "include_self",
          "owner": "EnumSource",
          "domain_of": [
            "EnumSource"
          ],
          "slot_group": "attributes",
          "any_of": [
            {
              "range": "boolean"
            },
            {
              "range": "TrueFalseMenu"
            }
          ]
        },
        "relationship_types": {
          "name": "relationship_types",
          "description": "The relations (usually owl:SubClassOf) that compose the hierarchy of terms.",
          "title": "Relations",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 8,
          "alias": "relationship_types",
          "owner": "EnumSource",
          "domain_of": [
            "EnumSource"
          ],
          "slot_group": "attributes",
          "range": "WhitespaceMinimizedString",
          "multivalued": true
        }
      },
      "unique_keys": {
        "enum_source_key": {
          "unique_key_name": "enum_source_key",
          "unique_key_slots": [
            "schema_id",
            "enum_id",
            "criteria",
            "source_ontology"
          ],
          "description": "A picklist source consists of the schema, enumeration, inclusion or exclusion flag, and source URI of the ontology."
        }
      }
    },
    "Setting": {
      "name": "Setting",
      "description": "A regular expression that can be reused in a structured_pattern. See:https://linkml.io/linkml/faq/modeling.html#can-i-reuse-regular-expression-patterns.",
      "title": "Setting",
      "from_schema": "https://example.com/DH_LinkML",
      "slot_usage": {
        "schema_id": {
          "name": "schema_id",
          "description": "The coding name of the schema this setting is contained in.",
          "title": "Schema",
          "rank": 1,
          "slot_group": "key",
          "range": "Schema"
        },
        "name": {
          "name": "name",
          "description": "The coding name of this setting, which I can be referenced in a Linkml structured_pattern expression. See https://linkml.io/linkml/schemas/enums.html and https://linkml.io/linkml-model/latest/docs/EnumDefinition/",
          "title": "Name",
          "rank": 2,
          "slot_group": "key",
          "range": "WhitespaceMinimizedString",
          "pattern": "^([A-Z]+[a-z0-9]*)+$"
        },
        "value": {
          "name": "value",
          "description": "The setting’s value, which is a regular expression that can be used in a LinkML structured_pattern expression field.",
          "rank": 3,
          "slot_group": "attributes",
          "required": true
        },
        "description": {
          "name": "description",
          "description": "A plan text description of this setting.",
          "rank": 4,
          "slot_group": "attributes",
          "range": "string"
        }
      },
      "attributes": {
        "schema_id": {
          "name": "schema_id",
          "annotations": {
            "foreign_key": {
              "tag": "foreign_key",
              "value": "Schema.name"
            }
          },
          "description": "The coding name of the schema this setting is contained in.",
          "title": "Schema",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 1,
          "alias": "schema_id",
          "owner": "Setting",
          "domain_of": [
            "Prefix",
            "Class",
            "UniqueKey",
            "Slot",
            "Annotation",
            "Enum",
            "PermissibleValue",
            "EnumSource",
            "Setting",
            "Extension"
          ],
          "slot_group": "key",
          "range": "Schema",
          "required": true
        },
        "name": {
          "name": "name",
          "description": "The coding name of this setting, which I can be referenced in a Linkml structured_pattern expression. See https://linkml.io/linkml/schemas/enums.html and https://linkml.io/linkml-model/latest/docs/EnumDefinition/",
          "title": "Name",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 2,
          "alias": "name",
          "owner": "Setting",
          "domain_of": [
            "Schema",
            "Class",
            "UniqueKey",
            "Slot",
            "Annotation",
            "Enum",
            "Setting",
            "Extension"
          ],
          "slot_group": "key",
          "range": "WhitespaceMinimizedString",
          "required": true,
          "pattern": "^([A-Z]+[a-z0-9]*)+$"
        },
        "value": {
          "name": "value",
          "description": "The setting’s value, which is a regular expression that can be used in a LinkML structured_pattern expression field.",
          "title": "Value",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 3,
          "alias": "value",
          "owner": "Setting",
          "domain_of": [
            "Annotation",
            "Setting",
            "Extension"
          ],
          "slot_group": "attributes",
          "range": "string",
          "required": true
        },
        "description": {
          "name": "description",
          "description": "A plan text description of this setting.",
          "title": "Description",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 4,
          "alias": "description",
          "owner": "Setting",
          "domain_of": [
            "Schema",
            "Class",
            "UniqueKey",
            "Slot",
            "Enum",
            "PermissibleValue",
            "Setting",
            "Extension"
          ],
          "slot_group": "attributes",
          "range": "string"
        }
      },
      "unique_keys": {
        "settings_key": {
          "unique_key_name": "settings_key",
          "unique_key_slots": [
            "schema_id",
            "name"
          ],
          "description": "A setting is uniquely identified by the name key whose value is a regular expression."
        }
      }
    },
    "Rule": {
      "name": "Rule",
      "description": "A rule that executes the change in state of one or more fields (slots).  Each rule has a \"precondition\" expression of constraints one or more fields' values and a postcondition expression stating what the same or other field's values change to.",
      "title": "Rule",
      "from_schema": "https://example.com/DH_LinkML"
    },
    "Extension": {
      "name": "Extension",
      "description": "A list of LinkML attribute-value pairs that are not directly part of the schema's class/slot structure.  Locale information is held here.",
      "title": "Extension",
      "from_schema": "https://example.com/DH_LinkML",
      "slot_usage": {
        "schema_id": {
          "name": "schema_id",
          "title": "Schema",
          "rank": 1,
          "slot_group": "key",
          "range": "Schema"
        },
        "name": {
          "name": "name",
          "title": "Name",
          "rank": 2,
          "slot_group": "key",
          "range": "WhitespaceMinimizedString"
        },
        "value": {
          "name": "value",
          "rank": 3,
          "slot_group": "attributes"
        },
        "description": {
          "name": "description",
          "description": "A plan text description of this extension.  LinkML extensions allow saving any kind of object as a value of a key.",
          "rank": 4,
          "slot_group": "attributes",
          "range": "string"
        }
      },
      "attributes": {
        "schema_id": {
          "name": "schema_id",
          "annotations": {
            "foreign_key": {
              "tag": "foreign_key",
              "value": "Schema.name"
            }
          },
          "title": "Schema",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 1,
          "alias": "schema_id",
          "owner": "Extension",
          "domain_of": [
            "Prefix",
            "Class",
            "UniqueKey",
            "Slot",
            "Annotation",
            "Enum",
            "PermissibleValue",
            "EnumSource",
            "Setting",
            "Extension"
          ],
          "slot_group": "key",
          "range": "Schema",
          "required": true
        },
        "name": {
          "name": "name",
          "title": "Name",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 2,
          "alias": "name",
          "owner": "Extension",
          "domain_of": [
            "Schema",
            "Class",
            "UniqueKey",
            "Slot",
            "Annotation",
            "Enum",
            "Setting",
            "Extension"
          ],
          "slot_group": "key",
          "range": "WhitespaceMinimizedString",
          "required": true
        },
        "value": {
          "name": "value",
          "title": "Value",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 3,
          "alias": "value",
          "owner": "Extension",
          "domain_of": [
            "Annotation",
            "Setting",
            "Extension"
          ],
          "slot_group": "attributes",
          "range": "string"
        },
        "description": {
          "name": "description",
          "description": "A plan text description of this extension.  LinkML extensions allow saving any kind of object as a value of a key.",
          "title": "Description",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 4,
          "alias": "description",
          "owner": "Extension",
          "domain_of": [
            "Schema",
            "Class",
            "UniqueKey",
            "Slot",
            "Enum",
            "PermissibleValue",
            "Setting",
            "Extension"
          ],
          "slot_group": "attributes",
          "range": "string"
        }
      },
      "unique_keys": {
        "extension_key": {
          "unique_key_name": "extension_key",
          "unique_key_slots": [
            "schema_id",
            "name"
          ],
          "description": "A key which details each schema's extension."
        }
      }
    },
    "Container": {
      "name": "Container",
      "from_schema": "https://example.com/DH_LinkML",
      "attributes": {
        "Schemas": {
          "name": "Schemas",
          "from_schema": "https://example.com/DH_LinkML",
          "alias": "Schemas",
          "owner": "Container",
          "domain_of": [
            "Container"
          ],
          "range": "Schema",
          "multivalued": true,
          "inlined_as_list": true
        },
        "Prefixes": {
          "name": "Prefixes",
          "from_schema": "https://example.com/DH_LinkML",
          "alias": "Prefixes",
          "owner": "Container",
          "domain_of": [
            "Container"
          ],
          "range": "Prefix",
          "multivalued": true,
          "inlined_as_list": true
        },
        "Settings": {
          "name": "Settings",
          "from_schema": "https://example.com/DH_LinkML",
          "alias": "Settings",
          "owner": "Container",
          "domain_of": [
            "Container"
          ],
          "range": "Setting",
          "multivalued": true,
          "inlined_as_list": true
        },
        "Extensions": {
          "name": "Extensions",
          "from_schema": "https://example.com/DH_LinkML",
          "alias": "Extensions",
          "owner": "Container",
          "domain_of": [
            "Container"
          ],
          "range": "Extension",
          "multivalued": true,
          "inlined_as_list": true
        },
        "Enums": {
          "name": "Enums",
          "from_schema": "https://example.com/DH_LinkML",
          "alias": "Enums",
          "owner": "Container",
          "domain_of": [
            "Container"
          ],
          "range": "Enum",
          "multivalued": true,
          "inlined_as_list": true
        },
        "PermissibleValues": {
          "name": "PermissibleValues",
          "from_schema": "https://example.com/DH_LinkML",
          "alias": "PermissibleValues",
          "owner": "Container",
          "domain_of": [
            "Container"
          ],
          "range": "PermissibleValue",
          "multivalued": true,
          "inlined_as_list": true
        },
        "EnumSources": {
          "name": "EnumSources",
          "from_schema": "https://example.com/DH_LinkML",
          "alias": "EnumSources",
          "owner": "Container",
          "domain_of": [
            "Container"
          ],
          "range": "EnumSource",
          "multivalued": true,
          "inlined_as_list": true
        },
        "Slots": {
          "name": "Slots",
          "from_schema": "https://example.com/DH_LinkML",
          "alias": "Slots",
          "owner": "Container",
          "domain_of": [
            "Container"
          ],
          "range": "Slot",
          "multivalued": true,
          "inlined_as_list": true
        },
        "Annotations": {
          "name": "Annotations",
          "from_schema": "https://example.com/DH_LinkML",
          "alias": "Annotations",
          "owner": "Container",
          "domain_of": [
            "Container"
          ],
          "range": "Annotation",
          "multivalued": true,
          "inlined_as_list": true
        },
        "Classes": {
          "name": "Classes",
          "from_schema": "https://example.com/DH_LinkML",
          "alias": "Classes",
          "owner": "Container",
          "domain_of": [
            "Container"
          ],
          "range": "Class",
          "multivalued": true,
          "inlined_as_list": true
        },
        "UniqueKeys": {
          "name": "UniqueKeys",
          "from_schema": "https://example.com/DH_LinkML",
          "alias": "UniqueKeys",
          "owner": "Container",
          "domain_of": [
            "Container"
          ],
          "range": "UniqueKey",
          "multivalued": true,
          "inlined_as_list": true
        }
      },
      "tree_root": true
    }
  },
  "settings": {
    "Title_Case": {
      "setting_key": "Title_Case",
      "setting_value": "(((?<=\\b)[^a-z\\W]\\w*?|[\\W])+)"
    },
    "UPPER_CASE": {
      "setting_key": "UPPER_CASE",
      "setting_value": "[A-Z\\W\\d_]*"
    },
    "lower_case": {
      "setting_key": "lower_case",
      "setting_value": "[a-z\\W\\d_]*"
    }
  },
  "@type": "SchemaDefinition"
}