{
  "name": "DH_LinkML",
  "description": "The DataHarmonizer template for editing a schema.",
  "in_language": [
    "en"
  ],
  "id": "https://example.com/DH_LinkML",
  "version": "1.0.0",
  "prefixes": {
    "linkml": {
      "prefix_prefix": "linkml",
      "prefix_reference": "https://w3id.org/linkml/"
    },
    "ONTOLOGY": {
      "prefix_prefix": "ONTOLOGY",
      "prefix_reference": "http://purl.obolibrary.org/obo/ONTOLOGY_"
    },
    "xsd": {
      "prefix_prefix": "xsd",
      "prefix_reference": "http://www.w3.org/2001/XMLSchema#"
    },
    "shex": {
      "prefix_prefix": "shex",
      "prefix_reference": "http://www.w3.org/ns/shex#"
    },
    "schema": {
      "prefix_prefix": "schema",
      "prefix_reference": "http://schema.org/"
    }
  },
  "default_prefix": "https://example.com/DH_LinkML/",
  "types": {
    "WhitespaceMinimizedString": {
      "name": "WhitespaceMinimizedString",
      "description": "A string that has all whitespace trimmed off of beginning and end, and all internal whitespace segments reduced to single spaces. Whitespace includes #x9 (tab), #xA (linefeed), and #xD (carriage return).",
      "from_schema": "https://example.com/DH_LinkML",
      "typeof": "string",
      "base": "str",
      "uri": "xsd:token"
    },
    "Provenance": {
      "name": "Provenance",
      "description": "A field containing a DataHarmonizer versioning marker. It is issued by DataHarmonizer when validation is applied to a given row of data.",
      "from_schema": "https://example.com/DH_LinkML",
      "typeof": "string",
      "base": "str",
      "uri": "xsd:token"
    },
    "string": {
      "name": "string",
      "description": "A character string",
      "notes": [
        "In RDF serializations, a slot with range of string is treated as a literal or type xsd:string.   If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"string\"."
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "exact_mappings": [
        "schema:Text"
      ],
      "base": "str",
      "uri": "xsd:string"
    },
    "integer": {
      "name": "integer",
      "description": "An integer",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"integer\"."
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "exact_mappings": [
        "schema:Integer"
      ],
      "base": "int",
      "uri": "xsd:integer"
    },
    "boolean": {
      "name": "boolean",
      "description": "A binary (true or false) value",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"boolean\"."
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "exact_mappings": [
        "schema:Boolean"
      ],
      "base": "Bool",
      "uri": "xsd:boolean",
      "repr": "bool"
    },
    "float": {
      "name": "float",
      "description": "A real number that conforms to the xsd:float specification",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"float\"."
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "exact_mappings": [
        "schema:Float"
      ],
      "base": "float",
      "uri": "xsd:float"
    },
    "double": {
      "name": "double",
      "description": "A real number that conforms to the xsd:double specification",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"double\"."
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "close_mappings": [
        "schema:Float"
      ],
      "base": "float",
      "uri": "xsd:double"
    },
    "decimal": {
      "name": "decimal",
      "description": "A real number with arbitrary precision that conforms to the xsd:decimal specification",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"decimal\"."
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "broad_mappings": [
        "schema:Number"
      ],
      "base": "Decimal",
      "uri": "xsd:decimal"
    },
    "time": {
      "name": "time",
      "description": "A time object represents a (local) time of day, independent of any particular day",
      "notes": [
        "URI is dateTime because OWL reasoners do not work with straight date or time",
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"time\"."
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "exact_mappings": [
        "schema:Time"
      ],
      "base": "XSDTime",
      "uri": "xsd:time",
      "repr": "str"
    },
    "date": {
      "name": "date",
      "description": "a date (year, month and day) in an idealized calendar",
      "notes": [
        "URI is dateTime because OWL reasoners don't work with straight date or time",
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"date\"."
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "exact_mappings": [
        "schema:Date"
      ],
      "base": "XSDDate",
      "uri": "xsd:date",
      "repr": "str"
    },
    "datetime": {
      "name": "datetime",
      "description": "The combination of a date and time",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"datetime\"."
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "exact_mappings": [
        "schema:DateTime"
      ],
      "base": "XSDDateTime",
      "uri": "xsd:dateTime",
      "repr": "str"
    },
    "date_or_datetime": {
      "name": "date_or_datetime",
      "description": "Either a date or a datetime",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"date_or_datetime\"."
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "base": "str",
      "uri": "linkml:DateOrDatetime",
      "repr": "str"
    },
    "uriorcurie": {
      "name": "uriorcurie",
      "description": "a URI or a CURIE",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"uriorcurie\"."
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "base": "URIorCURIE",
      "uri": "xsd:anyURI",
      "repr": "str"
    },
    "curie": {
      "name": "curie",
      "conforms_to": "https://www.w3.org/TR/curie/",
      "description": "a compact URI",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"curie\"."
      ],
      "comments": [
        "in RDF serializations this MUST be expanded to a URI",
        "in non-RDF serializations MAY be serialized as the compact representation"
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "base": "Curie",
      "uri": "xsd:string",
      "repr": "str"
    },
    "uri": {
      "name": "uri",
      "conforms_to": "https://www.ietf.org/rfc/rfc3987.txt",
      "description": "a complete URI",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"uri\"."
      ],
      "comments": [
        "in RDF serializations a slot with range of uri is treated as a literal or type xsd:anyURI unless it is an identifier or a reference to an identifier, in which case it is translated directly to a node"
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "close_mappings": [
        "schema:URL"
      ],
      "base": "URI",
      "uri": "xsd:anyURI",
      "repr": "str"
    },
    "ncname": {
      "name": "ncname",
      "description": "Prefix part of CURIE",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"ncname\"."
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "base": "NCName",
      "uri": "xsd:string",
      "repr": "str"
    },
    "objectidentifier": {
      "name": "objectidentifier",
      "description": "A URI or CURIE that represents an object in the model.",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"objectidentifier\"."
      ],
      "comments": [
        "Used for inheritance and type checking"
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "base": "ElementIdentifier",
      "uri": "shex:iri",
      "repr": "str"
    },
    "nodeidentifier": {
      "name": "nodeidentifier",
      "description": "A URI, CURIE or BNODE that represents a node in a model.",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"nodeidentifier\"."
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "base": "NodeIdentifier",
      "uri": "shex:nonLiteral",
      "repr": "str"
    },
    "jsonpointer": {
      "name": "jsonpointer",
      "conforms_to": "https://datatracker.ietf.org/doc/html/rfc6901",
      "description": "A string encoding a JSON Pointer. The value of the string MUST conform to JSON Point syntax and SHOULD dereference to a valid object within the current instance document when encoded in tree form.",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"jsonpointer\"."
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "base": "str",
      "uri": "xsd:string",
      "repr": "str"
    },
    "jsonpath": {
      "name": "jsonpath",
      "conforms_to": "https://www.ietf.org/archive/id/draft-goessner-dispatch-jsonpath-00.html",
      "description": "A string encoding a JSON Path. The value of the string MUST conform to JSON Point syntax and SHOULD dereference to zero or more valid objects within the current instance document when encoded in tree form.",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"jsonpath\"."
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "base": "str",
      "uri": "xsd:string",
      "repr": "str"
    },
    "sparqlpath": {
      "name": "sparqlpath",
      "conforms_to": "https://www.w3.org/TR/sparql11-query/#propertypaths",
      "description": "A string encoding a SPARQL Property Path. The value of the string MUST conform to SPARQL syntax and SHOULD dereference to zero or more valid objects within the current instance document when encoded as RDF.",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"sparqlpath\"."
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "base": "str",
      "uri": "xsd:string",
      "repr": "str"
    }
  },
  "enums": {
    "TrueFalseMenu": {
      "name": "TrueFalseMenu",
      "title": "TrueFalseMenu",
      "from_schema": "https://example.com/DH_LinkML",
      "permissible_values": {
        "TRUE": {
          "text": "TRUE"
        },
        "FALSE": {
          "text": "FALSE"
        }
      }
    },
    "DataTypeMenu": {
      "name": "DataTypeMenu",
      "title": "DataTypeMenu",
      "from_schema": "https://example.com/DH_LinkML",
      "permissible_values": {
        "string": {
          "text": "string"
        },
        "WhitespaceMinimizedString": {
          "text": "WhitespaceMinimizedString"
        },
        "boolean": {
          "text": "boolean"
        },
        "integer": {
          "text": "integer"
        },
        "decimal": {
          "text": "decimal"
        },
        "double": {
          "text": "double"
        },
        "float": {
          "text": "float"
        },
        "date": {
          "text": "date"
        },
        "datetime": {
          "text": "datetime"
        },
        "date_or_datetime": {
          "text": "date_or_datetime"
        },
        "time": {
          "text": "time"
        },
        "uriorcurie": {
          "text": "uriorcurie"
        },
        "curie": {
          "text": "curie"
        },
        "uri": {
          "text": "uri"
        },
        "Schema": {
          "text": "Schema"
        },
        "Slot": {
          "text": "Slot"
        },
        "Class": {
          "text": "Class"
        },
        "Provenance": {
          "text": "Provenance"
        },
        "TrueFalseMenu": {
          "text": "TrueFalseMenu"
        },
        "DataTypeMenu": {
          "text": "DataTypeMenu"
        },
        "LanguagesMenu": {
          "text": "LanguagesMenu"
        }
      }
    },
    "LanguagesMenu": {
      "name": "LanguagesMenu",
      "title": "LanguagesMenu",
      "from_schema": "https://example.com/DH_LinkML",
      "permissible_values": {
        "en": {
          "text": "en"
        },
        "fr": {
          "text": "fr"
        }
      }
    }
  },
  "slots": {
    "schema_id": {
      "name": "schema_id",
      "annotations": {
        "foreign_key": {
          "tag": "foreign_key",
          "value": "Schema.name"
        }
      },
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Prefix",
        "Class",
        "UniqueKey",
        "Slot",
        "SlotUsage",
        "Enum",
        "PermissibleValue"
      ],
      "required": true
    },
    "class_id": {
      "name": "class_id",
      "annotations": {
        "foreign_key": {
          "tag": "foreign_key",
          "value": "Class.name"
        }
      },
      "title": "Class",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "UniqueKey",
        "SlotUsage"
      ],
      "required": true
    },
    "slot_id": {
      "name": "slot_id",
      "annotations": {
        "foreign_key": {
          "tag": "foreign_key",
          "value": "Slot.name"
        }
      },
      "title": "Slot",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "SlotUsage"
      ],
      "required": true
    },
    "enum_id": {
      "name": "enum_id",
      "annotations": {
        "foreign_key": {
          "tag": "foreign_key",
          "value": "Enum.name"
        }
      },
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "PermissibleValue"
      ],
      "required": true
    },
    "name": {
      "name": "name",
      "title": "Name",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Schema",
        "Class",
        "UniqueKey",
        "Slot",
        "Enum",
        "PermissibleValue"
      ],
      "range": "WhitespaceMinimizedString",
      "required": true
    },
    "id": {
      "name": "id",
      "description": "The unique URI for identifying this LinkML schema.",
      "title": "ID",
      "comments": [
        "Typically the schema can be downloaded from this URI, but currently it is often left as an example URI during schema development."
      ],
      "examples": [
        {
          "value": "https://example.com/GRDI"
        }
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "identifier": true,
      "domain_of": [
        "Schema"
      ],
      "range": "uri",
      "required": true
    },
    "description": {
      "name": "description",
      "title": "Description",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Schema",
        "Class",
        "UniqueKey",
        "Slot",
        "Enum",
        "PermissibleValue"
      ]
    },
    "version": {
      "name": "version",
      "title": "Version",
      "comments": [
        "See https://semver.org/"
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Schema",
        "Class"
      ],
      "range": "WhitespaceMinimizedString",
      "pattern": "^\\d+\\.\\d+\\.\\d+$"
    },
    "in_language": {
      "name": "in_language",
      "description": "A list of i18n language codes that this schema is available in.",
      "title": "Languages",
      "comments": [
        "The first listed schema is the default (usually english), while remaining ones are language overlays compiled into a locales/ subfolder."
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Schema"
      ],
      "range": "LanguagesMenu",
      "multivalued": true
    },
    "default_prefix": {
      "name": "default_prefix",
      "title": "Default prefix",
      "comments": [
        "A prefix to assume all classes and slots can be addressed by."
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Schema"
      ],
      "range": "uri",
      "required": true
    },
    "prefix": {
      "name": "prefix",
      "description": "The namespace prefix string.",
      "title": "Prefix",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Prefix"
      ],
      "range": "WhitespaceMinimizedString",
      "required": true
    },
    "reference": {
      "name": "reference",
      "description": "The URI the prefix expands to.",
      "title": "Reference",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Prefix"
      ],
      "range": "uri",
      "required": true
    },
    "title": {
      "name": "title",
      "title": "Title",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Class",
        "Slot",
        "Enum"
      ],
      "range": "WhitespaceMinimizedString",
      "required": true
    },
    "class_uri": {
      "name": "class_uri",
      "description": "A URI for identifying this class's semantic type.",
      "title": "Class URI",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Class"
      ],
      "range": "uri"
    },
    "tree_root": {
      "name": "tree_root",
      "description": "A boolian indicating whether this is a specification for a top-level data container on which serializations are based.",
      "title": "Container",
      "comments": [
        "Only one allowed per Schema. See https://linkml.io/linkml/data/csvs.html"
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Class"
      ],
      "range": "TrueFalseMenu"
    },
    "Inlined as list": {
      "name": "Inlined as list",
      "description": "A boolian indicating whether the content of this class is present inside its containing object as an array.",
      "title": "Inlined as list",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Class"
      ],
      "range": "TrueFalseMenu"
    },
    "unique_key_slots": {
      "name": "unique_key_slots",
      "description": "A list of a class's slots that make up a unique key",
      "title": "Unique Key Slots",
      "comments": [
        "See https://linkml.io/linkml/schemas/constraints.html"
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "UniqueKey"
      ],
      "range": "Slot",
      "multivalued": true
    },
    "notes": {
      "name": "notes",
      "description": "Notes about use of this key in other classes via slot ranges etc.",
      "title": "Notes",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "UniqueKey"
      ],
      "range": "WhitespaceMinimizedString"
    },
    "slot_group": {
      "name": "slot_group",
      "title": "Slot Group",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Slot",
        "SlotUsage"
      ],
      "range": "WhitespaceMinimizedString"
    },
    "slot_uri": {
      "name": "slot_uri",
      "description": "A URI for identifying this slot's semantic type.",
      "title": "Slot URI",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Slot"
      ],
      "range": "uri"
    },
    "range": {
      "name": "range",
      "title": "Range",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Slot",
        "SlotUsage"
      ],
      "range": "DataTypeMenu",
      "multivalued": true
    },
    "required": {
      "name": "required",
      "title": "Required",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Slot",
        "SlotUsage"
      ],
      "range": "TrueFalseMenu"
    },
    "recommended": {
      "name": "recommended",
      "title": "Recommended",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Slot",
        "SlotUsage"
      ],
      "range": "TrueFalseMenu"
    },
    "aliases": {
      "name": "aliases",
      "description": "A list of other names that slot can be known by.",
      "title": "Aliases",
      "comments": [
        "See https://linkml.io/linkml/schemas/metadata.html#providing-aliases"
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Slot"
      ],
      "range": "WhitespaceMinimizedString"
    },
    "identifier": {
      "name": "identifier",
      "title": "Identifier",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Slot",
        "SlotUsage"
      ],
      "range": "TrueFalseMenu"
    },
    "foreign_key": {
      "name": "foreign_key",
      "title": "Foreign Key",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Slot",
        "SlotUsage"
      ],
      "range": "WhitespaceMinimizedString"
    },
    "multivalued": {
      "name": "multivalued",
      "title": "Multivalued",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Slot",
        "SlotUsage"
      ],
      "range": "TrueFalseMenu"
    },
    "minimum_value": {
      "name": "minimum_value",
      "description": "A minimum value which is appropriate for the range data type of the slot.",
      "title": "Minimum_value",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Slot",
        "SlotUsage"
      ],
      "range": "integer"
    },
    "maximum_value": {
      "name": "maximum_value",
      "description": "A maximum value which is appropriate for the range data type of the slot.",
      "title": "Maximum_value",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Slot",
        "SlotUsage"
      ],
      "range": "integer"
    },
    "equals_expression": {
      "name": "equals_expression",
      "description": "Enables inferring (calculating) value based on other slot values. Expressed as a python expression.",
      "title": "Calculated value",
      "comments": [
        "See https://linkml.io/linkml/schemas/advanced.html#equals-expression"
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Slot"
      ],
      "range": "WhitespaceMinimizedString"
    },
    "pattern": {
      "name": "pattern",
      "description": "A regular expression pattern used to validate a slot's string range data type content.",
      "title": "Pattern",
      "comments": [
        "Regular expressions can begin with ^ to ensure start of string is tested, and $ to ensure up to end is tested."
      ],
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Slot",
        "SlotUsage"
      ],
      "range": "WhitespaceMinimizedString"
    },
    "comments": {
      "name": "comments",
      "description": "A free text field for adding other comments to guide usage of field.",
      "title": "Comments",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Slot",
        "SlotUsage"
      ],
      "range": "WhitespaceMinimizedString"
    },
    "examples": {
      "name": "examples",
      "description": "A free text field for including examples of string, numeric, date or categorical values.",
      "title": "Examples",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Slot",
        "SlotUsage"
      ],
      "range": "WhitespaceMinimizedString"
    },
    "rank": {
      "name": "rank",
      "description": "An integer which sets the order of this slot relative to the others within a given class.",
      "title": "Rank",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "SlotUsage"
      ],
      "range": "integer"
    },
    "inlined": {
      "name": "inlined",
      "description": "An override on a slot's **Inlined** attribute.",
      "title": "Inlined",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "SlotUsage"
      ],
      "range": "TrueFalseMenu"
    },
    "minimum_cardinality": {
      "name": "minimum_cardinality",
      "description": "For multivalued slots, a minimum number of values",
      "title": "Minimum Cardinality",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "SlotUsage"
      ],
      "range": "integer"
    },
    "maximum_cardinality": {
      "name": "maximum_cardinality",
      "description": "For multivalued slots, a maximum number of values",
      "title": "Maximum Cardinality",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "SlotUsage"
      ],
      "range": "integer"
    },
    "enum_uri": {
      "name": "enum_uri",
      "description": "A URI for identifying this enumeration's semantic type.",
      "title": "Enum URI",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "Enum"
      ],
      "range": "uri"
    },
    "text": {
      "name": "text",
      "description": "The plain language text of this menu choice (PermissibleValue) to display.",
      "title": "Text",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "PermissibleValue"
      ],
      "range": "WhitespaceMinimizedString"
    },
    "meaning": {
      "name": "meaning",
      "description": "A URI for identifying this choice's semantic type.",
      "title": "Meaning",
      "from_schema": "https://example.com/DH_LinkML",
      "domain_of": [
        "PermissibleValue"
      ],
      "range": "uri"
    }
  },
  "classes": {
    "Schema": {
      "name": "Schema",
      "description": "The top-level description of a LinkML schema.  A schema contains classes for describing one or more DataHarmonizer templates, fields/columns, and picklists (which are themselves LinkML classes, slots, and enumerations)",
      "from_schema": "https://example.com/DH_LinkML",
      "see_also": [
        "templates/schema_editor/SOP.pdf"
      ],
      "slot_usage": {
        "name": {
          "name": "name",
          "description": "The coding name of a LinkML schema.",
          "comments": [
            "This is a **CamelCase** formatted name in the LinkML standard naming convention.\n\nA schema contains classes for describing one or more DataHarmonizer templates, fields/columns, and picklists (which are themselves LinkML classes, slots, and enumerations).\n\nA schema can also import other schemas and their slots, classes, etc."
          ],
          "examples": [
            {
              "value": "Wastewater"
            }
          ],
          "rank": 1,
          "slot_group": "key",
          "pattern": "^([A-Z][a-z0-9]+)+$"
        },
        "id": {
          "name": "id",
          "rank": 2,
          "slot_group": "key"
        },
        "description": {
          "name": "description",
          "description": "The plain language description of this LinkML schema.",
          "rank": 3,
          "slot_group": "attributes",
          "range": "string",
          "required": true
        },
        "version": {
          "name": "version",
          "description": "The semantic version identifier for this schema.",
          "examples": [
            {
              "value": "1.2.3"
            }
          ],
          "rank": 4,
          "slot_group": "attributes",
          "required": true
        },
        "in_language": {
          "name": "in_language",
          "rank": 5,
          "slot_group": "attributes"
        },
        "default_prefix": {
          "name": "default_prefix",
          "rank": 6,
          "slot_group": "attributes"
        }
      },
      "attributes": {
        "name": {
          "name": "name",
          "description": "The coding name of a LinkML schema.",
          "title": "Name",
          "comments": [
            "This is a **CamelCase** formatted name in the LinkML standard naming convention.\n\nA schema contains classes for describing one or more DataHarmonizer templates, fields/columns, and picklists (which are themselves LinkML classes, slots, and enumerations).\n\nA schema can also import other schemas and their slots, classes, etc."
          ],
          "examples": [
            {
              "value": "Wastewater"
            }
          ],
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 1,
          "alias": "name",
          "owner": "Schema",
          "domain_of": [
            "Schema",
            "Class",
            "UniqueKey",
            "Slot",
            "Enum",
            "PermissibleValue"
          ],
          "slot_group": "key",
          "range": "WhitespaceMinimizedString",
          "required": true,
          "pattern": "^([A-Z][a-z0-9]+)+$"
        },
        "id": {
          "name": "id",
          "description": "The unique URI for identifying this LinkML schema.",
          "title": "ID",
          "comments": [
            "Typically the schema can be downloaded from this URI, but currently it is often left as an example URI during schema development."
          ],
          "examples": [
            {
              "value": "https://example.com/GRDI"
            }
          ],
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 2,
          "identifier": true,
          "alias": "id",
          "owner": "Schema",
          "domain_of": [
            "Schema"
          ],
          "slot_group": "key",
          "range": "uri",
          "required": true
        },
        "description": {
          "name": "description",
          "description": "The plain language description of this LinkML schema.",
          "title": "Description",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 3,
          "alias": "description",
          "owner": "Schema",
          "domain_of": [
            "Schema",
            "Class",
            "UniqueKey",
            "Slot",
            "Enum",
            "PermissibleValue"
          ],
          "slot_group": "attributes",
          "range": "string",
          "required": true
        },
        "version": {
          "name": "version",
          "description": "The semantic version identifier for this schema.",
          "title": "Version",
          "comments": [
            "See https://semver.org/"
          ],
          "examples": [
            {
              "value": "1.2.3"
            }
          ],
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 4,
          "alias": "version",
          "owner": "Schema",
          "domain_of": [
            "Schema",
            "Class"
          ],
          "slot_group": "attributes",
          "range": "WhitespaceMinimizedString",
          "required": true,
          "pattern": "^\\d+\\.\\d+\\.\\d+$"
        },
        "in_language": {
          "name": "in_language",
          "description": "A list of i18n language codes that this schema is available in.",
          "title": "Languages",
          "comments": [
            "The first listed schema is the default (usually english), while remaining ones are language overlays compiled into a locales/ subfolder."
          ],
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 5,
          "alias": "in_language",
          "owner": "Schema",
          "domain_of": [
            "Schema"
          ],
          "slot_group": "attributes",
          "range": "LanguagesMenu",
          "multivalued": true
        },
        "default_prefix": {
          "name": "default_prefix",
          "title": "Default prefix",
          "comments": [
            "A prefix to assume all classes and slots can be addressed by."
          ],
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 6,
          "alias": "default_prefix",
          "owner": "Schema",
          "domain_of": [
            "Schema"
          ],
          "slot_group": "attributes",
          "range": "uri",
          "required": true
        }
      },
      "unique_keys": {
        "schema_key": {
          "unique_key_name": "schema_key",
          "unique_key_slots": [
            "name"
          ],
          "description": "A slot is uniquely identified by the schema it appears in as well as its name"
        }
      }
    },
    "Prefix": {
      "name": "Prefix",
      "description": "A prefix used in the URIs mentioned in this schema.",
      "from_schema": "https://example.com/DH_LinkML",
      "slot_usage": {
        "schema_id": {
          "name": "schema_id",
          "description": "The coding name of the schema this prefix is listed in.",
          "title": "Schema",
          "rank": 1,
          "slot_group": "key",
          "range": "Schema"
        },
        "prefix": {
          "name": "prefix",
          "rank": 2,
          "slot_group": "key"
        },
        "reference": {
          "name": "reference",
          "rank": 3,
          "slot_group": "attributes"
        }
      },
      "attributes": {
        "schema_id": {
          "name": "schema_id",
          "annotations": {
            "foreign_key": {
              "tag": "foreign_key",
              "value": "Schema.name"
            }
          },
          "description": "The coding name of the schema this prefix is listed in.",
          "title": "Schema",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 1,
          "alias": "schema_id",
          "owner": "Prefix",
          "domain_of": [
            "Prefix",
            "Class",
            "UniqueKey",
            "Slot",
            "SlotUsage",
            "Enum",
            "PermissibleValue"
          ],
          "slot_group": "key",
          "range": "Schema",
          "required": true
        },
        "prefix": {
          "name": "prefix",
          "description": "The namespace prefix string.",
          "title": "Prefix",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 2,
          "alias": "prefix",
          "owner": "Prefix",
          "domain_of": [
            "Prefix"
          ],
          "slot_group": "key",
          "range": "WhitespaceMinimizedString",
          "required": true
        },
        "reference": {
          "name": "reference",
          "description": "The URI the prefix expands to.",
          "title": "Reference",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 3,
          "alias": "reference",
          "owner": "Prefix",
          "domain_of": [
            "Prefix"
          ],
          "slot_group": "attributes",
          "range": "uri",
          "required": true
        }
      },
      "unique_keys": {
        "prefix_key": {
          "unique_key_name": "prefix_key",
          "unique_key_slots": [
            "schema_id",
            "prefix",
            "reference"
          ],
          "description": "A slot is uniquely identified by the schema it appears in as well as its name"
        }
      }
    },
    "Class": {
      "name": "Class",
      "description": "A class contained in given schema.  A class may be a top-level DataHarmonizer \"template\" that can be displayed in a spreadsheet tab, or it may be a subordinate 1-many class linked to a parent class by a primary key field.",
      "from_schema": "https://example.com/DH_LinkML",
      "slot_usage": {
        "schema_id": {
          "name": "schema_id",
          "description": "The coding name of the schema this class is contained in.",
          "title": "Schema",
          "rank": 1,
          "slot_group": "key",
          "range": "Schema"
        },
        "name": {
          "name": "name",
          "description": "A class contained in given schema.",
          "comments": [
            "Each class can be displayed in DataHarmonizer in a spreadsheet tab. A class may be visible as a top-level DataHarmonizer \"template\", or it may be a subordinate 1-many class linked to a parent class by a primary key field."
          ],
          "examples": [
            {
              "value": "WastewaterAMR|WastewaterPathogenAgnostic"
            }
          ],
          "rank": 2,
          "slot_group": "key",
          "pattern": "^([A-Z][a-z0-9]+)+$"
        },
        "title": {
          "name": "title",
          "description": "The plain language name of a LinkML schema class.",
          "rank": 3,
          "slot_group": "attributes"
        },
        "description": {
          "name": "description",
          "rank": 4,
          "slot_group": "attributes",
          "range": "string",
          "required": true
        },
        "version": {
          "name": "version",
          "description": "A semantic version identifier.",
          "rank": 5,
          "slot_group": "attributes"
        },
        "class_uri": {
          "name": "class_uri",
          "rank": 6,
          "slot_group": "attributes"
        },
        "tree_root": {
          "name": "tree_root",
          "rank": 7,
          "slot_group": "attributes"
        },
        "Inlined as list": {
          "name": "Inlined as list",
          "rank": 8,
          "slot_group": "attributes"
        }
      },
      "attributes": {
        "schema_id": {
          "name": "schema_id",
          "annotations": {
            "foreign_key": {
              "tag": "foreign_key",
              "value": "Schema.name"
            }
          },
          "description": "The coding name of the schema this class is contained in.",
          "title": "Schema",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 1,
          "alias": "schema_id",
          "owner": "Class",
          "domain_of": [
            "Prefix",
            "Class",
            "UniqueKey",
            "Slot",
            "SlotUsage",
            "Enum",
            "PermissibleValue"
          ],
          "slot_group": "key",
          "range": "Schema",
          "required": true
        },
        "name": {
          "name": "name",
          "description": "A class contained in given schema.",
          "title": "Name",
          "comments": [
            "Each class can be displayed in DataHarmonizer in a spreadsheet tab. A class may be visible as a top-level DataHarmonizer \"template\", or it may be a subordinate 1-many class linked to a parent class by a primary key field."
          ],
          "examples": [
            {
              "value": "WastewaterAMR|WastewaterPathogenAgnostic"
            }
          ],
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 2,
          "alias": "name",
          "owner": "Class",
          "domain_of": [
            "Schema",
            "Class",
            "UniqueKey",
            "Slot",
            "Enum",
            "PermissibleValue"
          ],
          "slot_group": "key",
          "range": "WhitespaceMinimizedString",
          "required": true,
          "pattern": "^([A-Z][a-z0-9]+)+$"
        },
        "title": {
          "name": "title",
          "description": "The plain language name of a LinkML schema class.",
          "title": "Title",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 3,
          "alias": "title",
          "owner": "Class",
          "domain_of": [
            "Class",
            "Slot",
            "Enum"
          ],
          "slot_group": "attributes",
          "range": "WhitespaceMinimizedString",
          "required": true
        },
        "description": {
          "name": "description",
          "title": "Description",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 4,
          "alias": "description",
          "owner": "Class",
          "domain_of": [
            "Schema",
            "Class",
            "UniqueKey",
            "Slot",
            "Enum",
            "PermissibleValue"
          ],
          "slot_group": "attributes",
          "range": "string",
          "required": true
        },
        "version": {
          "name": "version",
          "description": "A semantic version identifier.",
          "title": "Version",
          "comments": [
            "See https://semver.org/"
          ],
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 5,
          "alias": "version",
          "owner": "Class",
          "domain_of": [
            "Schema",
            "Class"
          ],
          "slot_group": "attributes",
          "range": "WhitespaceMinimizedString",
          "pattern": "^\\d+\\.\\d+\\.\\d+$"
        },
        "class_uri": {
          "name": "class_uri",
          "description": "A URI for identifying this class's semantic type.",
          "title": "Class URI",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 6,
          "alias": "class_uri",
          "owner": "Class",
          "domain_of": [
            "Class"
          ],
          "slot_group": "attributes",
          "range": "uri"
        },
        "tree_root": {
          "name": "tree_root",
          "description": "A boolian indicating whether this is a specification for a top-level data container on which serializations are based.",
          "title": "Container",
          "comments": [
            "Only one allowed per Schema. See https://linkml.io/linkml/data/csvs.html"
          ],
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 7,
          "alias": "tree_root",
          "owner": "Class",
          "domain_of": [
            "Class"
          ],
          "slot_group": "attributes",
          "range": "TrueFalseMenu"
        },
        "Inlined as list": {
          "name": "Inlined as list",
          "description": "A boolian indicating whether the content of this class is present inside its containing object as an array.",
          "title": "Inlined as list",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 8,
          "alias": "Inlined_as_list",
          "owner": "Class",
          "domain_of": [
            "Class"
          ],
          "slot_group": "attributes",
          "range": "TrueFalseMenu"
        }
      },
      "unique_keys": {
        "class_key": {
          "unique_key_name": "class_key",
          "unique_key_slots": [
            "schema_id",
            "name"
          ],
          "description": "A class is uniquely identified by the schema it appears in as well as its name."
        }
      }
    },
    "UniqueKey": {
      "name": "UniqueKey",
      "description": "A table linking the name of each multi-component(slot) key to the schema class it appears in.",
      "from_schema": "https://example.com/DH_LinkML",
      "slot_usage": {
        "schema_id": {
          "name": "schema_id",
          "description": "The coding name of the schema this slot usage's class is contained in.",
          "title": "Schema",
          "rank": 1,
          "slot_group": "key",
          "range": "Schema"
        },
        "class_id": {
          "name": "class_id",
          "description": "The coding name of this slot usage's class.",
          "rank": 2,
          "slot_group": "key",
          "range": "Class"
        },
        "name": {
          "name": "name",
          "description": "A class contained in given schema.",
          "rank": 3,
          "slot_group": "key",
          "pattern": "^[a-z]([a-z0-9_]+)+$"
        },
        "unique_key_slots": {
          "name": "unique_key_slots",
          "rank": 4,
          "slot_group": "attributes"
        },
        "description": {
          "name": "description",
          "description": "The description of this unique key combination.",
          "rank": 5,
          "slot_group": "attributes",
          "range": "WhitespaceMinimizedString"
        },
        "notes": {
          "name": "notes",
          "rank": 6,
          "slot_group": "attributes"
        }
      },
      "attributes": {
        "schema_id": {
          "name": "schema_id",
          "annotations": {
            "foreign_key": {
              "tag": "foreign_key",
              "value": "Schema.name"
            }
          },
          "description": "The coding name of the schema this slot usage's class is contained in.",
          "title": "Schema",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 1,
          "alias": "schema_id",
          "owner": "UniqueKey",
          "domain_of": [
            "Prefix",
            "Class",
            "UniqueKey",
            "Slot",
            "SlotUsage",
            "Enum",
            "PermissibleValue"
          ],
          "slot_group": "key",
          "range": "Schema",
          "required": true
        },
        "class_id": {
          "name": "class_id",
          "annotations": {
            "foreign_key": {
              "tag": "foreign_key",
              "value": "Class.name"
            }
          },
          "description": "The coding name of this slot usage's class.",
          "title": "Class",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 2,
          "alias": "class_id",
          "owner": "UniqueKey",
          "domain_of": [
            "UniqueKey",
            "SlotUsage"
          ],
          "slot_group": "key",
          "range": "Class",
          "required": true
        },
        "name": {
          "name": "name",
          "description": "A class contained in given schema.",
          "title": "Name",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 3,
          "alias": "name",
          "owner": "UniqueKey",
          "domain_of": [
            "Schema",
            "Class",
            "UniqueKey",
            "Slot",
            "Enum",
            "PermissibleValue"
          ],
          "slot_group": "key",
          "range": "WhitespaceMinimizedString",
          "required": true,
          "pattern": "^[a-z]([a-z0-9_]+)+$"
        },
        "unique_key_slots": {
          "name": "unique_key_slots",
          "description": "A list of a class's slots that make up a unique key",
          "title": "Unique Key Slots",
          "comments": [
            "See https://linkml.io/linkml/schemas/constraints.html"
          ],
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 4,
          "alias": "unique_key_slots",
          "owner": "UniqueKey",
          "domain_of": [
            "UniqueKey"
          ],
          "slot_group": "attributes",
          "range": "Slot",
          "multivalued": true
        },
        "description": {
          "name": "description",
          "description": "The description of this unique key combination.",
          "title": "Description",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 5,
          "alias": "description",
          "owner": "UniqueKey",
          "domain_of": [
            "Schema",
            "Class",
            "UniqueKey",
            "Slot",
            "Enum",
            "PermissibleValue"
          ],
          "slot_group": "attributes",
          "range": "WhitespaceMinimizedString"
        },
        "notes": {
          "name": "notes",
          "description": "Notes about use of this key in other classes via slot ranges etc.",
          "title": "Notes",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 6,
          "alias": "notes",
          "owner": "UniqueKey",
          "domain_of": [
            "UniqueKey"
          ],
          "slot_group": "attributes",
          "range": "WhitespaceMinimizedString"
        }
      },
      "unique_keys": {
        "uniquekey_key": {
          "unique_key_name": "uniquekey_key",
          "unique_key_slots": [
            "schema_id",
            "class_id",
            "name"
          ],
          "description": "A slot is uniquely identified by the schema it appears in as well as its name"
        }
      }
    },
    "Slot": {
      "name": "Slot",
      "description": "One or more slots contained in given schema. A slot can be used in one or more classes (templates).  A slot defines a visible column in a template, and can be a basic number, date, string, picklist (categorical or ordinal), or other single-field datatype.",
      "from_schema": "https://example.com/DH_LinkML",
      "slot_usage": {
        "schema_id": {
          "name": "schema_id",
          "description": "The coding name of the schema that this slot is contained in.",
          "title": "Schema",
          "comments": [
            "A schema has a list of slots it defines, but a schema can also import other schemas' slots."
          ],
          "rank": 1,
          "slot_group": "key",
          "range": "Schema"
        },
        "slot_group": {
          "name": "slot_group",
          "description": "The name of a grouping to place slot within during presentation.",
          "rank": 2,
          "slot_group": "attributes"
        },
        "slot_uri": {
          "name": "slot_uri",
          "rank": 3,
          "slot_group": "attributes"
        },
        "name": {
          "name": "name",
          "description": "The coding name of this schema slot.",
          "comments": [
            "This is a lowercase **snake_case** formatted name in the LinkML standard naming convention.\n\nA slot can be used in one or more classes (templates). A slot may appear as a visible single-field datatype column in a spreadsheet (template) tab, and can define (in its range attribute) a basic number, date, string, picklist (categorical or ordinal), or other custom datatype.  A slot may also have a range pointing to more complex classes."
          ],
          "rank": 4,
          "slot_group": "key",
          "pattern": "^[a-z]([a-z0-9_]+)+$"
        },
        "title": {
          "name": "title",
          "description": "The plain language name of this LinkML schema slot.",
          "comments": [
            "This can be displayed in applications and documentation."
          ],
          "rank": 5,
          "slot_group": "attributes"
        },
        "range": {
          "name": "range",
          "description": "The range or ranges a slot is associated with.  If more than one, this appears in the slot's specification as a list of \"any of\" ranges.",
          "rank": 6,
          "slot_group": "attributes",
          "required": true
        },
        "required": {
          "name": "required",
          "description": "A boolean TRUE indicates this slot is a mandatory data field.",
          "comments": [
            "A mandatory data field will fail validation if empty."
          ],
          "rank": 7,
          "slot_group": "attributes"
        },
        "recommended": {
          "name": "recommended",
          "description": "A boolean TRUE indicates this slot is a recommended data field.",
          "rank": 8,
          "slot_group": "attributes"
        },
        "description": {
          "name": "description",
          "description": "A plan text description of this LinkML schema slot.",
          "rank": 9,
          "slot_group": "attributes",
          "range": "string",
          "required": true
        },
        "aliases": {
          "name": "aliases",
          "rank": 10,
          "slot_group": "attributes"
        },
        "identifier": {
          "name": "identifier",
          "description": "A boolean TRUE indicates this slot is an identifier, or refers to one.",
          "rank": 11,
          "slot_group": "attributes"
        },
        "foreign_key": {
          "name": "foreign_key",
          "description": "A boolean TRUE indicates this slot is part of a primary key for the Class it is an attribute of.",
          "rank": 12,
          "slot_group": "attributes"
        },
        "multivalued": {
          "name": "multivalued",
          "description": "A boolean TRUE indicates this slot can hold more than one values taken from its range.",
          "rank": 13,
          "slot_group": "attributes"
        },
        "minimum_value": {
          "name": "minimum_value",
          "rank": 14,
          "slot_group": "attributes"
        },
        "maximum_value": {
          "name": "maximum_value",
          "rank": 15,
          "slot_group": "attributes"
        },
        "equals_expression": {
          "name": "equals_expression",
          "rank": 16,
          "slot_group": "attributes"
        },
        "pattern": {
          "name": "pattern",
          "rank": 17,
          "slot_group": "attributes"
        },
        "comments": {
          "name": "comments",
          "rank": 18,
          "slot_group": "attributes"
        },
        "examples": {
          "name": "examples",
          "rank": 19,
          "slot_group": "attributes"
        }
      },
      "attributes": {
        "schema_id": {
          "name": "schema_id",
          "annotations": {
            "foreign_key": {
              "tag": "foreign_key",
              "value": "Schema.name"
            }
          },
          "description": "The coding name of the schema that this slot is contained in.",
          "title": "Schema",
          "comments": [
            "A schema has a list of slots it defines, but a schema can also import other schemas' slots."
          ],
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 1,
          "alias": "schema_id",
          "owner": "Slot",
          "domain_of": [
            "Prefix",
            "Class",
            "UniqueKey",
            "Slot",
            "SlotUsage",
            "Enum",
            "PermissibleValue"
          ],
          "slot_group": "key",
          "range": "Schema",
          "required": true
        },
        "slot_group": {
          "name": "slot_group",
          "description": "The name of a grouping to place slot within during presentation.",
          "title": "Slot Group",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 2,
          "alias": "slot_group",
          "owner": "Slot",
          "domain_of": [
            "Slot",
            "SlotUsage"
          ],
          "slot_group": "attributes",
          "range": "WhitespaceMinimizedString"
        },
        "slot_uri": {
          "name": "slot_uri",
          "description": "A URI for identifying this slot's semantic type.",
          "title": "Slot URI",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 3,
          "alias": "slot_uri",
          "owner": "Slot",
          "domain_of": [
            "Slot"
          ],
          "slot_group": "attributes",
          "range": "uri"
        },
        "name": {
          "name": "name",
          "description": "The coding name of this schema slot.",
          "title": "Name",
          "comments": [
            "This is a lowercase **snake_case** formatted name in the LinkML standard naming convention.\n\nA slot can be used in one or more classes (templates). A slot may appear as a visible single-field datatype column in a spreadsheet (template) tab, and can define (in its range attribute) a basic number, date, string, picklist (categorical or ordinal), or other custom datatype.  A slot may also have a range pointing to more complex classes."
          ],
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 4,
          "alias": "name",
          "owner": "Slot",
          "domain_of": [
            "Schema",
            "Class",
            "UniqueKey",
            "Slot",
            "Enum",
            "PermissibleValue"
          ],
          "slot_group": "key",
          "range": "WhitespaceMinimizedString",
          "required": true,
          "pattern": "^[a-z]([a-z0-9_]+)+$"
        },
        "title": {
          "name": "title",
          "description": "The plain language name of this LinkML schema slot.",
          "title": "Title",
          "comments": [
            "This can be displayed in applications and documentation."
          ],
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 5,
          "alias": "title",
          "owner": "Slot",
          "domain_of": [
            "Class",
            "Slot",
            "Enum"
          ],
          "slot_group": "attributes",
          "range": "WhitespaceMinimizedString",
          "required": true
        },
        "range": {
          "name": "range",
          "description": "The range or ranges a slot is associated with.  If more than one, this appears in the slot's specification as a list of \"any of\" ranges.",
          "title": "Range",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 6,
          "alias": "range",
          "owner": "Slot",
          "domain_of": [
            "Slot",
            "SlotUsage"
          ],
          "slot_group": "attributes",
          "range": "DataTypeMenu",
          "required": true,
          "multivalued": true
        },
        "required": {
          "name": "required",
          "description": "A boolean TRUE indicates this slot is a mandatory data field.",
          "title": "Required",
          "comments": [
            "A mandatory data field will fail validation if empty."
          ],
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 7,
          "alias": "required",
          "owner": "Slot",
          "domain_of": [
            "Slot",
            "SlotUsage"
          ],
          "slot_group": "attributes",
          "range": "TrueFalseMenu"
        },
        "recommended": {
          "name": "recommended",
          "description": "A boolean TRUE indicates this slot is a recommended data field.",
          "title": "Recommended",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 8,
          "alias": "recommended",
          "owner": "Slot",
          "domain_of": [
            "Slot",
            "SlotUsage"
          ],
          "slot_group": "attributes",
          "range": "TrueFalseMenu"
        },
        "description": {
          "name": "description",
          "description": "A plan text description of this LinkML schema slot.",
          "title": "Description",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 9,
          "alias": "description",
          "owner": "Slot",
          "domain_of": [
            "Schema",
            "Class",
            "UniqueKey",
            "Slot",
            "Enum",
            "PermissibleValue"
          ],
          "slot_group": "attributes",
          "range": "string",
          "required": true
        },
        "aliases": {
          "name": "aliases",
          "description": "A list of other names that slot can be known by.",
          "title": "Aliases",
          "comments": [
            "See https://linkml.io/linkml/schemas/metadata.html#providing-aliases"
          ],
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 10,
          "alias": "aliases",
          "owner": "Slot",
          "domain_of": [
            "Slot"
          ],
          "slot_group": "attributes",
          "range": "WhitespaceMinimizedString"
        },
        "identifier": {
          "name": "identifier",
          "description": "A boolean TRUE indicates this slot is an identifier, or refers to one.",
          "title": "Identifier",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 11,
          "alias": "identifier",
          "owner": "Slot",
          "domain_of": [
            "Slot",
            "SlotUsage"
          ],
          "slot_group": "attributes",
          "range": "TrueFalseMenu"
        },
        "foreign_key": {
          "name": "foreign_key",
          "description": "A boolean TRUE indicates this slot is part of a primary key for the Class it is an attribute of.",
          "title": "Foreign Key",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 12,
          "alias": "foreign_key",
          "owner": "Slot",
          "domain_of": [
            "Slot",
            "SlotUsage"
          ],
          "slot_group": "attributes",
          "range": "WhitespaceMinimizedString"
        },
        "multivalued": {
          "name": "multivalued",
          "description": "A boolean TRUE indicates this slot can hold more than one values taken from its range.",
          "title": "Multivalued",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 13,
          "alias": "multivalued",
          "owner": "Slot",
          "domain_of": [
            "Slot",
            "SlotUsage"
          ],
          "slot_group": "attributes",
          "range": "TrueFalseMenu"
        },
        "minimum_value": {
          "name": "minimum_value",
          "description": "A minimum value which is appropriate for the range data type of the slot.",
          "title": "Minimum_value",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 14,
          "alias": "minimum_value",
          "owner": "Slot",
          "domain_of": [
            "Slot",
            "SlotUsage"
          ],
          "slot_group": "attributes",
          "range": "integer"
        },
        "maximum_value": {
          "name": "maximum_value",
          "description": "A maximum value which is appropriate for the range data type of the slot.",
          "title": "Maximum_value",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 15,
          "alias": "maximum_value",
          "owner": "Slot",
          "domain_of": [
            "Slot",
            "SlotUsage"
          ],
          "slot_group": "attributes",
          "range": "integer"
        },
        "equals_expression": {
          "name": "equals_expression",
          "description": "Enables inferring (calculating) value based on other slot values. Expressed as a python expression.",
          "title": "Calculated value",
          "comments": [
            "See https://linkml.io/linkml/schemas/advanced.html#equals-expression"
          ],
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 16,
          "alias": "equals_expression",
          "owner": "Slot",
          "domain_of": [
            "Slot"
          ],
          "slot_group": "attributes",
          "range": "WhitespaceMinimizedString"
        },
        "pattern": {
          "name": "pattern",
          "description": "A regular expression pattern used to validate a slot's string range data type content.",
          "title": "Pattern",
          "comments": [
            "Regular expressions can begin with ^ to ensure start of string is tested, and $ to ensure up to end is tested."
          ],
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 17,
          "alias": "pattern",
          "owner": "Slot",
          "domain_of": [
            "Slot",
            "SlotUsage"
          ],
          "slot_group": "attributes",
          "range": "WhitespaceMinimizedString"
        },
        "comments": {
          "name": "comments",
          "description": "A free text field for adding other comments to guide usage of field.",
          "title": "Comments",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 18,
          "alias": "comments",
          "owner": "Slot",
          "domain_of": [
            "Slot",
            "SlotUsage"
          ],
          "slot_group": "attributes",
          "range": "WhitespaceMinimizedString"
        },
        "examples": {
          "name": "examples",
          "description": "A free text field for including examples of string, numeric, date or categorical values.",
          "title": "Examples",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 19,
          "alias": "examples",
          "owner": "Slot",
          "domain_of": [
            "Slot",
            "SlotUsage"
          ],
          "slot_group": "attributes",
          "range": "WhitespaceMinimizedString"
        }
      },
      "unique_keys": {
        "slot_key": {
          "unique_key_name": "slot_key",
          "unique_key_slots": [
            "schema_id",
            "name"
          ],
          "description": "A slot is uniquely identified by the schema it appears in as well as its name"
        }
      }
    },
    "SlotUsage": {
      "name": "SlotUsage",
      "description": "A list of each classes slots which can include ordering (rank) and attribute overrides.",
      "from_schema": "https://example.com/DH_LinkML",
      "slot_usage": {
        "schema_id": {
          "name": "schema_id",
          "description": "The coding name of the schema this slot usage's class is contained in.",
          "title": "Schema",
          "rank": 1,
          "slot_group": "key",
          "range": "Schema"
        },
        "class_id": {
          "name": "class_id",
          "description": "The coding name of this slot usage's class.",
          "rank": 2,
          "slot_group": "key",
          "range": "Class"
        },
        "slot_id": {
          "name": "slot_id",
          "description": "The coding name of the slot this slot usage pertains to.",
          "rank": 3,
          "slot_group": "key",
          "range": "Slot"
        },
        "rank": {
          "name": "rank",
          "rank": 4,
          "slot_group": "attributes"
        },
        "slot_group": {
          "name": "slot_group",
          "description": "An override on a slot's **slot_group** attribute.",
          "rank": 5,
          "slot_group": "attributes"
        },
        "range": {
          "name": "range",
          "description": "An override on a slot's **range* attribute.",
          "rank": 6,
          "slot_group": "attributes"
        },
        "inlined": {
          "name": "inlined",
          "rank": 7,
          "slot_group": "attributes"
        },
        "identifier": {
          "name": "identifier",
          "description": "An override on a slot's **Identifier** attribute.",
          "rank": 8,
          "slot_group": "attributes"
        },
        "foreign_key": {
          "name": "foreign_key",
          "description": "An override on a slot's **Foreign Key** attribute.",
          "rank": 9,
          "slot_group": "attributes"
        },
        "multivalued": {
          "name": "multivalued",
          "description": "An override on a slot's **Multivalued** attribute.",
          "rank": 10,
          "slot_group": "attributes"
        },
        "required": {
          "name": "required",
          "description": "An override on a slot's **Required** attribute.",
          "rank": 11,
          "slot_group": "attributes"
        },
        "recommended": {
          "name": "recommended",
          "description": "An override on a slot's **Recommended** attribute.",
          "rank": 12,
          "slot_group": "attributes"
        },
        "minimum_value": {
          "name": "minimum_value",
          "rank": 13,
          "slot_group": "attributes"
        },
        "maximum_value": {
          "name": "maximum_value",
          "rank": 14,
          "slot_group": "attributes"
        },
        "minimum_cardinality": {
          "name": "minimum_cardinality",
          "rank": 15,
          "slot_group": "attributes"
        },
        "maximum_cardinality": {
          "name": "maximum_cardinality",
          "rank": 16,
          "slot_group": "attributes"
        },
        "pattern": {
          "name": "pattern",
          "rank": 17,
          "slot_group": "attributes"
        },
        "comments": {
          "name": "comments",
          "rank": 18,
          "slot_group": "attributes"
        },
        "examples": {
          "name": "examples",
          "rank": 19,
          "slot_group": "attributes"
        }
      },
      "attributes": {
        "schema_id": {
          "name": "schema_id",
          "annotations": {
            "foreign_key": {
              "tag": "foreign_key",
              "value": "Schema.name"
            }
          },
          "description": "The coding name of the schema this slot usage's class is contained in.",
          "title": "Schema",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 1,
          "alias": "schema_id",
          "owner": "SlotUsage",
          "domain_of": [
            "Prefix",
            "Class",
            "UniqueKey",
            "Slot",
            "SlotUsage",
            "Enum",
            "PermissibleValue"
          ],
          "slot_group": "key",
          "range": "Schema",
          "required": true
        },
        "class_id": {
          "name": "class_id",
          "annotations": {
            "foreign_key": {
              "tag": "foreign_key",
              "value": "Class.name"
            }
          },
          "description": "The coding name of this slot usage's class.",
          "title": "Class",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 2,
          "alias": "class_id",
          "owner": "SlotUsage",
          "domain_of": [
            "UniqueKey",
            "SlotUsage"
          ],
          "slot_group": "key",
          "range": "Class",
          "required": true
        },
        "slot_id": {
          "name": "slot_id",
          "annotations": {
            "foreign_key": {
              "tag": "foreign_key",
              "value": "Slot.name"
            }
          },
          "description": "The coding name of the slot this slot usage pertains to.",
          "title": "Slot",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 3,
          "alias": "slot_id",
          "owner": "SlotUsage",
          "domain_of": [
            "SlotUsage"
          ],
          "slot_group": "key",
          "range": "Slot",
          "required": true
        },
        "rank": {
          "name": "rank",
          "description": "An integer which sets the order of this slot relative to the others within a given class.",
          "title": "Rank",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 4,
          "alias": "rank",
          "owner": "SlotUsage",
          "domain_of": [
            "SlotUsage"
          ],
          "slot_group": "attributes",
          "range": "integer"
        },
        "slot_group": {
          "name": "slot_group",
          "description": "An override on a slot's **slot_group** attribute.",
          "title": "Slot Group",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 5,
          "alias": "slot_group",
          "owner": "SlotUsage",
          "domain_of": [
            "Slot",
            "SlotUsage"
          ],
          "slot_group": "attributes",
          "range": "WhitespaceMinimizedString"
        },
        "range": {
          "name": "range",
          "description": "An override on a slot's **range* attribute.",
          "title": "Range",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 6,
          "alias": "range",
          "owner": "SlotUsage",
          "domain_of": [
            "Slot",
            "SlotUsage"
          ],
          "slot_group": "attributes",
          "range": "DataTypeMenu",
          "multivalued": true
        },
        "inlined": {
          "name": "inlined",
          "description": "An override on a slot's **Inlined** attribute.",
          "title": "Inlined",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 7,
          "alias": "inlined",
          "owner": "SlotUsage",
          "domain_of": [
            "SlotUsage"
          ],
          "slot_group": "attributes",
          "range": "TrueFalseMenu"
        },
        "identifier": {
          "name": "identifier",
          "description": "An override on a slot's **Identifier** attribute.",
          "title": "Identifier",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 8,
          "alias": "identifier",
          "owner": "SlotUsage",
          "domain_of": [
            "Slot",
            "SlotUsage"
          ],
          "slot_group": "attributes",
          "range": "TrueFalseMenu"
        },
        "foreign_key": {
          "name": "foreign_key",
          "description": "An override on a slot's **Foreign Key** attribute.",
          "title": "Foreign Key",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 9,
          "alias": "foreign_key",
          "owner": "SlotUsage",
          "domain_of": [
            "Slot",
            "SlotUsage"
          ],
          "slot_group": "attributes",
          "range": "WhitespaceMinimizedString"
        },
        "multivalued": {
          "name": "multivalued",
          "description": "An override on a slot's **Multivalued** attribute.",
          "title": "Multivalued",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 10,
          "alias": "multivalued",
          "owner": "SlotUsage",
          "domain_of": [
            "Slot",
            "SlotUsage"
          ],
          "slot_group": "attributes",
          "range": "TrueFalseMenu"
        },
        "required": {
          "name": "required",
          "description": "An override on a slot's **Required** attribute.",
          "title": "Required",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 11,
          "alias": "required",
          "owner": "SlotUsage",
          "domain_of": [
            "Slot",
            "SlotUsage"
          ],
          "slot_group": "attributes",
          "range": "TrueFalseMenu"
        },
        "recommended": {
          "name": "recommended",
          "description": "An override on a slot's **Recommended** attribute.",
          "title": "Recommended",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 12,
          "alias": "recommended",
          "owner": "SlotUsage",
          "domain_of": [
            "Slot",
            "SlotUsage"
          ],
          "slot_group": "attributes",
          "range": "TrueFalseMenu"
        },
        "minimum_value": {
          "name": "minimum_value",
          "description": "A minimum value which is appropriate for the range data type of the slot.",
          "title": "Minimum_value",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 13,
          "alias": "minimum_value",
          "owner": "SlotUsage",
          "domain_of": [
            "Slot",
            "SlotUsage"
          ],
          "slot_group": "attributes",
          "range": "integer"
        },
        "maximum_value": {
          "name": "maximum_value",
          "description": "A maximum value which is appropriate for the range data type of the slot.",
          "title": "Maximum_value",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 14,
          "alias": "maximum_value",
          "owner": "SlotUsage",
          "domain_of": [
            "Slot",
            "SlotUsage"
          ],
          "slot_group": "attributes",
          "range": "integer"
        },
        "minimum_cardinality": {
          "name": "minimum_cardinality",
          "description": "For multivalued slots, a minimum number of values",
          "title": "Minimum Cardinality",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 15,
          "alias": "minimum_cardinality",
          "owner": "SlotUsage",
          "domain_of": [
            "SlotUsage"
          ],
          "slot_group": "attributes",
          "range": "integer"
        },
        "maximum_cardinality": {
          "name": "maximum_cardinality",
          "description": "For multivalued slots, a maximum number of values",
          "title": "Maximum Cardinality",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 16,
          "alias": "maximum_cardinality",
          "owner": "SlotUsage",
          "domain_of": [
            "SlotUsage"
          ],
          "slot_group": "attributes",
          "range": "integer"
        },
        "pattern": {
          "name": "pattern",
          "description": "A regular expression pattern used to validate a slot's string range data type content.",
          "title": "Pattern",
          "comments": [
            "Regular expressions can begin with ^ to ensure start of string is tested, and $ to ensure up to end is tested."
          ],
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 17,
          "alias": "pattern",
          "owner": "SlotUsage",
          "domain_of": [
            "Slot",
            "SlotUsage"
          ],
          "slot_group": "attributes",
          "range": "WhitespaceMinimizedString"
        },
        "comments": {
          "name": "comments",
          "description": "A free text field for adding other comments to guide usage of field.",
          "title": "Comments",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 18,
          "alias": "comments",
          "owner": "SlotUsage",
          "domain_of": [
            "Slot",
            "SlotUsage"
          ],
          "slot_group": "attributes",
          "range": "WhitespaceMinimizedString"
        },
        "examples": {
          "name": "examples",
          "description": "A free text field for including examples of string, numeric, date or categorical values.",
          "title": "Examples",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 19,
          "alias": "examples",
          "owner": "SlotUsage",
          "domain_of": [
            "Slot",
            "SlotUsage"
          ],
          "slot_group": "attributes",
          "range": "WhitespaceMinimizedString"
        }
      },
      "unique_keys": {
        "slotusage_key": {
          "unique_key_name": "slotusage_key",
          "unique_key_slots": [
            "schema_id",
            "class_id",
            "slot_id"
          ],
          "description": "A class is uniquely identified by the schema it appears in as well as its name."
        }
      }
    },
    "Enum": {
      "name": "Enum",
      "description": "One or more enumerations in given schema.  An enumeration can be used in the \"range\" or \"any of\" attribute of a slot.  Each enumeration has a flat list or hierarchy of permitted values.",
      "from_schema": "https://example.com/DH_LinkML",
      "slot_usage": {
        "schema_id": {
          "name": "schema_id",
          "description": "The coding name of the schema this enumeration is contained in.",
          "title": "Schema",
          "rank": 1,
          "slot_group": "key",
          "range": "Schema"
        },
        "name": {
          "name": "name",
          "description": "The coding name of this LinkML schema enumeration.",
          "comments": [
            "See https://linkml.io/linkml/schemas/enums.html and https://linkml.io/linkml-model/latest/docs/EnumDefinition/"
          ],
          "rank": 2,
          "slot_group": "key"
        },
        "title": {
          "name": "title",
          "description": "The plain language name of this enumeration menu.",
          "rank": 3,
          "slot_group": "attributes"
        },
        "description": {
          "name": "description",
          "description": "A plan text description of this LinkML schema enumeration menu of terms.",
          "rank": 4,
          "slot_group": "attributes",
          "range": "string",
          "required": true
        },
        "enum_uri": {
          "name": "enum_uri",
          "rank": 5,
          "slot_group": "attributes"
        }
      },
      "attributes": {
        "schema_id": {
          "name": "schema_id",
          "annotations": {
            "foreign_key": {
              "tag": "foreign_key",
              "value": "Schema.name"
            }
          },
          "description": "The coding name of the schema this enumeration is contained in.",
          "title": "Schema",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 1,
          "alias": "schema_id",
          "owner": "Enum",
          "domain_of": [
            "Prefix",
            "Class",
            "UniqueKey",
            "Slot",
            "SlotUsage",
            "Enum",
            "PermissibleValue"
          ],
          "slot_group": "key",
          "range": "Schema",
          "required": true
        },
        "name": {
          "name": "name",
          "description": "The coding name of this LinkML schema enumeration.",
          "title": "Name",
          "comments": [
            "See https://linkml.io/linkml/schemas/enums.html and https://linkml.io/linkml-model/latest/docs/EnumDefinition/"
          ],
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 2,
          "alias": "name",
          "owner": "Enum",
          "domain_of": [
            "Schema",
            "Class",
            "UniqueKey",
            "Slot",
            "Enum",
            "PermissibleValue"
          ],
          "slot_group": "key",
          "range": "WhitespaceMinimizedString",
          "required": true
        },
        "title": {
          "name": "title",
          "description": "The plain language name of this enumeration menu.",
          "title": "Title",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 3,
          "alias": "title",
          "owner": "Enum",
          "domain_of": [
            "Class",
            "Slot",
            "Enum"
          ],
          "slot_group": "attributes",
          "range": "WhitespaceMinimizedString",
          "required": true
        },
        "description": {
          "name": "description",
          "description": "A plan text description of this LinkML schema enumeration menu of terms.",
          "title": "Description",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 4,
          "alias": "description",
          "owner": "Enum",
          "domain_of": [
            "Schema",
            "Class",
            "UniqueKey",
            "Slot",
            "Enum",
            "PermissibleValue"
          ],
          "slot_group": "attributes",
          "range": "string",
          "required": true
        },
        "enum_uri": {
          "name": "enum_uri",
          "description": "A URI for identifying this enumeration's semantic type.",
          "title": "Enum URI",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 5,
          "alias": "enum_uri",
          "owner": "Enum",
          "domain_of": [
            "Enum"
          ],
          "slot_group": "attributes",
          "range": "uri"
        }
      },
      "unique_keys": {
        "enum_key": {
          "unique_key_name": "enum_key",
          "unique_key_slots": [
            "schema_id",
            "name"
          ],
          "description": "An enumeration is uniquely identified by the schema it appears in as well as its name."
        }
      }
    },
    "PermissibleValue": {
      "name": "PermissibleValue",
      "description": "An enumeration picklist value.",
      "from_schema": "https://example.com/DH_LinkML",
      "slot_usage": {
        "schema_id": {
          "name": "schema_id",
          "description": "The coding name of the schema this menu choice's menu (enumeration) is contained in.",
          "title": "Schema",
          "rank": 1,
          "slot_group": "key",
          "range": "Schema"
        },
        "enum_id": {
          "name": "enum_id",
          "description": "The coding name of the menu (enumeration) that this choice is contained in.",
          "title": "Enum",
          "rank": 2,
          "slot_group": "key",
          "range": "Enum"
        },
        "name": {
          "name": "name",
          "description": "The coding name of this menu choice (PermissibleValue).",
          "rank": 3,
          "slot_group": "key"
        },
        "text": {
          "name": "text",
          "rank": 4,
          "slot_group": "attributes"
        },
        "description": {
          "name": "description",
          "description": "A plan text description of the meaning of this menu choice.",
          "rank": 5,
          "slot_group": "attributes",
          "range": "string"
        },
        "meaning": {
          "name": "meaning",
          "rank": 6,
          "slot_group": "attributes"
        }
      },
      "attributes": {
        "schema_id": {
          "name": "schema_id",
          "annotations": {
            "foreign_key": {
              "tag": "foreign_key",
              "value": "Schema.name"
            }
          },
          "description": "The coding name of the schema this menu choice's menu (enumeration) is contained in.",
          "title": "Schema",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 1,
          "alias": "schema_id",
          "owner": "PermissibleValue",
          "domain_of": [
            "Prefix",
            "Class",
            "UniqueKey",
            "Slot",
            "SlotUsage",
            "Enum",
            "PermissibleValue"
          ],
          "slot_group": "key",
          "range": "Schema",
          "required": true
        },
        "enum_id": {
          "name": "enum_id",
          "annotations": {
            "foreign_key": {
              "tag": "foreign_key",
              "value": "Enum.name"
            }
          },
          "description": "The coding name of the menu (enumeration) that this choice is contained in.",
          "title": "Enum",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 2,
          "alias": "enum_id",
          "owner": "PermissibleValue",
          "domain_of": [
            "PermissibleValue"
          ],
          "slot_group": "key",
          "range": "Enum",
          "required": true
        },
        "name": {
          "name": "name",
          "description": "The coding name of this menu choice (PermissibleValue).",
          "title": "Name",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 3,
          "alias": "name",
          "owner": "PermissibleValue",
          "domain_of": [
            "Schema",
            "Class",
            "UniqueKey",
            "Slot",
            "Enum",
            "PermissibleValue"
          ],
          "slot_group": "key",
          "range": "WhitespaceMinimizedString",
          "required": true
        },
        "text": {
          "name": "text",
          "description": "The plain language text of this menu choice (PermissibleValue) to display.",
          "title": "Text",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 4,
          "alias": "text",
          "owner": "PermissibleValue",
          "domain_of": [
            "PermissibleValue"
          ],
          "slot_group": "attributes",
          "range": "WhitespaceMinimizedString"
        },
        "description": {
          "name": "description",
          "description": "A plan text description of the meaning of this menu choice.",
          "title": "Description",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 5,
          "alias": "description",
          "owner": "PermissibleValue",
          "domain_of": [
            "Schema",
            "Class",
            "UniqueKey",
            "Slot",
            "Enum",
            "PermissibleValue"
          ],
          "slot_group": "attributes",
          "range": "string"
        },
        "meaning": {
          "name": "meaning",
          "description": "A URI for identifying this choice's semantic type.",
          "title": "Meaning",
          "from_schema": "https://example.com/DH_LinkML",
          "rank": 6,
          "alias": "meaning",
          "owner": "PermissibleValue",
          "domain_of": [
            "PermissibleValue"
          ],
          "slot_group": "attributes",
          "range": "uri"
        }
      },
      "unique_keys": {
        "permissiblevalue_key": {
          "unique_key_name": "permissiblevalue_key",
          "unique_key_slots": [
            "schema_id",
            "enum_id"
          ],
          "description": "An enumeration is uniquely identified by the schema it appears in as well as its name."
        }
      }
    },
    "Container": {
      "name": "Container",
      "from_schema": "https://example.com/DH_LinkML",
      "attributes": {
        "Schemas": {
          "name": "Schemas",
          "from_schema": "https://example.com/DH_LinkML",
          "alias": "Schemas",
          "owner": "Container",
          "domain_of": [
            "Container"
          ],
          "range": "Schema",
          "multivalued": true,
          "inlined_as_list": true
        },
        "Prefixes": {
          "name": "Prefixes",
          "from_schema": "https://example.com/DH_LinkML",
          "alias": "Prefixes",
          "owner": "Container",
          "domain_of": [
            "Container"
          ],
          "range": "Prefix",
          "multivalued": true,
          "inlined_as_list": true
        },
        "Slots": {
          "name": "Slots",
          "from_schema": "https://example.com/DH_LinkML",
          "alias": "Slots",
          "owner": "Container",
          "domain_of": [
            "Container"
          ],
          "range": "Slot",
          "multivalued": true,
          "inlined_as_list": true
        },
        "Enums": {
          "name": "Enums",
          "from_schema": "https://example.com/DH_LinkML",
          "alias": "Enums",
          "owner": "Container",
          "domain_of": [
            "Container"
          ],
          "range": "Enum",
          "multivalued": true,
          "inlined_as_list": true
        },
        "PermissibleValues": {
          "name": "PermissibleValues",
          "from_schema": "https://example.com/DH_LinkML",
          "alias": "PermissibleValues",
          "owner": "Container",
          "domain_of": [
            "Container"
          ],
          "range": "PermissibleValue",
          "multivalued": true,
          "inlined_as_list": true
        },
        "Classes": {
          "name": "Classes",
          "from_schema": "https://example.com/DH_LinkML",
          "alias": "Classes",
          "owner": "Container",
          "domain_of": [
            "Container"
          ],
          "range": "Class",
          "multivalued": true,
          "inlined_as_list": true
        },
        "SlotUsages": {
          "name": "SlotUsages",
          "from_schema": "https://example.com/DH_LinkML",
          "alias": "SlotUsages",
          "owner": "Container",
          "domain_of": [
            "Container"
          ],
          "range": "SlotUsage",
          "multivalued": true,
          "inlined_as_list": true
        },
        "UniqueKeys": {
          "name": "UniqueKeys",
          "from_schema": "https://example.com/DH_LinkML",
          "alias": "UniqueKeys",
          "owner": "Container",
          "domain_of": [
            "Container"
          ],
          "range": "UniqueKey",
          "multivalued": true,
          "inlined_as_list": true
        }
      },
      "tree_root": true
    }
  },
  "settings": {
    "Title_Case": {
      "setting_key": "Title_Case",
      "setting_value": "(((?<=\\b)[^a-z\\W]\\w*?|[\\W])+)"
    },
    "UPPER_CASE": {
      "setting_key": "UPPER_CASE",
      "setting_value": "[A-Z\\W\\d_]*"
    },
    "lower_case": {
      "setting_key": "lower_case",
      "setting_value": "[a-z\\W\\d_]*"
    }
  },
  "@type": "SchemaDefinition"
}