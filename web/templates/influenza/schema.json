{
  "name": "Influenza",
  "description": "Draft template for harmonizing human influenza virus genomic surveillance contextual data.",
  "id": "https://example.com/Influenza",
  "version": "1.1.3",
  "prefixes": {
    "linkml": {
      "prefix_prefix": "linkml",
      "prefix_reference": "https://w3id.org/linkml/"
    },
    "GENEPIO": {
      "prefix_prefix": "GENEPIO",
      "prefix_reference": "http://purl.obolibrary.org/obo/GENEPIO_"
    },
    "xsd": {
      "prefix_prefix": "xsd",
      "prefix_reference": "http://www.w3.org/2001/XMLSchema#"
    },
    "shex": {
      "prefix_prefix": "shex",
      "prefix_reference": "http://www.w3.org/ns/shex#"
    },
    "schema": {
      "prefix_prefix": "schema",
      "prefix_reference": "http://schema.org/"
    }
  },
  "default_prefix": "https://example.com/Influenza/",
  "types": {
    "WhitespaceMinimizedString": {
      "name": "WhitespaceMinimizedString",
      "description": "A string that has all whitespace trimmed off of beginning and end, and all internal whitespace segments reduced to single spaces. Whitespace includes #x9 (tab), #xA (linefeed), and #xD (carriage return).",
      "from_schema": "https://example.com/Influenza",
      "typeof": "string",
      "base": "str",
      "uri": "xsd:token"
    },
    "Provenance": {
      "name": "Provenance",
      "description": "A field containing a DataHarmonizer versioning marker. It is issued by DataHarmonizer when validation is applied to a given row of data.",
      "from_schema": "https://example.com/Influenza",
      "typeof": "string",
      "base": "str",
      "uri": "xsd:token"
    },
    "string": {
      "name": "string",
      "description": "A character string",
      "notes": [
        "In RDF serializations, a slot with range of string is treated as a literal or type xsd:string.   If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"string\"."
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "schema:Text"
      ],
      "base": "str",
      "uri": "xsd:string"
    },
    "integer": {
      "name": "integer",
      "description": "An integer",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"integer\"."
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "schema:Integer"
      ],
      "base": "int",
      "uri": "xsd:integer"
    },
    "boolean": {
      "name": "boolean",
      "description": "A binary (true or false) value",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"boolean\"."
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "schema:Boolean"
      ],
      "base": "Bool",
      "uri": "xsd:boolean",
      "repr": "bool"
    },
    "float": {
      "name": "float",
      "description": "A real number that conforms to the xsd:float specification",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"float\"."
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "schema:Float"
      ],
      "base": "float",
      "uri": "xsd:float"
    },
    "double": {
      "name": "double",
      "description": "A real number that conforms to the xsd:double specification",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"double\"."
      ],
      "from_schema": "https://example.com/Influenza",
      "close_mappings": [
        "schema:Float"
      ],
      "base": "float",
      "uri": "xsd:double"
    },
    "decimal": {
      "name": "decimal",
      "description": "A real number with arbitrary precision that conforms to the xsd:decimal specification",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"decimal\"."
      ],
      "from_schema": "https://example.com/Influenza",
      "broad_mappings": [
        "schema:Number"
      ],
      "base": "Decimal",
      "uri": "xsd:decimal"
    },
    "time": {
      "name": "time",
      "description": "A time object represents a (local) time of day, independent of any particular day",
      "notes": [
        "URI is dateTime because OWL reasoners do not work with straight date or time",
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"time\"."
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "schema:Time"
      ],
      "base": "XSDTime",
      "uri": "xsd:time",
      "repr": "str"
    },
    "date": {
      "name": "date",
      "description": "a date (year, month and day) in an idealized calendar",
      "notes": [
        "URI is dateTime because OWL reasoners don't work with straight date or time",
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"date\"."
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "schema:Date"
      ],
      "base": "XSDDate",
      "uri": "xsd:date",
      "repr": "str"
    },
    "datetime": {
      "name": "datetime",
      "description": "The combination of a date and time",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"datetime\"."
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "schema:DateTime"
      ],
      "base": "XSDDateTime",
      "uri": "xsd:dateTime",
      "repr": "str"
    },
    "date_or_datetime": {
      "name": "date_or_datetime",
      "description": "Either a date or a datetime",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"date_or_datetime\"."
      ],
      "from_schema": "https://example.com/Influenza",
      "base": "str",
      "uri": "linkml:DateOrDatetime",
      "repr": "str"
    },
    "uriorcurie": {
      "name": "uriorcurie",
      "description": "a URI or a CURIE",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"uriorcurie\"."
      ],
      "from_schema": "https://example.com/Influenza",
      "base": "URIorCURIE",
      "uri": "xsd:anyURI",
      "repr": "str"
    },
    "curie": {
      "name": "curie",
      "conforms_to": "https://www.w3.org/TR/curie/",
      "description": "a compact URI",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"curie\"."
      ],
      "comments": [
        "in RDF serializations this MUST be expanded to a URI",
        "in non-RDF serializations MAY be serialized as the compact representation"
      ],
      "from_schema": "https://example.com/Influenza",
      "base": "Curie",
      "uri": "xsd:string",
      "repr": "str"
    },
    "uri": {
      "name": "uri",
      "conforms_to": "https://www.ietf.org/rfc/rfc3987.txt",
      "description": "a complete URI",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"uri\"."
      ],
      "comments": [
        "in RDF serializations a slot with range of uri is treated as a literal or type xsd:anyURI unless it is an identifier or a reference to an identifier, in which case it is translated directly to a node"
      ],
      "from_schema": "https://example.com/Influenza",
      "close_mappings": [
        "schema:URL"
      ],
      "base": "URI",
      "uri": "xsd:anyURI",
      "repr": "str"
    },
    "ncname": {
      "name": "ncname",
      "description": "Prefix part of CURIE",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"ncname\"."
      ],
      "from_schema": "https://example.com/Influenza",
      "base": "NCName",
      "uri": "xsd:string",
      "repr": "str"
    },
    "objectidentifier": {
      "name": "objectidentifier",
      "description": "A URI or CURIE that represents an object in the model.",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"objectidentifier\"."
      ],
      "comments": [
        "Used for inheritance and type checking"
      ],
      "from_schema": "https://example.com/Influenza",
      "base": "ElementIdentifier",
      "uri": "shex:iri",
      "repr": "str"
    },
    "nodeidentifier": {
      "name": "nodeidentifier",
      "description": "A URI, CURIE or BNODE that represents a node in a model.",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"nodeidentifier\"."
      ],
      "from_schema": "https://example.com/Influenza",
      "base": "NodeIdentifier",
      "uri": "shex:nonLiteral",
      "repr": "str"
    },
    "jsonpointer": {
      "name": "jsonpointer",
      "conforms_to": "https://datatracker.ietf.org/doc/html/rfc6901",
      "description": "A string encoding a JSON Pointer. The value of the string MUST conform to JSON Point syntax and SHOULD dereference to a valid object within the current instance document when encoded in tree form.",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"jsonpointer\"."
      ],
      "from_schema": "https://example.com/Influenza",
      "base": "str",
      "uri": "xsd:string",
      "repr": "str"
    },
    "jsonpath": {
      "name": "jsonpath",
      "conforms_to": "https://www.ietf.org/archive/id/draft-goessner-dispatch-jsonpath-00.html",
      "description": "A string encoding a JSON Path. The value of the string MUST conform to JSON Point syntax and SHOULD dereference to zero or more valid objects within the current instance document when encoded in tree form.",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"jsonpath\"."
      ],
      "from_schema": "https://example.com/Influenza",
      "base": "str",
      "uri": "xsd:string",
      "repr": "str"
    },
    "sparqlpath": {
      "name": "sparqlpath",
      "conforms_to": "https://www.w3.org/TR/sparql11-query/#propertypaths",
      "description": "A string encoding a SPARQL Property Path. The value of the string MUST conform to SPARQL syntax and SHOULD dereference to zero or more valid objects within the current instance document when encoded as RDF.",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"sparqlpath\"."
      ],
      "from_schema": "https://example.com/Influenza",
      "base": "str",
      "uri": "xsd:string",
      "repr": "str"
    }
  },
  "enums": {
    "UmbrellaBioprojectAccessionMenu": {
      "name": "UmbrellaBioprojectAccessionMenu",
      "title": "umbrella bioproject accession menu",
      "from_schema": "https://example.com/Influenza"
    },
    "NullValueMenu": {
      "name": "NullValueMenu",
      "title": "null value menu",
      "from_schema": "https://example.com/Influenza",
      "permissible_values": {
        "Not Applicable": {
          "text": "Not Applicable",
          "meaning": "GENEPIO:0001619"
        },
        "Missing": {
          "text": "Missing",
          "meaning": "GENEPIO:0001618"
        },
        "Not Collected": {
          "text": "Not Collected",
          "meaning": "GENEPIO:0001620"
        },
        "Not Provided": {
          "text": "Not Provided",
          "meaning": "GENEPIO:0001668"
        },
        "Restricted Access": {
          "text": "Restricted Access",
          "meaning": "GENEPIO:0001810"
        }
      }
    },
    "GeoLocNameStateProvinceTerritoryMenu": {
      "name": "GeoLocNameStateProvinceTerritoryMenu",
      "title": "geo_loc_name (state/province/territory) menu",
      "from_schema": "https://example.com/Influenza",
      "permissible_values": {
        "Alberta": {
          "text": "Alberta",
          "meaning": "GAZ:00002566"
        },
        "British Columbia": {
          "text": "British Columbia",
          "meaning": "GAZ:00002562"
        },
        "Manitoba": {
          "text": "Manitoba",
          "meaning": "GAZ:00002571"
        },
        "New Brunswick": {
          "text": "New Brunswick",
          "meaning": "GAZ:00002570"
        },
        "Newfoundland and Labrador": {
          "text": "Newfoundland and Labrador",
          "meaning": "GAZ:00002567"
        },
        "Northwest Territories": {
          "text": "Northwest Territories",
          "meaning": "GAZ:00002575"
        },
        "Nova Scotia": {
          "text": "Nova Scotia",
          "meaning": "GAZ:00002565"
        },
        "Nunavut": {
          "text": "Nunavut",
          "meaning": "GAZ:00002574"
        },
        "Ontario": {
          "text": "Ontario",
          "meaning": "GAZ:00002563"
        },
        "Prince Edward Island": {
          "text": "Prince Edward Island",
          "meaning": "GAZ:00002572"
        },
        "Quebec": {
          "text": "Quebec",
          "meaning": "GAZ:00002569"
        },
        "Saskatchewan": {
          "text": "Saskatchewan",
          "meaning": "GAZ:00002564"
        },
        "Yukon": {
          "text": "Yukon",
          "meaning": "GAZ:00002576"
        }
      }
    },
    "HostAgeUnitMenu": {
      "name": "HostAgeUnitMenu",
      "title": "host age unit menu",
      "from_schema": "https://example.com/Influenza",
      "permissible_values": {
        "month": {
          "text": "month",
          "meaning": "UO:0000035"
        },
        "year": {
          "text": "year",
          "meaning": "UO:0000036"
        }
      }
    },
    "SampleCollectionDatePrecisionMenu": {
      "name": "SampleCollectionDatePrecisionMenu",
      "title": "sample collection date precision menu",
      "from_schema": "https://example.com/Influenza",
      "permissible_values": {
        "year": {
          "text": "year",
          "meaning": "UO:0000036"
        },
        "month": {
          "text": "month",
          "meaning": "UO:0000035"
        },
        "day": {
          "text": "day",
          "meaning": "UO:0000033"
        }
      }
    },
    "BiomaterialExtractedMenu": {
      "name": "BiomaterialExtractedMenu",
      "title": "biomaterial extracted menu",
      "from_schema": "https://example.com/Influenza",
      "permissible_values": {
        "RNA (total)": {
          "text": "RNA (total)",
          "meaning": "OBI:0000895"
        },
        "RNA (poly-A)": {
          "text": "RNA (poly-A)",
          "meaning": "OBI:0000869"
        },
        "RNA (ribo-depleted)": {
          "text": "RNA (ribo-depleted)",
          "meaning": "OBI:0002627"
        },
        "mRNA (messenger RNA)": {
          "text": "mRNA (messenger RNA)",
          "meaning": "GENEPIO:0100104"
        },
        "mRNA (cDNA)": {
          "text": "mRNA (cDNA)",
          "meaning": "OBI:0002754"
        }
      }
    },
    "HostVaccinationStatusMenu": {
      "name": "HostVaccinationStatusMenu",
      "title": "host vaccination status menu",
      "from_schema": "https://example.com/Influenza",
      "permissible_values": {
        "Fully Vaccinated": {
          "text": "Fully Vaccinated",
          "meaning": "GENEPIO:0100100"
        },
        "Partially Vaccinated": {
          "text": "Partially Vaccinated",
          "meaning": "GENEPIO:0100101"
        },
        "Not Vaccinated": {
          "text": "Not Vaccinated",
          "meaning": "GENEPIO:0100102"
        }
      }
    },
    "NmlSubmittedSpecimenTypeMenu": {
      "name": "NmlSubmittedSpecimenTypeMenu",
      "title": "NML submitted specimen type menu",
      "from_schema": "https://example.com/Influenza",
      "permissible_values": {
        "Swab": {
          "text": "Swab",
          "meaning": "OBI:0002600"
        },
        "RNA": {
          "text": "RNA",
          "meaning": "OBI:0000880"
        },
        "mRNA (cDNA)": {
          "text": "mRNA (cDNA)",
          "meaning": "OBI:0002754"
        },
        "Nucleic acid": {
          "text": "Nucleic acid",
          "meaning": "OBI:0001010"
        },
        "Not Applicable": {
          "text": "Not Applicable",
          "meaning": "GENEPIO:0001619"
        }
      }
    },
    "RelatedSpecimenRelationshipTypeMenu": {
      "name": "RelatedSpecimenRelationshipTypeMenu",
      "title": "Related specimen relationship type menu",
      "from_schema": "https://example.com/Influenza",
      "permissible_values": {
        "Acute": {
          "text": "Acute",
          "meaning": "HP:0011009"
        },
        "Convalescent": {
          "text": "Convalescent"
        },
        "Familial": {
          "text": "Familial"
        },
        "Follow-up": {
          "text": "Follow-up",
          "meaning": "EFO:0009642"
        },
        "Reinfection testing": {
          "text": "Reinfection testing",
          "is_a": "Follow-up"
        },
        "Previously Submitted": {
          "text": "Previously Submitted"
        },
        "Sequencing/bioinformatics methods development/validation": {
          "text": "Sequencing/bioinformatics methods development/validation"
        },
        "Specimen sampling methods testing": {
          "text": "Specimen sampling methods testing"
        }
      }
    },
    "PresamplingActivityMenu": {
      "name": "PresamplingActivityMenu",
      "title": "presampling activity menu",
      "from_schema": "https://example.com/Influenza",
      "permissible_values": {
        "Post-infection convalescence": {
          "text": "Post-infection convalescence"
        },
        "Vaccination": {
          "text": "Vaccination"
        }
      }
    },
    "VaccineNameMenu": {
      "name": "VaccineNameMenu",
      "title": "vaccine name menu",
      "from_schema": "https://example.com/Influenza"
    },
    "AnatomicalMaterialMenu": {
      "name": "AnatomicalMaterialMenu",
      "title": "anatomical material menu",
      "from_schema": "https://example.com/Influenza",
      "permissible_values": {
        "Blood": {
          "text": "Blood",
          "meaning": "UBERON:0000178"
        },
        "Blood serum": {
          "text": "Blood serum",
          "meaning": "UBERON:0001977",
          "is_a": "Blood"
        },
        "Fluid": {
          "text": "Fluid",
          "meaning": "UBERON:0006314"
        },
        "Fluid (cerebrospinal (CSF))": {
          "text": "Fluid (cerebrospinal (CSF))",
          "meaning": "UBERON:0001359",
          "is_a": "Fluid"
        },
        "Saliva": {
          "text": "Saliva",
          "meaning": "UBERON:0001836",
          "is_a": "Fluid"
        },
        "Tissue": {
          "text": "Tissue",
          "meaning": "UBERON:0000479"
        }
      }
    },
    "AnatomicalPartMenu": {
      "name": "AnatomicalPartMenu",
      "title": "anatomical part menu",
      "from_schema": "https://example.com/Influenza",
      "permissible_values": {
        "Eye": {
          "text": "Eye",
          "meaning": "UBERON:0000970"
        },
        "Lower respiratory tract": {
          "text": "Lower respiratory tract",
          "meaning": "UBERON:0001558"
        },
        "Bronchus": {
          "text": "Bronchus",
          "meaning": "UBERON:0002185",
          "is_a": "Lower respiratory tract"
        },
        "Lung": {
          "text": "Lung",
          "meaning": "UBERON:0002048",
          "is_a": "Lower respiratory tract"
        },
        "Bronchiole": {
          "text": "Bronchiole",
          "meaning": "UBERON:0002186",
          "is_a": "Lung"
        },
        "Alveolar sac": {
          "text": "Alveolar sac",
          "meaning": "UBERON:0002169",
          "is_a": "Lung"
        },
        "Pleural sac": {
          "text": "Pleural sac",
          "meaning": "UBERON:0009778",
          "is_a": "Lower respiratory tract"
        },
        "Pleural cavity": {
          "text": "Pleural cavity",
          "meaning": "UBERON:0002402",
          "is_a": "Pleural sac"
        },
        "Trachea": {
          "text": "Trachea",
          "meaning": "UBERON:0003126",
          "is_a": "Lower respiratory tract"
        },
        "Upper respiratory tract": {
          "text": "Upper respiratory tract",
          "meaning": "UBERON:0001557"
        },
        "Anterior Nares": {
          "text": "Anterior Nares",
          "meaning": "UBERON:2001427",
          "is_a": "Upper respiratory tract"
        },
        "Esophagus": {
          "text": "Esophagus",
          "meaning": "UBERON:0001043",
          "is_a": "Upper respiratory tract"
        },
        "Ethmoid sinus": {
          "text": "Ethmoid sinus",
          "meaning": "UBERON:0002453",
          "is_a": "Upper respiratory tract"
        },
        "Nasal Cavity": {
          "text": "Nasal Cavity",
          "meaning": "UBERON:0001707",
          "is_a": "Upper respiratory tract"
        },
        "Middle Nasal Turbinate": {
          "text": "Middle Nasal Turbinate",
          "meaning": "UBERON:0005921",
          "is_a": "Nasal Cavity"
        },
        "Inferior Nasal Turbinate": {
          "text": "Inferior Nasal Turbinate",
          "meaning": "UBERON:0005922",
          "is_a": "Nasal Cavity"
        },
        "Nasopharynx (NP)": {
          "text": "Nasopharynx (NP)",
          "meaning": "UBERON:0001728",
          "is_a": "Upper respiratory tract"
        },
        "Oropharynx (OP)": {
          "text": "Oropharynx (OP)",
          "meaning": "UBERON:0001729",
          "is_a": "Upper respiratory tract"
        },
        "Throat": {
          "text": "Throat",
          "meaning": "UBERON:0000341",
          "is_a": "Upper respiratory tract"
        }
      }
    },
    "BodyProductMenu": {
      "name": "BodyProductMenu",
      "title": "body product menu",
      "from_schema": "https://example.com/Influenza",
      "permissible_values": {
        "Feces": {
          "text": "Feces",
          "meaning": "UBERON:0001988"
        },
        "Intestinal content": {
          "text": "Intestinal content"
        },
        "Sputum": {
          "text": "Sputum",
          "meaning": "UBERON:0007311",
          "is_a": "Intestinal content"
        },
        "Sweat": {
          "text": "Sweat",
          "meaning": "UBERON:0001089"
        },
        "Urine": {
          "text": "Urine",
          "meaning": "UBERON:0001088"
        }
      }
    },
    "CollectionMethodMenu": {
      "name": "CollectionMethodMenu",
      "title": "collection method menu",
      "from_schema": "https://example.com/Influenza",
      "permissible_values": {
        "Amniocentesis": {
          "text": "Amniocentesis",
          "meaning": "NCIT:C52009"
        },
        "Aspiration": {
          "text": "Aspiration",
          "meaning": "NCIT:C15631"
        },
        "Tracheal aspiration": {
          "text": "Tracheal aspiration",
          "meaning": "GENEPIO:0100029",
          "is_a": "Aspiration"
        },
        "Vacuum Aspiration": {
          "text": "Vacuum Aspiration",
          "meaning": "GENEPIO:0100030",
          "is_a": "Aspiration"
        },
        "Biopsy": {
          "text": "Biopsy",
          "meaning": "OBI:0002650"
        },
        "Filtration": {
          "text": "Filtration",
          "meaning": "OBI:0302885"
        },
        "Air filtration": {
          "text": "Air filtration",
          "meaning": "GENEPIO:0100031",
          "is_a": "Filtration"
        },
        "Lavage": {
          "text": "Lavage",
          "meaning": "OBI:0600044"
        },
        "Bronchoalveolar lavage (BAL)": {
          "text": "Bronchoalveolar lavage (BAL)",
          "meaning": "GENEPIO:0100032",
          "is_a": "Lavage"
        },
        "Gastric Lavage": {
          "text": "Gastric Lavage",
          "meaning": "GENEPIO:0100033",
          "is_a": "Lavage"
        },
        "Rinsing": {
          "text": "Rinsing",
          "meaning": "GENEPIO:0002116"
        },
        "Saline gargle (mouth rinse and gargle)": {
          "text": "Saline gargle (mouth rinse and gargle)",
          "meaning": "GENEPIO:0100034",
          "is_a": "Rinsing"
        },
        "Swabbing": {
          "text": "Swabbing",
          "meaning": "GENEPIO:0002117"
        }
      }
    },
    "CollectionDeviceMenu": {
      "name": "CollectionDeviceMenu",
      "title": "collection device menu",
      "from_schema": "https://example.com/Influenza",
      "permissible_values": {
        "Air filter": {
          "text": "Air filter",
          "meaning": "ENVO:00003968"
        },
        "Bronchoscope": {
          "text": "Bronchoscope",
          "meaning": "OBI:0002826"
        },
        "Collection Container": {
          "text": "Collection Container",
          "meaning": "OBI:0002088"
        },
        "Collection Cup": {
          "text": "Collection Cup",
          "meaning": "GENEPIO:0100026"
        },
        "Fibrobronchoscope Brush": {
          "text": "Fibrobronchoscope Brush",
          "meaning": "OBI:0002825"
        },
        "Filter": {
          "text": "Filter",
          "meaning": "GENEPIO:0100103"
        },
        "Microcapillary tube": {
          "text": "Microcapillary tube",
          "meaning": "OBI:0002858"
        },
        "Micropipette": {
          "text": "Micropipette",
          "meaning": "OBI:0001128"
        },
        "Needle": {
          "text": "Needle",
          "meaning": "OBI:0000436"
        },
        "Sputum Collection Tube": {
          "text": "Sputum Collection Tube",
          "meaning": "OBI:0002861"
        },
        "Swab": {
          "text": "Swab",
          "meaning": "GENEPIO:0100027"
        },
        "Virus Transport Medium": {
          "text": "Virus Transport Medium",
          "meaning": "OBI:0002866"
        }
      }
    },
    "HostScientificNameMenu": {
      "name": "HostScientificNameMenu",
      "title": "host (scientific name) menu",
      "from_schema": "https://example.com/Influenza",
      "permissible_values": {
        "Homo sapiens": {
          "text": "Homo sapiens",
          "meaning": "NCBITaxon:9606"
        }
      }
    },
    "HostCommonNameMenu": {
      "name": "HostCommonNameMenu",
      "title": "host (common name) menu",
      "from_schema": "https://example.com/Influenza",
      "permissible_values": {
        "Human": {
          "text": "Human",
          "meaning": "NCBITaxon:9606"
        }
      }
    },
    "HostHealthStateMenu": {
      "name": "HostHealthStateMenu",
      "title": "host health state menu",
      "from_schema": "https://example.com/Influenza",
      "permissible_values": {
        "Asymptomatic": {
          "text": "Asymptomatic",
          "meaning": "NCIT:C3833"
        },
        "Deceased": {
          "text": "Deceased",
          "meaning": "NCIT:C28554"
        },
        "Healthy": {
          "text": "Healthy",
          "meaning": "NCIT:C115935"
        },
        "Recovered": {
          "text": "Recovered",
          "meaning": "NCIT:C49498"
        },
        "Symptomatic": {
          "text": "Symptomatic",
          "meaning": "NCIT:C25269"
        }
      }
    },
    "HostHealthStatusDetailsMenu": {
      "name": "HostHealthStatusDetailsMenu",
      "title": "host health status details menu",
      "from_schema": "https://example.com/Influenza",
      "permissible_values": {
        "Hospitalized": {
          "text": "Hospitalized",
          "meaning": "NCIT:C25179"
        },
        "Hospitalized (Non-ICU)": {
          "text": "Hospitalized (Non-ICU)",
          "meaning": "GENEPIO:0100045",
          "is_a": "Hospitalized"
        },
        "Hospitalized (ICU)": {
          "text": "Hospitalized (ICU)",
          "meaning": "GENEPIO:0100046",
          "is_a": "Hospitalized"
        },
        "Mechanical Ventilation": {
          "text": "Mechanical Ventilation",
          "meaning": "NCIT:C70909"
        },
        "Medically Isolated": {
          "text": "Medically Isolated",
          "meaning": "GENEPIO:0100047"
        },
        "Medically Isolated (Negative Pressure)": {
          "text": "Medically Isolated (Negative Pressure)",
          "meaning": "GENEPIO:0100048",
          "is_a": "Medically Isolated"
        },
        "Self-quarantining": {
          "text": "Self-quarantining",
          "meaning": "NCIT:C173768"
        }
      }
    },
    "HostHealthOutcomeMenu": {
      "name": "HostHealthOutcomeMenu",
      "title": "host health outcome menu",
      "from_schema": "https://example.com/Influenza",
      "permissible_values": {
        "Deceased": {
          "text": "Deceased",
          "meaning": "NCIT:C28554"
        },
        "Deteriorating": {
          "text": "Deteriorating",
          "meaning": "NCIT:C25254"
        },
        "Recovered": {
          "text": "Recovered",
          "meaning": "NCIT:C49498"
        },
        "Stable": {
          "text": "Stable",
          "meaning": "NCIT:C30103"
        }
      }
    },
    "HostDiseaseMenu": {
      "name": "HostDiseaseMenu",
      "title": "host disease menu",
      "from_schema": "https://example.com/Influenza",
      "permissible_values": {
        "Influenza": {
          "text": "Influenza",
          "meaning": "MONDO:0005812"
        }
      }
    },
    "OrganismMenu": {
      "name": "OrganismMenu",
      "title": "organism menu",
      "from_schema": "https://example.com/Influenza",
      "permissible_values": {
        "Influenza A virus (H1N1)": {
          "text": "Influenza A virus (H1N1)",
          "meaning": "NCBITaxon:1323429"
        },
        "Influenza A virus (H3N2)": {
          "text": "Influenza A virus (H3N2)",
          "meaning": "NCBITaxon:41857"
        },
        "Influenza A virus (H5N1)": {
          "text": "Influenza A virus (H5N1)",
          "meaning": "NCBITaxon:102793"
        },
        "Influenza A virus (H7N9)": {
          "text": "Influenza A virus (H7N9)",
          "meaning": "NCBITaxon:333278"
        },
        "Influenza A virus (H9N2)": {
          "text": "Influenza A virus (H9N2)",
          "meaning": "NCBITaxon:102796"
        },
        "Influenza A virus (H7Nx)": {
          "text": "Influenza A virus (H7Nx)"
        },
        "Influenza A virus (H5Nx)": {
          "text": "Influenza A virus (H5Nx)"
        },
        "Influenza A virus (H10N8)": {
          "text": "Influenza A virus (H10N8)",
          "meaning": "NCBITaxon:286285"
        },
        "Influenza B virus (Yamagata 1/73)": {
          "text": "Influenza B virus (Yamagata 1/73)",
          "meaning": "NCBITaxon:11550"
        },
        "Influenza B virus (Victoria/87)": {
          "text": "Influenza B virus (Victoria/87)",
          "meaning": "NCBITaxon:11548"
        }
      }
    },
    "PurposeOfSamplingMenu": {
      "name": "PurposeOfSamplingMenu",
      "title": "purpose of sampling menu",
      "from_schema": "https://example.com/Influenza",
      "permissible_values": {
        "Cluster/Outbreak investigation": {
          "text": "Cluster/Outbreak investigation",
          "meaning": "GENEPIO:0100001"
        },
        "Diagnostic testing": {
          "text": "Diagnostic testing",
          "meaning": "GENEPIO:0100002"
        },
        "Research": {
          "text": "Research",
          "meaning": "GENEPIO:0100003"
        },
        "Surveillance": {
          "text": "Surveillance",
          "meaning": "GENEPIO:0100004"
        }
      }
    },
    "PurposeOfSequencingMenu": {
      "name": "PurposeOfSequencingMenu",
      "title": "purpose of sequencing menu",
      "from_schema": "https://example.com/Influenza",
      "permissible_values": {
        "Baseline surveillance (random sampling)": {
          "text": "Baseline surveillance (random sampling)",
          "meaning": "GENEPIO:0100005"
        },
        "Targeted surveillance (non-random sampling)": {
          "text": "Targeted surveillance (non-random sampling)",
          "meaning": "GENEPIO:0100006"
        },
        "Priority surveillance project": {
          "text": "Priority surveillance project",
          "meaning": "GENEPIO:0100007",
          "is_a": "Targeted surveillance (non-random sampling)"
        },
        "Longitudinal surveillance (repeat sampling of individuals)": {
          "text": "Longitudinal surveillance (repeat sampling of individuals)",
          "meaning": "GENEPIO:0100009",
          "is_a": "Priority surveillance project"
        },
        "Re-infection surveillance": {
          "text": "Re-infection surveillance",
          "meaning": "GENEPIO:0100010",
          "is_a": "Priority surveillance project"
        },
        "Vaccine escape surveillance": {
          "text": "Vaccine escape surveillance",
          "meaning": "GENEPIO:0100011",
          "is_a": "Priority surveillance project"
        },
        "Cluster/Outbreak investigation": {
          "text": "Cluster/Outbreak investigation",
          "meaning": "GENEPIO:0100019"
        },
        "Multi-jurisdictional outbreak investigation": {
          "text": "Multi-jurisdictional outbreak investigation",
          "meaning": "GENEPIO:0100020",
          "is_a": "Cluster/Outbreak investigation"
        },
        "Intra-jurisdictional outbreak investigation": {
          "text": "Intra-jurisdictional outbreak investigation",
          "meaning": "GENEPIO:0100021",
          "is_a": "Cluster/Outbreak investigation"
        },
        "Research": {
          "text": "Research",
          "meaning": "GENEPIO:0100022"
        },
        "Viral passage experiment": {
          "text": "Viral passage experiment",
          "meaning": "GENEPIO:0100023",
          "is_a": "Research"
        },
        "Protocol testing experiment": {
          "text": "Protocol testing experiment",
          "meaning": "GENEPIO:0100024",
          "is_a": "Research"
        },
        "Retrospective sequencing": {
          "text": "Retrospective sequencing",
          "meaning": "GENEPIO:0100356"
        }
      }
    },
    "SpecimenProcessingMenu": {
      "name": "SpecimenProcessingMenu",
      "title": "specimen processing menu",
      "from_schema": "https://example.com/Influenza",
      "permissible_values": {
        "Virus passage": {
          "text": "Virus passage",
          "meaning": "GENEPIO:0100039"
        },
        "RNA re-extraction (post RT-PCR)": {
          "text": "RNA re-extraction (post RT-PCR)",
          "meaning": "GENEPIO:0100040"
        },
        "Specimens pooled": {
          "text": "Specimens pooled",
          "meaning": "OBI:0600016"
        },
        "RNA (total)": {
          "text": "RNA (total)",
          "meaning": "OBI:0000895"
        },
        "RNA (poly-A)": {
          "text": "RNA (poly-A)",
          "meaning": "OBI:0000869"
        },
        "RNA (ribo-depleted)": {
          "text": "RNA (ribo-depleted)",
          "meaning": "OBI:0002627"
        },
        "mRNA (messenger RNA)": {
          "text": "mRNA (messenger RNA)",
          "meaning": "GENEPIO:0100104"
        },
        "mRNA (cDNA)": {
          "text": "mRNA (cDNA)",
          "meaning": "OBI:0002754"
        }
      }
    },
    "HostAgeBinMenu": {
      "name": "HostAgeBinMenu",
      "title": "host age bin menu",
      "from_schema": "https://example.com/Influenza",
      "permissible_values": {
        "0 - 9": {
          "text": "0 - 9",
          "meaning": "GENEPIO:0100049"
        },
        "10 - 19": {
          "text": "10 - 19",
          "meaning": "GENEPIO:0100050"
        },
        "20 - 29": {
          "text": "20 - 29",
          "meaning": "GENEPIO:0100051"
        },
        "30 - 39": {
          "text": "30 - 39",
          "meaning": "GENEPIO:0100052"
        },
        "40 - 49": {
          "text": "40 - 49",
          "meaning": "GENEPIO:0100053"
        },
        "50 - 59": {
          "text": "50 - 59",
          "meaning": "GENEPIO:0100054"
        },
        "60 - 69": {
          "text": "60 - 69",
          "meaning": "GENEPIO:0100055"
        },
        "70 - 79": {
          "text": "70 - 79",
          "meaning": "GENEPIO:0100056"
        },
        "80 - 89": {
          "text": "80 - 89",
          "meaning": "GENEPIO:0100057"
        },
        "90 - 99": {
          "text": "90 - 99",
          "meaning": "GENEPIO:0100058",
          "exact_mappings": [
            "VirusSeq_Portal:90%2B"
          ]
        },
        "100+": {
          "text": "100+",
          "meaning": "GENEPIO:0100059",
          "exact_mappings": [
            "VirusSeq_Portal:90%2B"
          ]
        }
      }
    },
    "HostGenderMenu": {
      "name": "HostGenderMenu",
      "title": "host gender menu",
      "from_schema": "https://example.com/Influenza",
      "permissible_values": {
        "Female": {
          "text": "Female",
          "meaning": "NCIT:C46110"
        },
        "Male": {
          "text": "Male",
          "meaning": "NCIT:C46109"
        },
        "Non-binary gender": {
          "text": "Non-binary gender",
          "meaning": "GSSO:000132"
        },
        "Transgender (assigned male at birth)": {
          "text": "Transgender (assigned male at birth)",
          "meaning": "GSSO:004004"
        },
        "Transgender (assigned female at birth)": {
          "text": "Transgender (assigned female at birth)",
          "meaning": "GSSO:004005"
        },
        "Undeclared": {
          "text": "Undeclared",
          "meaning": "NCIT:C110959"
        }
      }
    },
    "ExposureEventMenu": {
      "name": "ExposureEventMenu",
      "title": "exposure event menu",
      "from_schema": "https://example.com/Influenza",
      "permissible_values": {
        "Mass Gathering": {
          "text": "Mass Gathering",
          "meaning": "GENEPIO:0100237"
        },
        "Agricultural Event": {
          "text": "Agricultural Event",
          "meaning": "GENEPIO:0100240",
          "is_a": "Mass Gathering"
        },
        "Convention": {
          "text": "Convention",
          "meaning": "GENEPIO:0100238",
          "is_a": "Mass Gathering"
        },
        "Convocation": {
          "text": "Convocation",
          "meaning": "GENEPIO:0100239",
          "is_a": "Mass Gathering"
        },
        "Recreational Event": {
          "text": "Recreational Event",
          "meaning": "GENEPIO:0100417",
          "is_a": "Mass Gathering"
        },
        "Concert": {
          "text": "Concert",
          "meaning": "GENEPIO:0100418",
          "is_a": "Recreational Event"
        },
        "Sporting Event": {
          "text": "Sporting Event",
          "meaning": "GENEPIO:0100419",
          "is_a": "Recreational Event"
        },
        "Religious Gathering": {
          "text": "Religious Gathering",
          "meaning": "GENEPIO:0100241"
        },
        "Mass": {
          "text": "Mass",
          "meaning": "GENEPIO:0100242",
          "is_a": "Religious Gathering"
        },
        "Social Gathering": {
          "text": "Social Gathering",
          "meaning": "PCO:0000033"
        },
        "Baby Shower": {
          "text": "Baby Shower",
          "meaning": "PCO:0000039",
          "is_a": "Social Gathering"
        },
        "Community Event": {
          "text": "Community Event",
          "meaning": "PCO:0000034",
          "is_a": "Social Gathering"
        },
        "Family Gathering": {
          "text": "Family Gathering",
          "meaning": "GENEPIO:0100243",
          "is_a": "Social Gathering"
        },
        "Family Reunion": {
          "text": "Family Reunion",
          "meaning": "GENEPIO:0100244",
          "is_a": "Family Gathering"
        },
        "Funeral": {
          "text": "Funeral",
          "meaning": "GENEPIO:0100245",
          "is_a": "Social Gathering"
        },
        "Party": {
          "text": "Party",
          "meaning": "PCO:0000035",
          "is_a": "Social Gathering"
        },
        "Potluck": {
          "text": "Potluck",
          "meaning": "PCO:0000037",
          "is_a": "Social Gathering"
        },
        "Wedding": {
          "text": "Wedding",
          "meaning": "PCO:0000038",
          "is_a": "Social Gathering"
        },
        "Other exposure event": {
          "text": "Other exposure event"
        }
      }
    },
    "ExposureContactLevelMenu": {
      "name": "ExposureContactLevelMenu",
      "title": "exposure contact level menu",
      "from_schema": "https://example.com/Influenza",
      "permissible_values": {
        "Contact with infected individual": {
          "text": "Contact with infected individual",
          "meaning": "GENEPIO:0100357"
        },
        "Direct contact (direct human-to-human contact)": {
          "text": "Direct contact (direct human-to-human contact)",
          "meaning": "TRANS:0000001",
          "is_a": "Contact with infected individual"
        },
        "Indirect contact": {
          "text": "Indirect contact",
          "meaning": "GENEPIO:0100246",
          "is_a": "Contact with infected individual"
        },
        "Close contact (face-to-face, no direct contact)": {
          "text": "Close contact (face-to-face, no direct contact)",
          "meaning": "GENEPIO:0100247",
          "is_a": "Indirect contact"
        },
        "Casual contact": {
          "text": "Casual contact",
          "meaning": "GENEPIO:0100248",
          "is_a": "Indirect contact"
        }
      }
    },
    "HostRoleMenu": {
      "name": "HostRoleMenu",
      "title": "host role menu",
      "from_schema": "https://example.com/Influenza",
      "permissible_values": {
        "Attendee": {
          "text": "Attendee",
          "meaning": "GENEPIO:0100249"
        },
        "Student": {
          "text": "Student",
          "meaning": "OMRSE:00000058",
          "is_a": "Attendee"
        },
        "Patient": {
          "text": "Patient",
          "meaning": "OMRSE:00000030"
        },
        "Inpatient": {
          "text": "Inpatient",
          "meaning": "NCIT:C25182",
          "is_a": "Patient"
        },
        "Outpatient": {
          "text": "Outpatient",
          "meaning": "NCIT:C28293",
          "is_a": "Patient"
        },
        "Passenger": {
          "text": "Passenger",
          "meaning": "GENEPIO:0100250"
        },
        "Resident": {
          "text": "Resident",
          "meaning": "GENEPIO:0100251"
        },
        "Visitor": {
          "text": "Visitor",
          "meaning": "GENEPIO:0100252"
        },
        "Volunteer": {
          "text": "Volunteer",
          "meaning": "GENEPIO:0100253"
        },
        "Work": {
          "text": "Work",
          "meaning": "GENEPIO:0100254"
        },
        "Administrator": {
          "text": "Administrator",
          "meaning": "GENEPIO:0100255",
          "is_a": "Work"
        },
        "Child Care/Education Worker": {
          "text": "Child Care/Education Worker",
          "is_a": "Work"
        },
        "Essential Worker": {
          "text": "Essential Worker",
          "is_a": "Work"
        },
        "First Responder": {
          "text": "First Responder",
          "meaning": "GENEPIO:0100256",
          "is_a": "Work"
        },
        "Firefighter": {
          "text": "Firefighter",
          "meaning": "GENEPIO:0100257",
          "is_a": "First Responder"
        },
        "Paramedic": {
          "text": "Paramedic",
          "meaning": "GENEPIO:0100258",
          "is_a": "First Responder"
        },
        "Police Officer": {
          "text": "Police Officer",
          "meaning": "GENEPIO:0100259",
          "is_a": "First Responder"
        },
        "Healthcare Worker": {
          "text": "Healthcare Worker",
          "meaning": "GENEPIO:0100334",
          "is_a": "Work"
        },
        "Community Healthcare Worker": {
          "text": "Community Healthcare Worker",
          "meaning": "GENEPIO:0100420",
          "is_a": "Healthcare Worker"
        },
        "Laboratory Worker": {
          "text": "Laboratory Worker",
          "meaning": "GENEPIO:0100262",
          "is_a": "Healthcare Worker"
        },
        "Nurse": {
          "text": "Nurse",
          "meaning": "OMRSE:00000014",
          "is_a": "Healthcare Worker"
        },
        "Personal Care Aid": {
          "text": "Personal Care Aid",
          "meaning": "GENEPIO:0100263",
          "is_a": "Healthcare Worker"
        },
        "Pharmacist": {
          "text": "Pharmacist",
          "meaning": "GENEPIO:0100264",
          "is_a": "Healthcare Worker"
        },
        "Physician": {
          "text": "Physician",
          "meaning": "OMRSE:00000013",
          "is_a": "Healthcare Worker"
        },
        "Housekeeper": {
          "text": "Housekeeper",
          "meaning": "GENEPIO:0100260",
          "is_a": "Work"
        },
        "International worker": {
          "text": "International worker",
          "is_a": "Work"
        },
        "Kitchen Worker": {
          "text": "Kitchen Worker",
          "meaning": "GENEPIO:0100261",
          "is_a": "Work"
        },
        "Rotational Worker": {
          "text": "Rotational Worker",
          "meaning": "GENEPIO:0100354",
          "is_a": "Work"
        },
        "Seasonal Worker": {
          "text": "Seasonal Worker",
          "meaning": "GENEPIO:0100355",
          "is_a": "Work"
        },
        "Transport Worker": {
          "text": "Transport Worker",
          "is_a": "Work"
        },
        "Transport Truck Driver": {
          "text": "Transport Truck Driver",
          "is_a": "Transport Worker"
        },
        "Veterinarian": {
          "text": "Veterinarian",
          "meaning": "GENEPIO:0100265",
          "is_a": "Work"
        },
        "Social role": {
          "text": "Social role",
          "meaning": "OMRSE:00000001"
        },
        "Acquaintance of case": {
          "text": "Acquaintance of case",
          "meaning": "GENEPIO:0100266",
          "is_a": "Social role"
        },
        "Relative of case": {
          "text": "Relative of case",
          "meaning": "GENEPIO:0100267",
          "is_a": "Social role"
        },
        "Child of case": {
          "text": "Child of case",
          "meaning": "GENEPIO:0100268",
          "is_a": "Relative of case"
        },
        "Parent of case": {
          "text": "Parent of case",
          "meaning": "GENEPIO:0100269",
          "is_a": "Relative of case"
        },
        "Father of case": {
          "text": "Father of case",
          "meaning": "GENEPIO:0100270",
          "is_a": "Parent of case"
        },
        "Mother of case": {
          "text": "Mother of case",
          "meaning": "GENEPIO:0100271",
          "is_a": "Parent of case"
        },
        "Spouse of case": {
          "text": "Spouse of case",
          "meaning": "GENEPIO:0100272",
          "is_a": "Social role"
        },
        "Other Host Role": {
          "text": "Other Host Role"
        }
      }
    },
    "ExposureSettingMenu": {
      "name": "ExposureSettingMenu",
      "title": "exposure setting menu",
      "from_schema": "https://example.com/Influenza",
      "permissible_values": {
        "Human Exposure": {
          "text": "Human Exposure",
          "meaning": "ECTO:3000005"
        },
        "Contact with Patient": {
          "text": "Contact with Patient",
          "meaning": "GENEPIO:0100185",
          "is_a": "Human Exposure"
        },
        "Contact with Person with Acute Respiratory Illness": {
          "text": "Contact with Person with Acute Respiratory Illness",
          "meaning": "GENEPIO:0100187",
          "is_a": "Human Exposure"
        },
        "Contact with Person with Fever and/or Cough": {
          "text": "Contact with Person with Fever and/or Cough",
          "meaning": "GENEPIO:0100188",
          "is_a": "Human Exposure"
        },
        "Contact with Person who Recently Travelled": {
          "text": "Contact with Person who Recently Travelled",
          "meaning": "GENEPIO:0100189",
          "is_a": "Human Exposure"
        },
        "Occupational, Residency or Patronage Exposure": {
          "text": "Occupational, Residency or Patronage Exposure",
          "meaning": "GENEPIO:0100190"
        },
        "Abbatoir": {
          "text": "Abbatoir",
          "meaning": "ECTO:1000033",
          "is_a": "Occupational, Residency or Patronage Exposure"
        },
        "Animal Rescue": {
          "text": "Animal Rescue",
          "meaning": "GENEPIO:0100191",
          "is_a": "Occupational, Residency or Patronage Exposure"
        },
        "Childcare": {
          "text": "Childcare",
          "meaning": "GENEPIO:0100192",
          "is_a": "Occupational, Residency or Patronage Exposure"
        },
        "Daycare": {
          "text": "Daycare",
          "meaning": "GENEPIO:0100193",
          "is_a": "Childcare"
        },
        "Nursery": {
          "text": "Nursery",
          "meaning": "GENEPIO:0100194",
          "is_a": "Childcare"
        },
        "Community Service Centre": {
          "text": "Community Service Centre",
          "meaning": "GENEPIO:0100195",
          "is_a": "Occupational, Residency or Patronage Exposure"
        },
        "Correctional Facility": {
          "text": "Correctional Facility",
          "meaning": "GENEPIO:0100196",
          "is_a": "Occupational, Residency or Patronage Exposure"
        },
        "Dormitory": {
          "text": "Dormitory",
          "meaning": "GENEPIO:0100197",
          "is_a": "Occupational, Residency or Patronage Exposure"
        },
        "Farm": {
          "text": "Farm",
          "meaning": "ECTO:1000034",
          "is_a": "Occupational, Residency or Patronage Exposure"
        },
        "First Nations Reserve": {
          "text": "First Nations Reserve",
          "meaning": "GENEPIO:0100198",
          "is_a": "Occupational, Residency or Patronage Exposure"
        },
        "Funeral Home": {
          "text": "Funeral Home",
          "meaning": "GENEPIO:0100199",
          "is_a": "Occupational, Residency or Patronage Exposure"
        },
        "Group Home": {
          "text": "Group Home",
          "meaning": "GENEPIO:0100200",
          "is_a": "Occupational, Residency or Patronage Exposure"
        },
        "Healthcare Setting": {
          "text": "Healthcare Setting",
          "meaning": "GENEPIO:0100201",
          "is_a": "Occupational, Residency or Patronage Exposure"
        },
        "Ambulance": {
          "text": "Ambulance",
          "meaning": "GENEPIO:0100202",
          "is_a": "Healthcare Setting"
        },
        "Acute Care Facility": {
          "text": "Acute Care Facility",
          "meaning": "GENEPIO:0100203",
          "is_a": "Healthcare Setting"
        },
        "Clinic": {
          "text": "Clinic",
          "meaning": "GENEPIO:0100204",
          "is_a": "Healthcare Setting"
        },
        "Community Healthcare (At-Home) Setting": {
          "text": "Community Healthcare (At-Home) Setting",
          "meaning": "GENEPIO:0100415",
          "is_a": "Healthcare Setting"
        },
        "Community Health Centre": {
          "text": "Community Health Centre",
          "meaning": "GENEPIO:0100205",
          "is_a": "Healthcare Setting"
        },
        "Hospital": {
          "text": "Hospital",
          "meaning": "ECTO:1000035",
          "is_a": "Healthcare Setting"
        },
        "Emergency Department": {
          "text": "Emergency Department",
          "meaning": "GENEPIO:0100206",
          "is_a": "Hospital"
        },
        "ICU": {
          "text": "ICU",
          "meaning": "GENEPIO:0100207",
          "is_a": "Hospital"
        },
        "Ward": {
          "text": "Ward",
          "meaning": "GENEPIO:0100208",
          "is_a": "Hospital"
        },
        "Laboratory": {
          "text": "Laboratory",
          "meaning": "ECTO:1000036",
          "is_a": "Healthcare Setting"
        },
        "Long-Term Care Facility": {
          "text": "Long-Term Care Facility",
          "meaning": "GENEPIO:0100209",
          "is_a": "Healthcare Setting"
        },
        "Pharmacy": {
          "text": "Pharmacy",
          "meaning": "GENEPIO:0100210",
          "is_a": "Healthcare Setting"
        },
        "Physician's Office": {
          "text": "Physician's Office",
          "meaning": "GENEPIO:0100211",
          "is_a": "Healthcare Setting"
        },
        "Household": {
          "text": "Household",
          "meaning": "GENEPIO:0100212",
          "is_a": "Occupational, Residency or Patronage Exposure"
        },
        "Insecure Housing (Homeless)": {
          "text": "Insecure Housing (Homeless)",
          "meaning": "GENEPIO:0100213",
          "is_a": "Occupational, Residency or Patronage Exposure"
        },
        "Occupational Exposure": {
          "text": "Occupational Exposure",
          "meaning": "GENEPIO:0100214",
          "is_a": "Occupational, Residency or Patronage Exposure"
        },
        "Worksite": {
          "text": "Worksite",
          "meaning": "GENEPIO:0100215",
          "is_a": "Occupational Exposure"
        },
        "Office": {
          "text": "Office",
          "meaning": "ECTO:1000037",
          "is_a": "Worksite"
        },
        "Outdoors": {
          "text": "Outdoors",
          "meaning": "GENEPIO:0100216",
          "is_a": "Occupational, Residency or Patronage Exposure"
        },
        "Camp/camping": {
          "text": "Camp/camping",
          "meaning": "ECTO:5000009",
          "is_a": "Outdoors"
        },
        "Hiking Trail": {
          "text": "Hiking Trail",
          "meaning": "GENEPIO:0100217",
          "is_a": "Outdoors"
        },
        "Hunting Ground": {
          "text": "Hunting Ground",
          "meaning": "ECTO:6000030",
          "is_a": "Outdoors"
        },
        "Ski Resort": {
          "text": "Ski Resort",
          "meaning": "GENEPIO:0100218",
          "is_a": "Outdoors"
        },
        "Petting zoo": {
          "text": "Petting zoo",
          "meaning": "ECTO:5000008",
          "is_a": "Occupational, Residency or Patronage Exposure"
        },
        "Place of Worship": {
          "text": "Place of Worship",
          "meaning": "GENEPIO:0100220",
          "is_a": "Occupational, Residency or Patronage Exposure"
        },
        "Church": {
          "text": "Church",
          "meaning": "GENEPIO:0100221",
          "is_a": "Place of Worship"
        },
        "Mosque": {
          "text": "Mosque",
          "meaning": "GENEPIO:0100222",
          "is_a": "Place of Worship"
        },
        "Temple": {
          "text": "Temple",
          "meaning": "GENEPIO:0100223",
          "is_a": "Place of Worship"
        },
        "Restaurant": {
          "text": "Restaurant",
          "meaning": "ECTO:1000040",
          "is_a": "Occupational, Residency or Patronage Exposure"
        },
        "Retail Store": {
          "text": "Retail Store",
          "meaning": "ECTO:1000041",
          "is_a": "Occupational, Residency or Patronage Exposure"
        },
        "School": {
          "text": "School",
          "meaning": "GENEPIO:0100224",
          "is_a": "Occupational, Residency or Patronage Exposure"
        },
        "Temporary Residence": {
          "text": "Temporary Residence",
          "meaning": "GENEPIO:0100225",
          "is_a": "Occupational, Residency or Patronage Exposure"
        },
        "Homeless Shelter": {
          "text": "Homeless Shelter",
          "meaning": "GENEPIO:0100226",
          "is_a": "Temporary Residence"
        },
        "Hotel": {
          "text": "Hotel",
          "meaning": "GENEPIO:0100227",
          "is_a": "Temporary Residence"
        },
        "Veterinary Care Clinic": {
          "text": "Veterinary Care Clinic",
          "meaning": "GENEPIO:0100228",
          "is_a": "Occupational, Residency or Patronage Exposure"
        },
        "Travel Exposure": {
          "text": "Travel Exposure",
          "meaning": "GENEPIO:0100229"
        },
        "Travelled on a Cruise Ship": {
          "text": "Travelled on a Cruise Ship",
          "meaning": "GENEPIO:0100230",
          "is_a": "Travel Exposure"
        },
        "Travelled on a Plane": {
          "text": "Travelled on a Plane",
          "meaning": "GENEPIO:0100231",
          "is_a": "Travel Exposure"
        },
        "Travelled on Ground Transport": {
          "text": "Travelled on Ground Transport",
          "meaning": "GENEPIO:0100232",
          "is_a": "Travel Exposure"
        },
        "Travelled outside Province/Territory": {
          "text": "Travelled outside Province/Territory",
          "meaning": "GENEPIO:0001118",
          "is_a": "Travel Exposure"
        },
        "Travelled outside Canada": {
          "text": "Travelled outside Canada",
          "meaning": "GENEPIO:0001119",
          "is_a": "Travel Exposure"
        },
        "Other Exposure Setting": {
          "text": "Other Exposure Setting",
          "meaning": "GENEPIO:0100235"
        }
      }
    },
    "SequencingInstrumentMenu": {
      "name": "SequencingInstrumentMenu",
      "title": "sequencing instrument menu",
      "from_schema": "https://example.com/Influenza",
      "permissible_values": {
        "Illumina": {
          "text": "Illumina",
          "meaning": "GENEPIO:0100105"
        },
        "Illumina Genome Analyzer": {
          "text": "Illumina Genome Analyzer",
          "meaning": "GENEPIO:0100106",
          "is_a": "Illumina"
        },
        "Illumina Genome Analyzer II": {
          "text": "Illumina Genome Analyzer II",
          "meaning": "GENEPIO:0100107",
          "is_a": "Illumina Genome Analyzer"
        },
        "Illumina Genome Analyzer IIx": {
          "text": "Illumina Genome Analyzer IIx",
          "meaning": "GENEPIO:0100108",
          "is_a": "Illumina Genome Analyzer"
        },
        "Illumina HiScanSQ": {
          "text": "Illumina HiScanSQ",
          "meaning": "GENEPIO:0100109",
          "is_a": "Illumina"
        },
        "Illumina HiSeq": {
          "text": "Illumina HiSeq",
          "meaning": "GENEPIO:0100110",
          "is_a": "Illumina"
        },
        "Illumina HiSeq X": {
          "text": "Illumina HiSeq X",
          "meaning": "GENEPIO:0100111",
          "is_a": "Illumina HiSeq"
        },
        "Illumina HiSeq X Five": {
          "text": "Illumina HiSeq X Five",
          "meaning": "GENEPIO:0100112",
          "is_a": "Illumina HiSeq X"
        },
        "Illumina HiSeq X Ten": {
          "text": "Illumina HiSeq X Ten",
          "meaning": "GENEPIO:0100113",
          "is_a": "Illumina HiSeq X"
        },
        "Illumina HiSeq 1000": {
          "text": "Illumina HiSeq 1000",
          "meaning": "GENEPIO:0100114",
          "is_a": "Illumina HiSeq"
        },
        "Illumina HiSeq 1500": {
          "text": "Illumina HiSeq 1500",
          "meaning": "GENEPIO:0100115",
          "is_a": "Illumina HiSeq"
        },
        "Illumina HiSeq 2000": {
          "text": "Illumina HiSeq 2000",
          "meaning": "GENEPIO:0100116",
          "is_a": "Illumina HiSeq"
        },
        "Illumina HiSeq 2500": {
          "text": "Illumina HiSeq 2500",
          "meaning": "GENEPIO:0100117",
          "is_a": "Illumina HiSeq"
        },
        "Illumina HiSeq 3000": {
          "text": "Illumina HiSeq 3000",
          "meaning": "GENEPIO:0100118",
          "is_a": "Illumina HiSeq"
        },
        "Illumina HiSeq 4000": {
          "text": "Illumina HiSeq 4000",
          "meaning": "GENEPIO:0100119",
          "is_a": "Illumina HiSeq"
        },
        "Illumina iSeq": {
          "text": "Illumina iSeq",
          "meaning": "GENEPIO:0100120",
          "is_a": "Illumina"
        },
        "Illumina iSeq 100": {
          "text": "Illumina iSeq 100",
          "meaning": "GENEPIO:0100121",
          "is_a": "Illumina iSeq"
        },
        "Illumina NovaSeq": {
          "text": "Illumina NovaSeq",
          "meaning": "GENEPIO:0100122",
          "is_a": "Illumina"
        },
        "Illumina NovaSeq 6000": {
          "text": "Illumina NovaSeq 6000",
          "meaning": "GENEPIO:0100123",
          "is_a": "Illumina NovaSeq"
        },
        "Illumina MiniSeq": {
          "text": "Illumina MiniSeq",
          "meaning": "GENEPIO:0100124",
          "is_a": "Illumina"
        },
        "Illumina MiSeq": {
          "text": "Illumina MiSeq",
          "meaning": "GENEPIO:0100125",
          "is_a": "Illumina"
        },
        "Illumina NextSeq": {
          "text": "Illumina NextSeq",
          "meaning": "GENEPIO:0100126",
          "is_a": "Illumina"
        },
        "Illumina NextSeq 500": {
          "text": "Illumina NextSeq 500",
          "meaning": "GENEPIO:0100127",
          "is_a": "Illumina NextSeq"
        },
        "Illumina NextSeq 550": {
          "text": "Illumina NextSeq 550",
          "meaning": "GENEPIO:0100128",
          "is_a": "Illumina NextSeq"
        },
        "Illumina NextSeq 2000": {
          "text": "Illumina NextSeq 2000",
          "meaning": "GENEPIO:0100129",
          "is_a": "Illumina NextSeq"
        },
        "Pacific Biosciences": {
          "text": "Pacific Biosciences",
          "meaning": "GENEPIO:0100130"
        },
        "PacBio RS": {
          "text": "PacBio RS",
          "meaning": "GENEPIO:0100131",
          "is_a": "Pacific Biosciences"
        },
        "PacBio RS II": {
          "text": "PacBio RS II",
          "meaning": "GENEPIO:0100132",
          "is_a": "Pacific Biosciences"
        },
        "PacBio Sequel": {
          "text": "PacBio Sequel",
          "meaning": "GENEPIO:0100133",
          "is_a": "Pacific Biosciences"
        },
        "PacBio Sequel II": {
          "text": "PacBio Sequel II",
          "meaning": "GENEPIO:0100134",
          "is_a": "Pacific Biosciences"
        },
        "Ion Torrent": {
          "text": "Ion Torrent",
          "meaning": "GENEPIO:0100135"
        },
        "Ion Torrent PGM": {
          "text": "Ion Torrent PGM",
          "meaning": "GENEPIO:0100136",
          "is_a": "Ion Torrent"
        },
        "Ion Torrent Proton": {
          "text": "Ion Torrent Proton",
          "meaning": "GENEPIO:0100137",
          "is_a": "Ion Torrent"
        },
        "Ion Torrent S5 XL": {
          "text": "Ion Torrent S5 XL",
          "meaning": "GENEPIO:0100138",
          "is_a": "Ion Torrent"
        },
        "Ion Torrent S5": {
          "text": "Ion Torrent S5",
          "meaning": "GENEPIO:0100139",
          "is_a": "Ion Torrent"
        },
        "Oxford Nanopore": {
          "text": "Oxford Nanopore",
          "meaning": "GENEPIO:0100140"
        },
        "Oxford Nanopore GridION": {
          "text": "Oxford Nanopore GridION",
          "meaning": "GENEPIO:0100141",
          "is_a": "Oxford Nanopore"
        },
        "Oxford Nanopore MinION": {
          "text": "Oxford Nanopore MinION",
          "meaning": "GENEPIO:0100142",
          "is_a": "Oxford Nanopore"
        },
        "Oxford Nanopore PromethION": {
          "text": "Oxford Nanopore PromethION",
          "meaning": "GENEPIO:0100143",
          "is_a": "Oxford Nanopore"
        },
        "BGI Genomics": {
          "text": "BGI Genomics",
          "meaning": "GENEPIO:0100144"
        },
        "BGI Genomics BGISEQ-500": {
          "text": "BGI Genomics BGISEQ-500",
          "meaning": "GENEPIO:0100145",
          "is_a": "BGI Genomics"
        },
        "MGI": {
          "text": "MGI",
          "meaning": "GENEPIO:0100146"
        },
        "MGI DNBSEQ-T7": {
          "text": "MGI DNBSEQ-T7",
          "meaning": "GENEPIO:0100147",
          "is_a": "MGI"
        },
        "MGI DNBSEQ-G400": {
          "text": "MGI DNBSEQ-G400",
          "meaning": "GENEPIO:0100148",
          "is_a": "MGI"
        },
        "MGI DNBSEQ-G400 FAST": {
          "text": "MGI DNBSEQ-G400 FAST",
          "meaning": "GENEPIO:0100149",
          "is_a": "MGI"
        },
        "MGI DNBSEQ-G50": {
          "text": "MGI DNBSEQ-G50",
          "meaning": "GENEPIO:0100150",
          "is_a": "MGI"
        }
      }
    },
    "GeneNameMenu": {
      "name": "GeneNameMenu",
      "title": "gene name menu",
      "from_schema": "https://example.com/Influenza",
      "permissible_values": {
        "Matrix (M) gene": {
          "text": "Matrix (M) gene",
          "exact_mappings": [
            "BIOSAMPLE:E%20%28orf4%29"
          ]
        },
        "Haemagglutinin (HA) gene": {
          "text": "Haemagglutinin (HA) gene",
          "exact_mappings": [
            "BIOSAMPLE:M%20%28orf5%29"
          ]
        },
        "Influenza B-  Matrix (M), NP, NS, HA gene": {
          "text": "Influenza B-  Matrix (M), NP, NS, HA gene",
          "exact_mappings": [
            "BIOSAMPLE:N%20%28orf9%29"
          ]
        },
        "In of couple journals genes like PB2, PB1, PA": {
          "text": "In of couple journals genes like PB2, PB1, PA",
          "exact_mappings": [
            "BIOSAMPLE:S%20%28orf2%29"
          ]
        }
      }
    },
    "SequenceSubmittedByMenu": {
      "name": "SequenceSubmittedByMenu",
      "title": "sequence submitted by menu",
      "from_schema": "https://example.com/Influenza",
      "permissible_values": {
        "Alberta Precision Labs (APL)": {
          "text": "Alberta Precision Labs (APL)"
        },
        "Alberta ProvLab North (APLN)": {
          "text": "Alberta ProvLab North (APLN)",
          "is_a": "Alberta Precision Labs (APL)"
        },
        "Alberta ProvLab South (APLS)": {
          "text": "Alberta ProvLab South (APLS)",
          "is_a": "Alberta Precision Labs (APL)"
        },
        "BCCDC Public Health Laboratory": {
          "text": "BCCDC Public Health Laboratory"
        },
        "Canadore College": {
          "text": "Canadore College"
        },
        "The Centre for Applied Genomics (TCAG)": {
          "text": "The Centre for Applied Genomics (TCAG)"
        },
        "Dynacare": {
          "text": "Dynacare"
        },
        "Dynacare (Brampton)": {
          "text": "Dynacare (Brampton)"
        },
        "Dynacare (Manitoba)": {
          "text": "Dynacare (Manitoba)"
        },
        "The Hospital for Sick Children (SickKids)": {
          "text": "The Hospital for Sick Children (SickKids)"
        },
        "Laboratoire de santé publique du Québec (LSPQ)": {
          "text": "Laboratoire de santé publique du Québec (LSPQ)"
        },
        "Manitoba Cadham Provincial Laboratory": {
          "text": "Manitoba Cadham Provincial Laboratory"
        },
        "McGill University": {
          "text": "McGill University"
        },
        "McMaster University": {
          "text": "McMaster University"
        },
        "National Microbiology Laboratory (NML)": {
          "text": "National Microbiology Laboratory (NML)"
        },
        "New Brunswick - Vitalité Health Network": {
          "text": "New Brunswick - Vitalité Health Network"
        },
        "Newfoundland and Labrador - Eastern Health": {
          "text": "Newfoundland and Labrador - Eastern Health"
        },
        "Nova Scotia Health Authority": {
          "text": "Nova Scotia Health Authority"
        },
        "Ontario Institute for Cancer Research (OICR)": {
          "text": "Ontario Institute for Cancer Research (OICR)"
        },
        "Prince Edward Island - Health PEI": {
          "text": "Prince Edward Island - Health PEI"
        },
        "Public Health Ontario (PHO)": {
          "text": "Public Health Ontario (PHO)"
        },
        "Queen's University / Kingston Health Sciences Centre": {
          "text": "Queen's University / Kingston Health Sciences Centre"
        },
        "Saskatchewan - Roy Romanow Provincial Laboratory (RRPL)": {
          "text": "Saskatchewan - Roy Romanow Provincial Laboratory (RRPL)"
        },
        "Sunnybrook Health Sciences Centre": {
          "text": "Sunnybrook Health Sciences Centre"
        },
        "Thunder Bay Regional Health Sciences Centre": {
          "text": "Thunder Bay Regional Health Sciences Centre"
        }
      }
    },
    "SampleCollectedByMenu": {
      "name": "SampleCollectedByMenu",
      "title": "sample collected by menu",
      "from_schema": "https://example.com/Influenza",
      "permissible_values": {
        "Alberta Precision Labs (APL)": {
          "text": "Alberta Precision Labs (APL)"
        },
        "Alberta ProvLab North (APLN)": {
          "text": "Alberta ProvLab North (APLN)",
          "is_a": "Alberta Precision Labs (APL)"
        },
        "Alberta ProvLab South (APLS)": {
          "text": "Alberta ProvLab South (APLS)",
          "is_a": "Alberta Precision Labs (APL)"
        },
        "BCCDC Public Health Laboratory": {
          "text": "BCCDC Public Health Laboratory"
        },
        "Dynacare": {
          "text": "Dynacare"
        },
        "Dynacare (Manitoba)": {
          "text": "Dynacare (Manitoba)"
        },
        "Dynacare (Brampton)": {
          "text": "Dynacare (Brampton)"
        },
        "Eastern Ontario Regional Laboratory Association": {
          "text": "Eastern Ontario Regional Laboratory Association"
        },
        "Hamilton Health Sciences": {
          "text": "Hamilton Health Sciences"
        },
        "The Hospital for Sick Children (SickKids)": {
          "text": "The Hospital for Sick Children (SickKids)"
        },
        "Laboratoire de santé publique du Québec (LSPQ)": {
          "text": "Laboratoire de santé publique du Québec (LSPQ)"
        },
        "Lake of the Woods District Hospital - Ontario": {
          "text": "Lake of the Woods District Hospital - Ontario"
        },
        "LifeLabs": {
          "text": "LifeLabs"
        },
        "LifeLabs (Ontario)": {
          "text": "LifeLabs (Ontario)"
        },
        "Manitoba Cadham Provincial Laboratory": {
          "text": "Manitoba Cadham Provincial Laboratory"
        },
        "McMaster University": {
          "text": "McMaster University"
        },
        "Mount Sinai Hospital": {
          "text": "Mount Sinai Hospital"
        },
        "National Microbiology Laboratory (NML)": {
          "text": "National Microbiology Laboratory (NML)"
        },
        "New Brunswick - Vitalité Health Network": {
          "text": "New Brunswick - Vitalité Health Network"
        },
        "Newfoundland and Labrador - Eastern Health": {
          "text": "Newfoundland and Labrador - Eastern Health"
        },
        "Nova Scotia Health Authority": {
          "text": "Nova Scotia Health Authority"
        },
        "Nunavut": {
          "text": "Nunavut"
        },
        "Ontario Institute for Cancer Research (OICR)": {
          "text": "Ontario Institute for Cancer Research (OICR)"
        },
        "Prince Edward Island - Health PEI": {
          "text": "Prince Edward Island - Health PEI"
        },
        "Public Health Ontario (PHO)": {
          "text": "Public Health Ontario (PHO)"
        },
        "Queen's University / Kingston Health Sciences Centre": {
          "text": "Queen's University / Kingston Health Sciences Centre"
        },
        "Saskatchewan - Roy Romanow Provincial Laboratory (RRPL)": {
          "text": "Saskatchewan - Roy Romanow Provincial Laboratory (RRPL)"
        },
        "Shared Hospital Laboratory": {
          "text": "Shared Hospital Laboratory"
        },
        "St. John's Rehab at Sunnybrook Hospital": {
          "text": "St. John's Rehab at Sunnybrook Hospital"
        },
        "Switch Health": {
          "text": "Switch Health"
        },
        "Sunnybrook Health Sciences Centre": {
          "text": "Sunnybrook Health Sciences Centre"
        },
        "Unity Health Toronto": {
          "text": "Unity Health Toronto"
        },
        "William Osler Health System": {
          "text": "William Osler Health System"
        }
      }
    },
    "GeoLocNameCountryMenu": {
      "name": "GeoLocNameCountryMenu",
      "title": "geo_loc_name (country) menu",
      "from_schema": "https://example.com/Influenza",
      "permissible_values": {
        "Afghanistan": {
          "text": "Afghanistan",
          "meaning": "GAZ:00006882"
        },
        "Albania": {
          "text": "Albania",
          "meaning": "GAZ:00002953"
        },
        "Algeria": {
          "text": "Algeria",
          "meaning": "GAZ:00000563"
        },
        "American Samoa": {
          "text": "American Samoa",
          "meaning": "GAZ:00003957"
        },
        "Andorra": {
          "text": "Andorra",
          "meaning": "GAZ:00002948"
        },
        "Angola": {
          "text": "Angola",
          "meaning": "GAZ:00001095"
        },
        "Anguilla": {
          "text": "Anguilla",
          "meaning": "GAZ:00009159"
        },
        "Antarctica": {
          "text": "Antarctica",
          "meaning": "GAZ:00000462"
        },
        "Antigua and Barbuda": {
          "text": "Antigua and Barbuda",
          "meaning": "GAZ:00006883"
        },
        "Argentina": {
          "text": "Argentina",
          "meaning": "GAZ:00002928"
        },
        "Armenia": {
          "text": "Armenia",
          "meaning": "GAZ:00004094"
        },
        "Aruba": {
          "text": "Aruba",
          "meaning": "GAZ:00004025"
        },
        "Ashmore and Cartier Islands": {
          "text": "Ashmore and Cartier Islands",
          "meaning": "GAZ:00005901"
        },
        "Australia": {
          "text": "Australia",
          "meaning": "GAZ:00000463"
        },
        "Austria": {
          "text": "Austria",
          "meaning": "GAZ:00002942"
        },
        "Azerbaijan": {
          "text": "Azerbaijan",
          "meaning": "GAZ:00004941"
        },
        "Bahamas": {
          "text": "Bahamas",
          "meaning": "GAZ:00002733"
        },
        "Bahrain": {
          "text": "Bahrain",
          "meaning": "GAZ:00005281"
        },
        "Baker Island": {
          "text": "Baker Island",
          "meaning": "GAZ:00007117"
        },
        "Bangladesh": {
          "text": "Bangladesh",
          "meaning": "GAZ:00003750"
        },
        "Barbados": {
          "text": "Barbados",
          "meaning": "GAZ:00001251"
        },
        "Bassas da India": {
          "text": "Bassas da India",
          "meaning": "GAZ:00005810"
        },
        "Belarus": {
          "text": "Belarus",
          "meaning": "GAZ:00006886"
        },
        "Belgium": {
          "text": "Belgium",
          "meaning": "GAZ:00002938"
        },
        "Belize": {
          "text": "Belize",
          "meaning": "GAZ:00002934"
        },
        "Benin": {
          "text": "Benin",
          "meaning": "GAZ:00000904"
        },
        "Bermuda": {
          "text": "Bermuda",
          "meaning": "GAZ:00001264"
        },
        "Bhutan": {
          "text": "Bhutan",
          "meaning": "GAZ:00003920"
        },
        "Bolivia": {
          "text": "Bolivia",
          "meaning": "GAZ:00002511"
        },
        "Borneo": {
          "text": "Borneo",
          "meaning": "GAZ:00025355"
        },
        "Bosnia and Herzegovina": {
          "text": "Bosnia and Herzegovina",
          "meaning": "GAZ:00006887"
        },
        "Botswana": {
          "text": "Botswana",
          "meaning": "GAZ:00001097"
        },
        "Bouvet Island": {
          "text": "Bouvet Island",
          "meaning": "GAZ:00001453"
        },
        "Brazil": {
          "text": "Brazil",
          "meaning": "GAZ:00002828"
        },
        "British Virgin Islands": {
          "text": "British Virgin Islands",
          "meaning": "GAZ:00003961"
        },
        "Brunei": {
          "text": "Brunei",
          "meaning": "GAZ:00003901"
        },
        "Bulgaria": {
          "text": "Bulgaria",
          "meaning": "GAZ:00002950"
        },
        "Burkina Faso": {
          "text": "Burkina Faso",
          "meaning": "GAZ:00000905"
        },
        "Burundi": {
          "text": "Burundi",
          "meaning": "GAZ:00001090"
        },
        "Cambodia": {
          "text": "Cambodia",
          "meaning": "GAZ:00006888"
        },
        "Cameroon": {
          "text": "Cameroon",
          "meaning": "GAZ:00001093"
        },
        "Canada": {
          "text": "Canada",
          "meaning": "GAZ:00002560"
        },
        "Cape Verde": {
          "text": "Cape Verde",
          "meaning": "GAZ:00001227"
        },
        "Cayman Islands": {
          "text": "Cayman Islands",
          "meaning": "GAZ:00003986"
        },
        "Central African Republic": {
          "text": "Central African Republic",
          "meaning": "GAZ:00001089"
        },
        "Chad": {
          "text": "Chad",
          "meaning": "GAZ:00000586"
        },
        "Chile": {
          "text": "Chile",
          "meaning": "GAZ:00002825"
        },
        "China": {
          "text": "China",
          "meaning": "GAZ:00002845"
        },
        "Christmas Island": {
          "text": "Christmas Island",
          "meaning": "GAZ:00005915"
        },
        "Clipperton Island": {
          "text": "Clipperton Island",
          "meaning": "GAZ:00005838"
        },
        "Cocos Islands": {
          "text": "Cocos Islands",
          "meaning": "GAZ:00009721"
        },
        "Colombia": {
          "text": "Colombia",
          "meaning": "GAZ:00002929"
        },
        "Comoros": {
          "text": "Comoros",
          "meaning": "GAZ:00005820"
        },
        "Cook Islands": {
          "text": "Cook Islands",
          "meaning": "GAZ:00053798"
        },
        "Coral Sea Islands": {
          "text": "Coral Sea Islands",
          "meaning": "GAZ:00005917"
        },
        "Costa Rica": {
          "text": "Costa Rica",
          "meaning": "GAZ:00002901"
        },
        "Cote d'Ivoire": {
          "text": "Cote d'Ivoire",
          "meaning": "GAZ:00000906"
        },
        "Croatia": {
          "text": "Croatia",
          "meaning": "GAZ:00002719"
        },
        "Cuba": {
          "text": "Cuba",
          "meaning": "GAZ:00003762"
        },
        "Curacao": {
          "text": "Curacao",
          "meaning": "GAZ:00012582"
        },
        "Cyprus": {
          "text": "Cyprus",
          "meaning": "GAZ:00004006"
        },
        "Czech Republic": {
          "text": "Czech Republic",
          "meaning": "GAZ:00002954"
        },
        "Democratic Republic of the Congo": {
          "text": "Democratic Republic of the Congo",
          "meaning": "GAZ:00001086"
        },
        "Denmark": {
          "text": "Denmark",
          "meaning": "GAZ:00005852"
        },
        "Djibouti": {
          "text": "Djibouti",
          "meaning": "GAZ:00000582"
        },
        "Dominica": {
          "text": "Dominica",
          "meaning": "GAZ:00006890"
        },
        "Dominican Republic": {
          "text": "Dominican Republic",
          "meaning": "GAZ:00003952"
        },
        "Ecuador": {
          "text": "Ecuador",
          "meaning": "GAZ:00002912"
        },
        "Egypt": {
          "text": "Egypt",
          "meaning": "GAZ:00003934"
        },
        "El Salvador": {
          "text": "El Salvador",
          "meaning": "GAZ:00002935"
        },
        "Equatorial Guinea": {
          "text": "Equatorial Guinea",
          "meaning": "GAZ:00001091"
        },
        "Eritrea": {
          "text": "Eritrea",
          "meaning": "GAZ:00000581"
        },
        "Estonia": {
          "text": "Estonia",
          "meaning": "GAZ:00002959"
        },
        "Eswatini": {
          "text": "Eswatini",
          "meaning": "GAZ:00001099"
        },
        "Ethiopia": {
          "text": "Ethiopia",
          "meaning": "GAZ:00000567"
        },
        "Europa Island": {
          "text": "Europa Island",
          "meaning": "GAZ:00005811"
        },
        "Falkland Islands (Islas Malvinas)": {
          "text": "Falkland Islands (Islas Malvinas)",
          "meaning": "GAZ:00001412"
        },
        "Faroe Islands": {
          "text": "Faroe Islands",
          "meaning": "GAZ:00059206"
        },
        "Fiji": {
          "text": "Fiji",
          "meaning": "GAZ:00006891"
        },
        "Finland": {
          "text": "Finland",
          "meaning": "GAZ:00002937"
        },
        "France": {
          "text": "France",
          "meaning": "GAZ:00003940"
        },
        "French Guiana": {
          "text": "French Guiana",
          "meaning": "GAZ:00002516"
        },
        "French Polynesia": {
          "text": "French Polynesia",
          "meaning": "GAZ:00002918"
        },
        "French Southern and Antarctic Lands": {
          "text": "French Southern and Antarctic Lands",
          "meaning": "GAZ:00003753"
        },
        "Gabon": {
          "text": "Gabon",
          "meaning": "GAZ:00001092"
        },
        "Gambia": {
          "text": "Gambia",
          "meaning": "GAZ:00000907"
        },
        "Gaza Strip": {
          "text": "Gaza Strip",
          "meaning": "GAZ:00009571"
        },
        "Georgia": {
          "text": "Georgia",
          "meaning": "GAZ:00004942"
        },
        "Germany": {
          "text": "Germany",
          "meaning": "GAZ:00002646"
        },
        "Ghana": {
          "text": "Ghana",
          "meaning": "GAZ:00000908"
        },
        "Gibraltar": {
          "text": "Gibraltar",
          "meaning": "GAZ:00003987"
        },
        "Glorioso Islands": {
          "text": "Glorioso Islands",
          "meaning": "GAZ:00005808"
        },
        "Greece": {
          "text": "Greece",
          "meaning": "GAZ:00002945"
        },
        "Greenland": {
          "text": "Greenland",
          "meaning": "GAZ:00001507"
        },
        "Grenada": {
          "text": "Grenada",
          "meaning": "GAZ:02000573"
        },
        "Guadeloupe": {
          "text": "Guadeloupe",
          "meaning": "GAZ:00067142"
        },
        "Guam": {
          "text": "Guam",
          "meaning": "GAZ:00003706"
        },
        "Guatemala": {
          "text": "Guatemala",
          "meaning": "GAZ:00002936"
        },
        "Guernsey": {
          "text": "Guernsey",
          "meaning": "GAZ:00001550"
        },
        "Guinea": {
          "text": "Guinea",
          "meaning": "GAZ:00000909"
        },
        "Guinea-Bissau": {
          "text": "Guinea-Bissau",
          "meaning": "GAZ:00000910"
        },
        "Guyana": {
          "text": "Guyana",
          "meaning": "GAZ:00002522"
        },
        "Haiti": {
          "text": "Haiti",
          "meaning": "GAZ:00003953"
        },
        "Heard Island and McDonald Islands": {
          "text": "Heard Island and McDonald Islands",
          "meaning": "GAZ:00009718"
        },
        "Honduras": {
          "text": "Honduras",
          "meaning": "GAZ:00002894"
        },
        "Hong Kong": {
          "text": "Hong Kong",
          "meaning": "GAZ:00003203"
        },
        "Howland Island": {
          "text": "Howland Island",
          "meaning": "GAZ:00007120"
        },
        "Hungary": {
          "text": "Hungary",
          "meaning": "GAZ:00002952"
        },
        "Iceland": {
          "text": "Iceland",
          "meaning": "GAZ:00000843"
        },
        "India": {
          "text": "India",
          "meaning": "GAZ:00002839"
        },
        "Indonesia": {
          "text": "Indonesia",
          "meaning": "GAZ:00003727"
        },
        "Iran": {
          "text": "Iran",
          "meaning": "GAZ:00004474"
        },
        "Iraq": {
          "text": "Iraq",
          "meaning": "GAZ:00004483"
        },
        "Ireland": {
          "text": "Ireland",
          "meaning": "GAZ:00002943"
        },
        "Isle of Man": {
          "text": "Isle of Man",
          "meaning": "GAZ:00052477"
        },
        "Israel": {
          "text": "Israel",
          "meaning": "GAZ:00002476"
        },
        "Italy": {
          "text": "Italy",
          "meaning": "GAZ:00002650"
        },
        "Jamaica": {
          "text": "Jamaica",
          "meaning": "GAZ:00003781"
        },
        "Jan Mayen": {
          "text": "Jan Mayen",
          "meaning": "GAZ:00005853"
        },
        "Japan": {
          "text": "Japan",
          "meaning": "GAZ:00002747"
        },
        "Jarvis Island": {
          "text": "Jarvis Island",
          "meaning": "GAZ:00007118"
        },
        "Jersey": {
          "text": "Jersey",
          "meaning": "GAZ:00001551"
        },
        "Johnston Atoll": {
          "text": "Johnston Atoll",
          "meaning": "GAZ:00007114"
        },
        "Jordan": {
          "text": "Jordan",
          "meaning": "GAZ:00002473"
        },
        "Juan de Nova Island": {
          "text": "Juan de Nova Island",
          "meaning": "GAZ:00005809"
        },
        "Kazakhstan": {
          "text": "Kazakhstan",
          "meaning": "GAZ:00004999"
        },
        "Kenya": {
          "text": "Kenya",
          "meaning": "GAZ:00001101"
        },
        "Kerguelen Archipelago": {
          "text": "Kerguelen Archipelago",
          "meaning": "GAZ:00005682"
        },
        "Kingman Reef": {
          "text": "Kingman Reef",
          "meaning": "GAZ:00007116"
        },
        "Kiribati": {
          "text": "Kiribati",
          "meaning": "GAZ:00006894"
        },
        "Kosovo": {
          "text": "Kosovo",
          "meaning": "GAZ:00011337"
        },
        "Kuwait": {
          "text": "Kuwait",
          "meaning": "GAZ:00005285"
        },
        "Kyrgyzstan": {
          "text": "Kyrgyzstan",
          "meaning": "GAZ:00006893"
        },
        "Laos": {
          "text": "Laos",
          "meaning": "GAZ:00006889"
        },
        "Latvia": {
          "text": "Latvia",
          "meaning": "GAZ:00002958"
        },
        "Lebanon": {
          "text": "Lebanon",
          "meaning": "GAZ:00002478"
        },
        "Lesotho": {
          "text": "Lesotho",
          "meaning": "GAZ:00001098"
        },
        "Liberia": {
          "text": "Liberia",
          "meaning": "GAZ:00000911"
        },
        "Libya": {
          "text": "Libya",
          "meaning": "GAZ:00000566"
        },
        "Liechtenstein": {
          "text": "Liechtenstein",
          "meaning": "GAZ:00003858"
        },
        "Line Islands": {
          "text": "Line Islands",
          "meaning": "GAZ:00007144"
        },
        "Lithuania": {
          "text": "Lithuania",
          "meaning": "GAZ:00002960"
        },
        "Luxembourg": {
          "text": "Luxembourg",
          "meaning": "GAZ:00002947"
        },
        "Macau": {
          "text": "Macau",
          "meaning": "GAZ:00003202"
        },
        "Madagascar": {
          "text": "Madagascar",
          "meaning": "GAZ:00001108"
        },
        "Malawi": {
          "text": "Malawi",
          "meaning": "GAZ:00001105"
        },
        "Malaysia": {
          "text": "Malaysia",
          "meaning": "GAZ:00003902"
        },
        "Maldives": {
          "text": "Maldives",
          "meaning": "GAZ:00006924"
        },
        "Mali": {
          "text": "Mali",
          "meaning": "GAZ:00000584"
        },
        "Malta": {
          "text": "Malta",
          "meaning": "GAZ:00004017"
        },
        "Marshall Islands": {
          "text": "Marshall Islands",
          "meaning": "GAZ:00007161"
        },
        "Martinique": {
          "text": "Martinique",
          "meaning": "GAZ:00067143"
        },
        "Mauritania": {
          "text": "Mauritania",
          "meaning": "GAZ:00000583"
        },
        "Mauritius": {
          "text": "Mauritius",
          "meaning": "GAZ:00003745"
        },
        "Mayotte": {
          "text": "Mayotte",
          "meaning": "GAZ:00003943"
        },
        "Mexico": {
          "text": "Mexico",
          "meaning": "GAZ:00002852"
        },
        "Micronesia": {
          "text": "Micronesia",
          "meaning": "GAZ:00005862"
        },
        "Midway Islands": {
          "text": "Midway Islands",
          "meaning": "GAZ:00007112"
        },
        "Moldova": {
          "text": "Moldova",
          "meaning": "GAZ:00003897"
        },
        "Monaco": {
          "text": "Monaco",
          "meaning": "GAZ:00003857"
        },
        "Mongolia": {
          "text": "Mongolia",
          "meaning": "GAZ:00008744"
        },
        "Montenegro": {
          "text": "Montenegro",
          "meaning": "GAZ:00006898"
        },
        "Montserrat": {
          "text": "Montserrat",
          "meaning": "GAZ:00003988"
        },
        "Morocco": {
          "text": "Morocco",
          "meaning": "GAZ:00000565"
        },
        "Mozambique": {
          "text": "Mozambique",
          "meaning": "GAZ:00001100"
        },
        "Myanmar": {
          "text": "Myanmar",
          "meaning": "GAZ:00006899"
        },
        "Namibia": {
          "text": "Namibia",
          "meaning": "GAZ:00001096"
        },
        "Nauru": {
          "text": "Nauru",
          "meaning": "GAZ:00006900"
        },
        "Navassa Island": {
          "text": "Navassa Island",
          "meaning": "GAZ:00007119"
        },
        "Nepal": {
          "text": "Nepal",
          "meaning": "GAZ:00004399"
        },
        "Netherlands": {
          "text": "Netherlands",
          "meaning": "GAZ:00002946"
        },
        "New Caledonia": {
          "text": "New Caledonia",
          "meaning": "GAZ:00005206"
        },
        "New Zealand": {
          "text": "New Zealand",
          "meaning": "GAZ:00000469"
        },
        "Nicaragua": {
          "text": "Nicaragua",
          "meaning": "GAZ:00002978"
        },
        "Niger": {
          "text": "Niger",
          "meaning": "GAZ:00000585"
        },
        "Nigeria": {
          "text": "Nigeria",
          "meaning": "GAZ:00000912"
        },
        "Niue": {
          "text": "Niue",
          "meaning": "GAZ:00006902"
        },
        "Norfolk Island": {
          "text": "Norfolk Island",
          "meaning": "GAZ:00005908"
        },
        "North Korea": {
          "text": "North Korea",
          "meaning": "GAZ:00002801"
        },
        "North Macedonia": {
          "text": "North Macedonia",
          "meaning": "GAZ:00006895"
        },
        "North Sea": {
          "text": "North Sea",
          "meaning": "GAZ:00002284"
        },
        "Northern Mariana Islands": {
          "text": "Northern Mariana Islands",
          "meaning": "GAZ:00003958"
        },
        "Norway": {
          "text": "Norway",
          "meaning": "GAZ:00002699"
        },
        "Oman": {
          "text": "Oman",
          "meaning": "GAZ:00005283"
        },
        "Pakistan": {
          "text": "Pakistan",
          "meaning": "GAZ:00005246"
        },
        "Palau": {
          "text": "Palau",
          "meaning": "GAZ:00006905"
        },
        "Panama": {
          "text": "Panama",
          "meaning": "GAZ:00002892"
        },
        "Papua New Guinea": {
          "text": "Papua New Guinea",
          "meaning": "GAZ:00003922"
        },
        "Paracel Islands": {
          "text": "Paracel Islands",
          "meaning": "GAZ:00010832"
        },
        "Paraguay": {
          "text": "Paraguay",
          "meaning": "GAZ:00002933"
        },
        "Peru": {
          "text": "Peru",
          "meaning": "GAZ:00002932"
        },
        "Philippines": {
          "text": "Philippines",
          "meaning": "GAZ:00004525"
        },
        "Pitcairn Islands": {
          "text": "Pitcairn Islands",
          "meaning": "GAZ:00005867"
        },
        "Poland": {
          "text": "Poland",
          "meaning": "GAZ:00002939"
        },
        "Portugal": {
          "text": "Portugal",
          "meaning": "GAZ:00004126"
        },
        "Puerto Rico": {
          "text": "Puerto Rico",
          "meaning": "GAZ:00006935"
        },
        "Qatar": {
          "text": "Qatar",
          "meaning": "GAZ:00005286"
        },
        "Republic of the Congo": {
          "text": "Republic of the Congo",
          "meaning": "GAZ:00001088"
        },
        "Reunion": {
          "text": "Reunion",
          "meaning": "GAZ:00003945"
        },
        "Romania": {
          "text": "Romania",
          "meaning": "GAZ:00002951"
        },
        "Ross Sea": {
          "text": "Ross Sea",
          "meaning": "GAZ:00023304"
        },
        "Russia": {
          "text": "Russia",
          "meaning": "GAZ:00002721"
        },
        "Rwanda": {
          "text": "Rwanda",
          "meaning": "GAZ:00001087"
        },
        "Saint Helena": {
          "text": "Saint Helena",
          "meaning": "GAZ:00000849"
        },
        "Saint Kitts and Nevis": {
          "text": "Saint Kitts and Nevis",
          "meaning": "GAZ:00006906"
        },
        "Saint Lucia": {
          "text": "Saint Lucia",
          "meaning": "GAZ:00006909"
        },
        "Saint Pierre and Miquelon": {
          "text": "Saint Pierre and Miquelon",
          "meaning": "GAZ:00003942"
        },
        "Saint Martin": {
          "text": "Saint Martin",
          "meaning": "GAZ:00005841"
        },
        "Saint Vincent and the Grenadines": {
          "text": "Saint Vincent and the Grenadines",
          "meaning": "GAZ:02000565"
        },
        "Samoa": {
          "text": "Samoa",
          "meaning": "GAZ:00006910"
        },
        "San Marino": {
          "text": "San Marino",
          "meaning": "GAZ:00003102"
        },
        "Sao Tome and Principe": {
          "text": "Sao Tome and Principe",
          "meaning": "GAZ:00006927"
        },
        "Saudi Arabia": {
          "text": "Saudi Arabia",
          "meaning": "GAZ:00005279"
        },
        "Senegal": {
          "text": "Senegal",
          "meaning": "GAZ:00000913"
        },
        "Serbia": {
          "text": "Serbia",
          "meaning": "GAZ:00002957"
        },
        "Seychelles": {
          "text": "Seychelles",
          "meaning": "GAZ:00006922"
        },
        "Sierra Leone": {
          "text": "Sierra Leone",
          "meaning": "GAZ:00000914"
        },
        "Singapore": {
          "text": "Singapore",
          "meaning": "GAZ:00003923"
        },
        "Sint Maarten": {
          "text": "Sint Maarten",
          "meaning": "GAZ:00012579"
        },
        "Slovakia": {
          "text": "Slovakia",
          "meaning": "GAZ:00002956"
        },
        "Slovenia": {
          "text": "Slovenia",
          "meaning": "GAZ:00002955"
        },
        "Solomon Islands": {
          "text": "Solomon Islands",
          "meaning": "GAZ:00005275"
        },
        "Somalia": {
          "text": "Somalia",
          "meaning": "GAZ:00001104"
        },
        "South Africa": {
          "text": "South Africa",
          "meaning": "GAZ:00001094"
        },
        "South Georgia and the South Sandwich Islands": {
          "text": "South Georgia and the South Sandwich Islands",
          "meaning": "GAZ:00003990"
        },
        "South Korea": {
          "text": "South Korea",
          "meaning": "GAZ:00002802"
        },
        "South Sudan": {
          "text": "South Sudan",
          "meaning": "GAZ:00233439"
        },
        "Spain": {
          "text": "Spain",
          "meaning": "GAZ:00000591"
        },
        "Spratly Islands": {
          "text": "Spratly Islands",
          "meaning": "GAZ:00010831"
        },
        "Sri Lanka": {
          "text": "Sri Lanka",
          "meaning": "GAZ:00003924"
        },
        "State of Palestine": {
          "text": "State of Palestine",
          "meaning": "GAZ:00002475"
        },
        "Sudan": {
          "text": "Sudan",
          "meaning": "GAZ:00000560"
        },
        "Suriname": {
          "text": "Suriname",
          "meaning": "GAZ:00002525"
        },
        "Svalbard": {
          "text": "Svalbard",
          "meaning": "GAZ:00005396"
        },
        "Swaziland": {
          "text": "Swaziland",
          "meaning": "GAZ:00001099"
        },
        "Sweden": {
          "text": "Sweden",
          "meaning": "GAZ:00002729"
        },
        "Switzerland": {
          "text": "Switzerland",
          "meaning": "GAZ:00002941"
        },
        "Syria": {
          "text": "Syria",
          "meaning": "GAZ:00002474"
        },
        "Taiwan": {
          "text": "Taiwan",
          "meaning": "GAZ:00005341"
        },
        "Tajikistan": {
          "text": "Tajikistan",
          "meaning": "GAZ:00006912"
        },
        "Tanzania": {
          "text": "Tanzania",
          "meaning": "GAZ:00001103"
        },
        "Thailand": {
          "text": "Thailand",
          "meaning": "GAZ:00003744"
        },
        "Timor-Leste": {
          "text": "Timor-Leste",
          "meaning": "GAZ:00006913"
        },
        "Togo": {
          "text": "Togo",
          "meaning": "GAZ:00000915"
        },
        "Tokelau": {
          "text": "Tokelau",
          "meaning": "GAZ:00260188"
        },
        "Tonga": {
          "text": "Tonga",
          "meaning": "GAZ:00006916"
        },
        "Trinidad and Tobago": {
          "text": "Trinidad and Tobago",
          "meaning": "GAZ:00003767"
        },
        "Tromelin Island": {
          "text": "Tromelin Island",
          "meaning": "GAZ:00005812"
        },
        "Tunisia": {
          "text": "Tunisia",
          "meaning": "GAZ:00000562"
        },
        "Turkey": {
          "text": "Turkey",
          "meaning": "GAZ:00000558"
        },
        "Turkmenistan": {
          "text": "Turkmenistan",
          "meaning": "GAZ:00005018"
        },
        "Turks and Caicos Islands": {
          "text": "Turks and Caicos Islands",
          "meaning": "GAZ:00003955"
        },
        "Tuvalu": {
          "text": "Tuvalu",
          "meaning": "GAZ:00009715"
        },
        "United States of America": {
          "text": "United States of America",
          "meaning": "GAZ:00002459"
        },
        "Uganda": {
          "text": "Uganda",
          "meaning": "GAZ:00001102"
        },
        "Ukraine": {
          "text": "Ukraine",
          "meaning": "GAZ:00002724"
        },
        "United Arab Emirates": {
          "text": "United Arab Emirates",
          "meaning": "GAZ:00005282"
        },
        "United Kingdom": {
          "text": "United Kingdom",
          "meaning": "GAZ:00002637"
        },
        "Uruguay": {
          "text": "Uruguay",
          "meaning": "GAZ:00002930"
        },
        "Uzbekistan": {
          "text": "Uzbekistan",
          "meaning": "GAZ:00004979"
        },
        "Vanuatu": {
          "text": "Vanuatu",
          "meaning": "GAZ:00006918"
        },
        "Venezuela": {
          "text": "Venezuela",
          "meaning": "GAZ:00002931"
        },
        "Viet Nam": {
          "text": "Viet Nam",
          "meaning": "GAZ:00003756"
        },
        "Virgin Islands": {
          "text": "Virgin Islands",
          "meaning": "GAZ:00003959"
        },
        "Wake Island": {
          "text": "Wake Island",
          "meaning": "GAZ:00007111"
        },
        "Wallis and Futuna": {
          "text": "Wallis and Futuna",
          "meaning": "GAZ:00007191"
        },
        "West Bank": {
          "text": "West Bank",
          "meaning": "GAZ:00009572"
        },
        "Western Sahara": {
          "text": "Western Sahara",
          "meaning": "GAZ:00000564"
        },
        "Yemen": {
          "text": "Yemen",
          "meaning": "GAZ:00005284"
        },
        "Zambia": {
          "text": "Zambia",
          "meaning": "GAZ:00001107"
        },
        "Zimbabwe": {
          "text": "Zimbabwe",
          "meaning": "GAZ:00001106"
        }
      }
    }
  },
  "slots": {
    "specimen_collector_sample_id": {
      "name": "specimen_collector_sample_id",
      "description": "The user-defined name for the sample.",
      "title": "specimen collector sample ID",
      "comments": [
        "Store the collector sample ID. If this number is considered identifiable information, provide an alternative ID. Be sure to store the key that maps between the original and alternative IDs for traceability and follow up if necessary. Every collector sample ID from a single submitter must be unique. It can have any format, but we suggest that you make it concise, unique and consistent within your lab."
      ],
      "examples": [
        {
          "value": "prov_rona_99"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "GISAID:Sample%20ID%20given%20by%20the%20sample%20provider",
        "CNPHI:Primary%20Specimen%20ID",
        "NML_LIMS:TEXT_ID",
        "BIOSAMPLE:sample_name",
        "VirusSeq_Portal:specimen%20collector%20sample%20ID"
      ],
      "slot_uri": "GENEPIO:0001123",
      "identifier": true,
      "domain_of": [
        "Influenza"
      ],
      "range": "WhitespaceMinimizedString",
      "required": true
    },
    "third_party_lab_service_provider_name": {
      "name": "third_party_lab_service_provider_name",
      "description": "The name of the third party company or laboratory that provided services.",
      "title": "third party lab service provider name",
      "comments": [
        "Provide the full, unabbreviated name of the company or laboratory."
      ],
      "examples": [
        {
          "value": "Switch Health"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "NML_LIMS:HC_TEXT5"
      ],
      "slot_uri": "GENEPIO:0001202",
      "domain_of": [
        "Influenza"
      ],
      "range": "WhitespaceMinimizedString"
    },
    "third_party_lab_sample_id": {
      "name": "third_party_lab_sample_id",
      "description": "The identifier assigned to a sample by a third party service provider.",
      "title": "third party lab sample ID",
      "comments": [
        "Store the sample identifier supplied by the third party services provider."
      ],
      "examples": [
        {
          "value": "SHK123456"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "NML_LIMS:PH_ID_NUMBER_PRIMARY"
      ],
      "slot_uri": "GENEPIO:0001149",
      "domain_of": [
        "Influenza"
      ],
      "range": "WhitespaceMinimizedString"
    },
    "case_id": {
      "name": "case_id",
      "description": "The identifier used to specify an epidemiologically detected case of disease.",
      "title": "case ID",
      "comments": [
        "Provide the case identifer. The case ID greatly facilitates linkage between laboratory and epidemiological data. The case ID may be considered identifiable information. Consult the data steward before sharing."
      ],
      "examples": [
        {
          "value": "ABCD1234"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "NML_LIMS:PH_CASE_ID"
      ],
      "slot_uri": "GENEPIO:0100281",
      "domain_of": [
        "Influenza"
      ],
      "range": "WhitespaceMinimizedString",
      "recommended": true
    },
    "related_specimen_primary_id": {
      "name": "related_specimen_primary_id",
      "description": "The primary ID of a related specimen previously submitted to the repository.",
      "title": "Related specimen primary ID",
      "comments": [
        "Store the primary ID of the related specimen previously submitted to the National Microbiology Laboratory so that the samples can be linked and tracked through the system."
      ],
      "examples": [
        {
          "value": "SR20-12345"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "CNPHI:Related%20Specimen%20ID",
        "CNPHI:Related%20Specimen%20Relationship%20Type",
        "NML_LIMS:PH_RELATED_PRIMARY_ID"
      ],
      "slot_uri": "GENEPIO:0001128",
      "domain_of": [
        "Influenza"
      ],
      "any_of": [
        {
          "range": "WhitespaceMinimizedString"
        },
        {
          "range": "NullValueMenu"
        }
      ]
    },
    "irida_sample_name": {
      "name": "irida_sample_name",
      "description": "The identifier assigned to a sequenced isolate in IRIDA.",
      "title": "IRIDA sample name",
      "comments": [
        "Store the IRIDA sample name. The IRIDA sample name will be created by the individual entering data into the IRIDA platform. IRIDA samples may be linked to metadata and sequence data, or just metadata alone. It is recommended that the IRIDA sample name be the same as, or contain, the specimen collector sample ID for better traceability. It is also recommended that the IRIDA sample name mirror the GISAID accession. IRIDA sample names cannot contain slashes. Slashes should be replaced by underscores. See IRIDA documentation for more information regarding special characters (https://irida.corefacility.ca/documentation/user/user/samples/#adding-a-new-sample)."
      ],
      "examples": [
        {
          "value": "prov_rona_99"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "NML_LIMS:IRIDA%20sample%20name"
      ],
      "slot_uri": "GENEPIO:0001131",
      "domain_of": [
        "Influenza"
      ],
      "range": "WhitespaceMinimizedString"
    },
    "umbrella_bioproject_accession": {
      "name": "umbrella_bioproject_accession",
      "description": "The INSDC accession number assigned to the umbrella BioProject.",
      "title": "umbrella bioproject accession",
      "comments": [
        "Store the umbrella BioProject accession by selecting it from the picklist in the template. The umbrella BioProject accession will be identical for all CanCOGen submitters. Different provinces will have their own BioProjects, however these BioProjects will be linked under one umbrella BioProject."
      ],
      "examples": [
        {
          "value": "PRJNA623807"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "NML_LIMS:umbrella%20bioproject%20accession"
      ],
      "slot_uri": "GENEPIO:0001133",
      "domain_of": [
        "Influenza"
      ],
      "range": "UmbrellaBioprojectAccessionMenu",
      "structured_pattern": {
        "syntax": "{UPPER_CASE}",
        "interpolated": true,
        "partial_match": false
      }
    },
    "bioproject_accession": {
      "name": "bioproject_accession",
      "description": "The INSDC accession number of the BioProject(s) to which the BioSample belongs.",
      "title": "bioproject accession",
      "comments": [
        "Store the BioProject accession number. BioProjects are an organizing tool that links together raw sequence data, assemblies, and their associated metadata. Each province will be assigned a different bioproject accession number by the National Microbiology Lab. A valid NCBI BioProject accession has prefix PRJN e.g., PRJNA12345, and is created once at the beginning of a new sequencing project."
      ],
      "examples": [
        {
          "value": "PRJNA608651"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "CNPHI:BioProject%20Accession",
        "NML_LIMS:PH_BIOPROJECT_ACCESSION",
        "BIOSAMPLE:bioproject_accession"
      ],
      "slot_uri": "GENEPIO:0001136",
      "domain_of": [
        "Influenza"
      ],
      "range": "WhitespaceMinimizedString",
      "structured_pattern": {
        "syntax": "{UPPER_CASE}",
        "interpolated": true,
        "partial_match": false
      }
    },
    "biosample_accession": {
      "name": "biosample_accession",
      "description": "The identifier assigned to a BioSample in INSDC archives.",
      "title": "biosample accession",
      "comments": [
        "Store the accession returned from the BioSample submission. NCBI BioSamples will have the prefix SAMN."
      ],
      "examples": [
        {
          "value": "SAMN14180202"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "CNPHI:BioSample%20Accession",
        "NML_LIMS:PH_BIOSAMPLE_ACCESSION"
      ],
      "slot_uri": "GENEPIO:0001139",
      "domain_of": [
        "Influenza"
      ],
      "range": "WhitespaceMinimizedString",
      "structured_pattern": {
        "syntax": "{UPPER_CASE}",
        "interpolated": true,
        "partial_match": false
      }
    },
    "sra_accession": {
      "name": "sra_accession",
      "description": "The Sequence Read Archive (SRA) identifier linking raw read data, methodological metadata and quality control metrics submitted to the INSDC.",
      "title": "SRA accession",
      "comments": [
        "Store the accession assigned to the submitted \"run\". NCBI-SRA accessions start with SRR."
      ],
      "examples": [
        {
          "value": "SRR11177792"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "CNPHI:SRA%20Accession",
        "NML_LIMS:PH_SRA_ACCESSION"
      ],
      "slot_uri": "GENEPIO:0001142",
      "domain_of": [
        "Influenza"
      ],
      "range": "WhitespaceMinimizedString",
      "structured_pattern": {
        "syntax": "{UPPER_CASE}",
        "interpolated": true,
        "partial_match": false
      }
    },
    "genbank_accession": {
      "name": "genbank_accession",
      "description": "The GenBank identifier assigned to the sequence in the INSDC archives.",
      "title": "GenBank accession",
      "comments": [
        "Store the accession returned from a GenBank submission (viral genome assembly)."
      ],
      "examples": [
        {
          "value": "MN908947.3"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "CNPHI:GenBank%20Accession",
        "NML_LIMS:GenBank%20accession"
      ],
      "slot_uri": "GENEPIO:0001145",
      "domain_of": [
        "Influenza"
      ],
      "range": "WhitespaceMinimizedString",
      "structured_pattern": {
        "syntax": "{UPPER_CASE}",
        "interpolated": true,
        "partial_match": false
      }
    },
    "gisaid_accession": {
      "name": "gisaid_accession",
      "description": "The GISAID accession number assigned to the sequence.",
      "title": "GISAID accession",
      "comments": [
        "Store the accession returned from the GISAID submission."
      ],
      "examples": [
        {
          "value": "EPI_ISL_436489"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "CNPHI:GISAID%20Accession%20%28if%20known%29",
        "NML_LIMS:SUBMISSIONS%20-%20GISAID%20Accession%20ID",
        "BIOSAMPLE:GISAID_accession",
        "VirusSeq_Portal:GISAID%20accession"
      ],
      "slot_uri": "GENEPIO:0001147",
      "domain_of": [
        "Influenza"
      ],
      "range": "WhitespaceMinimizedString",
      "structured_pattern": {
        "syntax": "{UPPER_CASE}",
        "interpolated": true,
        "partial_match": false
      }
    },
    "gisaid_virus_name": {
      "name": "gisaid_virus_name",
      "description": "The user-defined name of the virus, specified in the organism-specific format prescribed by the GISAID database.",
      "title": "GISAID virus name",
      "comments": [
        "Provide the GISAID virus name, which should be written in the format: A/Province/Country/SampleID/year"
      ],
      "examples": [
        {
          "value": "A/Ontario/Canada/ABCD1234/2023"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "domain_of": [
        "Influenza"
      ],
      "range": "WhitespaceMinimizedString",
      "required": true
    },
    "sample_collected_by": {
      "name": "sample_collected_by",
      "description": "The name of the agency that collected the original sample.",
      "title": "sample collected by",
      "comments": [
        "The name of the sample collector should be written out in full, (with minor exceptions) and be consistent across multple submissions e.g. Public Health Agency of Canada, Public Health Ontario, BC Centre for Disease Control. The sample collector specified is at the discretion of the data provider (i.e. may be hospital, provincial public health lab, or other)."
      ],
      "examples": [
        {
          "value": "BC Centre for Disease Control"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "GISAID:Originating%20lab",
        "CNPHI:Lab%20Name",
        "NML_LIMS:CUSTOMER",
        "BIOSAMPLE:collected_by",
        "VirusSeq_Portal:sample%20collected%20by"
      ],
      "slot_uri": "GENEPIO:0001153",
      "domain_of": [
        "Influenza"
      ],
      "required": true,
      "any_of": [
        {
          "range": "SampleCollectedByMenu"
        },
        {
          "range": "NullValueMenu"
        }
      ]
    },
    "sample_collector_contact_email": {
      "name": "sample_collector_contact_email",
      "description": "The email address of the contact responsible for follow-up regarding the sample.",
      "title": "sample collector contact email",
      "comments": [
        "The email address can represent a specific individual or lab e.g. johnnyblogs@lab.ca, or RespLab@lab.ca"
      ],
      "examples": [
        {
          "value": "RespLab@lab.ca"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "NML_LIMS:sample%20collector%20contact%20email"
      ],
      "slot_uri": "GENEPIO:0001156",
      "domain_of": [
        "Influenza"
      ],
      "range": "WhitespaceMinimizedString",
      "pattern": "^\\S+@\\S+\\.\\S+$"
    },
    "sequenced_by": {
      "name": "sequenced_by",
      "description": "The name of the agency that generated the sequence.",
      "title": "sequenced by",
      "comments": [
        "The name of the agency should be written out in full, (with minor exceptions) and be consistent across multiple submissions. If submitting specimens rather than sequencing data, please put the \"National Microbiology Laboratory (NML)\"."
      ],
      "examples": [
        {
          "value": "Public Health Ontario (PHO)"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "NML_LIMS:PH_SEQUENCING_CENTRE",
        "BIOSAMPLE:sequenced_by"
      ],
      "slot_uri": "GENEPIO:0100416",
      "domain_of": [
        "Influenza"
      ],
      "required": true,
      "any_of": [
        {
          "range": "SequencedByMenu"
        },
        {
          "range": "NullValueMenu"
        }
      ]
    },
    "sequence_submitted_by": {
      "name": "sequence_submitted_by",
      "description": "The name of the agency that generated the sequence.",
      "title": "sequence submitted by",
      "comments": [
        "The name of the agency should be written out in full, (with minor exceptions) and be consistent across multple submissions. If submitting specimens rather than sequencing data, please put the \"National Microbiology Laboratory (NML)\"."
      ],
      "examples": [
        {
          "value": "Public Health Ontario (PHO)"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "GISAID:Submitting%20lab",
        "CNPHI:Sequencing%20Centre",
        "NML_LIMS:PH_SEQUENCING_CENTRE",
        "BIOSAMPLE:sequenced_by",
        "VirusSeq_Portal:sequence%20submitted%20by"
      ],
      "slot_uri": "GENEPIO:0001159",
      "domain_of": [
        "Influenza"
      ],
      "required": true,
      "any_of": [
        {
          "range": "SequenceSubmittedByMenu"
        },
        {
          "range": "NullValueMenu"
        }
      ]
    },
    "sample_collection_date": {
      "name": "sample_collection_date",
      "description": "The date on which the sample was collected.",
      "title": "sample collection date",
      "todos": [
        ">=2019-10-01",
        "<={today}"
      ],
      "comments": [
        "Sample collection date is critical for surveillance and many types of analyses. Required granularity includes year, month and day. If this date is considered identifiable information, it is acceptable to add \"jitter\" by adding or subtracting a calendar day (acceptable by GISAID). Alternatively, ”received date” may be used as a substitute. The date should be provided in ISO 8601 standard format \"YYYY-MM-DD\"."
      ],
      "examples": [
        {
          "value": "2020-03-16"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "GISAID:Collection%20date",
        "CNPHI:Patient%20Sample%20Collected%20Date",
        "NML_LIMS:HC_COLLECT_DATE",
        "BIOSAMPLE:sample%20collection%20date",
        "VirusSeq_Portal:sample%20collection%20date"
      ],
      "slot_uri": "GENEPIO:0001174",
      "domain_of": [
        "Influenza"
      ],
      "required": true,
      "any_of": [
        {
          "range": "date"
        },
        {
          "range": "NullValueMenu"
        }
      ]
    },
    "sample_collection_date_precision": {
      "name": "sample_collection_date_precision",
      "description": "The precision to which the \"sample collection date\" was provided.",
      "title": "sample collection date precision",
      "comments": [
        "Provide the precision of granularity to the \"day\", \"month\", or \"year\" for the date provided in the \"sample collection date\" field. The \"sample collection date\" will be truncated to the precision specified upon export; \"day\" for \"YYYY-MM-DD\", \"month\" for \"YYYY-MM\", or \"year\" for \"YYYY\"."
      ],
      "examples": [
        {
          "value": "year"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "CNPHI:Precision%20of%20date%20collected",
        "NML_LIMS:HC_TEXT2"
      ],
      "slot_uri": "GENEPIO:0001177",
      "domain_of": [
        "Influenza"
      ],
      "required": true,
      "any_of": [
        {
          "range": "SampleCollectionDatePrecisionMenu"
        },
        {
          "range": "NullValueMenu"
        }
      ]
    },
    "geo_loc_name_country": {
      "name": "geo_loc_name_country",
      "description": "The country where the sample was collected.",
      "title": "geo_loc_name (country)",
      "comments": [
        "Provide the country name from the controlled vocabulary provided."
      ],
      "examples": [
        {
          "value": "Canada"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "GISAID:Location",
        "CNPHI:Patient%20Country",
        "NML_LIMS:HC_COUNTRY",
        "BIOSAMPLE:geo_loc_name",
        "VirusSeq_Portal:geo_loc_name%20%28country%29"
      ],
      "slot_uri": "GENEPIO:0001181",
      "domain_of": [
        "Influenza"
      ],
      "required": true,
      "any_of": [
        {
          "range": "GeoLocNameCountryMenu"
        },
        {
          "range": "NullValueMenu"
        }
      ]
    },
    "geo_loc_name_state_province_territory": {
      "name": "geo_loc_name_state_province_territory",
      "description": "The province/territory where the sample was collected.",
      "title": "geo_loc_name (state/province/territory)",
      "comments": [
        "Provide the province/territory name from the controlled vocabulary provided."
      ],
      "examples": [
        {
          "value": "Saskatchewan"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "CNPHI:Patient%20Province",
        "NML_LIMS:HC_PROVINCE",
        "BIOSAMPLE:geo_loc_name",
        "VirusSeq_Portal:geo_loc_name%20%28state/province/territory%29"
      ],
      "slot_uri": "GENEPIO:0001185",
      "domain_of": [
        "Influenza"
      ],
      "required": true,
      "any_of": [
        {
          "range": "GeoLocNameStateProvinceTerritoryMenu"
        },
        {
          "range": "NullValueMenu"
        }
      ]
    },
    "organism": {
      "name": "organism",
      "description": "Taxonomic name of the organism.",
      "title": "organism",
      "comments": [
        "Select the type of influenza virus from the picklist provided."
      ],
      "examples": [
        {
          "value": "Influenza virus A virus (H1N1)"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "CNPHI:Pathogen",
        "NML_LIMS:HC_CURRENT_ID",
        "BIOSAMPLE:organism",
        "VirusSeq_Portal:organism"
      ],
      "slot_uri": "GENEPIO:0001191",
      "domain_of": [
        "Influenza"
      ],
      "required": true,
      "any_of": [
        {
          "range": "OrganismMenu"
        },
        {
          "range": "NullValueMenu"
        }
      ]
    },
    "isolate": {
      "name": "isolate",
      "description": "Identifier of the specific isolate.",
      "title": "isolate",
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "GISAID:Virus%20name",
        "CNPHI:GISAID%20Virus%20Name",
        "NML_LIMS:RESULT%20-%20CANCOGEN_SUBMISSIONS",
        "BIOSAMPLE:isolate",
        "BIOSAMPLE:GISAID_virus_name",
        "VirusSeq_Portal:isolate",
        "VirusSeq_Portal:fasta%20header%20name"
      ],
      "slot_uri": "GENEPIO:0001195",
      "domain_of": [
        "Influenza"
      ],
      "required": true,
      "any_of": [
        {
          "range": "WhitespaceMinimizedString"
        },
        {
          "range": "NullValueMenu"
        }
      ]
    },
    "purpose_of_sampling": {
      "name": "purpose_of_sampling",
      "description": "The reason that the sample was collected.",
      "title": "purpose of sampling",
      "comments": [
        "The reason a sample was collected may provide information about potential biases in sampling strategy. Provide the purpose of sampling from the picklist in the template. Most likely, the sample was collected for diagnostic testing. The reason why a sample was originally collected may differ from the reason why it was selected for sequencing, which should be indicated in the \"purpose of sequencing\" field."
      ],
      "examples": [
        {
          "value": "Diagnostic testing"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "CNPHI:Reason%20for%20Sampling",
        "NML_LIMS:HC_SAMPLE_CATEGORY",
        "BIOSAMPLE:purpose_of_sampling",
        "VirusSeq_Portal:purpose%20of%20sampling"
      ],
      "slot_uri": "GENEPIO:0001198",
      "domain_of": [
        "Influenza"
      ],
      "required": true,
      "any_of": [
        {
          "range": "PurposeOfSamplingMenu"
        },
        {
          "range": "NullValueMenu"
        }
      ]
    },
    "purpose_of_sampling_details": {
      "name": "purpose_of_sampling_details",
      "description": "The description of why the sample was collected, providing specific details.",
      "title": "purpose of sampling details",
      "comments": [
        "Provide an expanded description of why the sample was collected using free text. The description may include the importance of the sample for a particular public health investigation/surveillance activity/research question. If details are not available, provide a null value."
      ],
      "examples": [
        {
          "value": "The sample was collected to investigate the prevalence of variants associated with mink-to-human transmission in Canada."
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "CNPHI:Details%20on%20the%20Reason%20for%20Sampling",
        "NML_LIMS:PH_SAMPLING_DETAILS",
        "BIOSAMPLE:description",
        "VirusSeq_Portal:purpose%20of%20sampling%20details"
      ],
      "slot_uri": "GENEPIO:0001200",
      "domain_of": [
        "Influenza"
      ],
      "required": true,
      "any_of": [
        {
          "range": "WhitespaceMinimizedString"
        },
        {
          "range": "NullValueMenu"
        }
      ]
    },
    "nml_submitted_specimen_type": {
      "name": "nml_submitted_specimen_type",
      "description": "The type of specimen submitted to the National Microbiology Laboratory (NML) for testing.",
      "title": "NML submitted specimen type",
      "comments": [
        "This information is required for upload through the CNPHI LaSER system. Select the specimen type from the pick list provided. If sequence data is being submitted rather than a specimen for testing, select “Not Applicable”."
      ],
      "examples": [
        {
          "value": "swab"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "CNPHI:Specimen%20Type",
        "NML_LIMS:PH_SPECIMEN_TYPE"
      ],
      "slot_uri": "GENEPIO:0001204",
      "domain_of": [
        "Influenza"
      ],
      "range": "NmlSubmittedSpecimenTypeMenu",
      "required": true
    },
    "related_specimen_relationship_type": {
      "name": "related_specimen_relationship_type",
      "description": "The relationship of the current specimen to the specimen/sample previously submitted to the repository.",
      "title": "Related specimen relationship type",
      "comments": [
        "Provide the tag that describes how the previous sample is related to the current sample being submitted from the pick list provided, so that the samples can be linked and tracked in the system."
      ],
      "examples": [
        {
          "value": "Reinfection testing"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "CNPHI:Related%20Specimen%20ID",
        "CNPHI:Related%20Specimen%20Relationship%20Type",
        "NML_LIMS:PH_RELATED_RELATIONSHIP_TYPE"
      ],
      "slot_uri": "GENEPIO:0001209",
      "domain_of": [
        "Influenza"
      ],
      "range": "RelatedSpecimenRelationshipTypeMenu"
    },
    "presampling_activity": {
      "name": "presampling_activity",
      "description": "The upstream activities or variables that may affect the sample collected.",
      "title": "presampling_activity",
      "comments": [
        "If there was an activity that would affect the sample prior to collection (this is different than sample processing), provide the activities by selecting one or more values from the template pick list. If the information is unknown or cannot be provided, leave blank or provide a null value."
      ],
      "examples": [
        {
          "value": "Vaccination"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "slot_uri": "GENEPIO:0100433",
      "domain_of": [
        "Influenza"
      ],
      "any_of": [
        {
          "range": "PresamplingActivityMenu"
        },
        {
          "range": "NullValueMenu"
        }
      ]
    },
    "presampling_activity_details": {
      "name": "presampling_activity_details",
      "description": "The details of the activities or variables that may affect the sample collected.",
      "title": "presampling activity details",
      "comments": [
        "Briefly describe the presampling details using free text."
      ],
      "examples": [
        {
          "value": "Patient was previously infected. Sample taken during convalescence."
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "slot_uri": "GENEPIO:0100434",
      "domain_of": [
        "Influenza"
      ],
      "range": "WhitespaceMinimizedString"
    },
    "anatomical_material": {
      "name": "anatomical_material",
      "description": "A substance obtained from an anatomical part of an organism e.g. tissue, blood.",
      "title": "anatomical material",
      "comments": [
        "Provide a descriptor if an anatomical material was sampled. Use the picklist provided in the template. If a desired term is missing from the picklist, contact emma_griffiths@sfu.ca. If not applicable, do not leave blank. Choose a null value."
      ],
      "examples": [
        {
          "value": "Blood"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "GISAID:Specimen%20source",
        "CNPHI:Anatomical%20Material",
        "NML_LIMS:PH_ISOLATION_SITE_DESC",
        "BIOSAMPLE:isolation_source",
        "BIOSAMPLE:anatomical_material",
        "VirusSeq_Portal:anatomical%20material"
      ],
      "slot_uri": "GENEPIO:0001211",
      "domain_of": [
        "Influenza"
      ],
      "required": true,
      "multivalued": true,
      "any_of": [
        {
          "range": "AnatomicalMaterialMenu"
        },
        {
          "range": "NullValueMenu"
        }
      ]
    },
    "anatomical_part": {
      "name": "anatomical_part",
      "description": "An anatomical part of an organism e.g. oropharynx.",
      "title": "anatomical part",
      "comments": [
        "Provide a descriptor if an anatomical part was sampled. Use the picklist provided in the template. If a desired term is missing from the picklist, contact emma_griffiths@sfu.ca. If not applicable, do not leave blank. Choose a null value."
      ],
      "examples": [
        {
          "value": "Nasopharynx (NP)"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "GISAID:Specimen%20source",
        "CNPHI:Anatomical%20Site",
        "NML_LIMS:PH_ISOLATION_SITE",
        "BIOSAMPLE:isolation_source",
        "BIOSAMPLE:anatomical_part",
        "VirusSeq_Portal:anatomical%20part"
      ],
      "slot_uri": "GENEPIO:0001214",
      "domain_of": [
        "Influenza"
      ],
      "required": true,
      "multivalued": true,
      "any_of": [
        {
          "range": "AnatomicalPartMenu"
        },
        {
          "range": "NullValueMenu"
        }
      ]
    },
    "body_product": {
      "name": "body_product",
      "description": "A substance excreted/secreted from an organism e.g. feces, urine, sweat.",
      "title": "body product",
      "comments": [
        "Provide a descriptor if a body product was sampled. Use the picklist provided in the template.  If a desired term is missing from the picklist, contact emma_griffiths@sfu.ca. If not applicable, do not leave blank. Choose a null value."
      ],
      "examples": [
        {
          "value": "Urine"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "GISAID:Specimen%20source",
        "CNPHI:Body%20Product",
        "NML_LIMS:PH_SPECIMEN_SOURCE_DESC",
        "BIOSAMPLE:isolation_source",
        "BIOSAMPLE:body_product",
        "VirusSeq_Portal:body%20product"
      ],
      "slot_uri": "GENEPIO:0001216",
      "domain_of": [
        "Influenza"
      ],
      "required": true,
      "multivalued": true,
      "any_of": [
        {
          "range": "BodyProductMenu"
        },
        {
          "range": "NullValueMenu"
        }
      ]
    },
    "collection_device": {
      "name": "collection_device",
      "description": "The instrument or container used to collect the sample e.g. swab.",
      "title": "collection device",
      "comments": [
        "Provide a descriptor if a device was used for sampling. Use the picklist provided in the template. If a desired term is missing from the picklist, contact emma_griffiths@sfu.ca. If not applicable, do not leave blank. Choose a null value."
      ],
      "examples": [
        {
          "value": "Swab"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "GISAID:Specimen%20source",
        "CNPHI:Specimen%20Collection%20Matrix",
        "NML_LIMS:PH_SPECIMEN_TYPE_ORIG",
        "BIOSAMPLE:isolation_source",
        "BIOSAMPLE:collection_device",
        "VirusSeq_Portal:collection%20device"
      ],
      "slot_uri": "GENEPIO:0001234",
      "domain_of": [
        "Influenza"
      ],
      "required": true,
      "multivalued": true,
      "any_of": [
        {
          "range": "CollectionDeviceMenu"
        },
        {
          "range": "NullValueMenu"
        }
      ]
    },
    "collection_method": {
      "name": "collection_method",
      "description": "The process used to collect the sample e.g. phlebotomy, necropsy.",
      "title": "collection method",
      "comments": [
        "Provide a descriptor if a collection method was used for sampling. Use the picklist provided in the template.  If a desired term is missing from the picklist, contact emma_griffiths@sfu.ca. If not applicable, do not leave blank. Choose a null value."
      ],
      "examples": [
        {
          "value": "Bronchoalveolar lavage (BAL)"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "GISAID:Specimen%20source",
        "CNPHI:Collection%20Method",
        "NML_LIMS:COLLECTION_METHOD",
        "BIOSAMPLE:isolation_source",
        "BIOSAMPLE:collection_method",
        "VirusSeq_Portal:collection%20method"
      ],
      "slot_uri": "GENEPIO:0001241",
      "domain_of": [
        "Influenza"
      ],
      "required": true,
      "multivalued": true,
      "any_of": [
        {
          "range": "CollectionMethodMenu"
        },
        {
          "range": "NullValueMenu"
        }
      ]
    },
    "collection_protocol": {
      "name": "collection_protocol",
      "description": "The name and version of a particular protocol used for sampling.",
      "title": "collection protocol",
      "comments": [
        "Free text."
      ],
      "examples": [
        {
          "value": "FluSamplingProtocol v. 1.2"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "NML_LIMS:collection%20protocol"
      ],
      "slot_uri": "GENEPIO:0001243",
      "domain_of": [
        "Influenza"
      ],
      "range": "WhitespaceMinimizedString"
    },
    "specimen_processing": {
      "name": "specimen_processing",
      "description": "Any processing applied to the sample during or after receiving the sample.",
      "title": "specimen processing",
      "comments": [
        "Critical for interpreting data. Select all the applicable processes from the pick list. If virus was passaged, include information in \"lab host\", \"passage number\", and \"passage method\" fields. If none of the processes in the pick list apply, put \"not applicable\"."
      ],
      "examples": [
        {
          "value": "Virus passage"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "GISAID:Passage%20details/history",
        "NML_LIMS:specimen%20processing"
      ],
      "slot_uri": "GENEPIO:0001253",
      "domain_of": [
        "Influenza"
      ],
      "recommended": true,
      "multivalued": true,
      "any_of": [
        {
          "range": "SpecimenProcessingMenu"
        },
        {
          "range": "NullValueMenu"
        }
      ]
    },
    "specimen_processing_details": {
      "name": "specimen_processing_details",
      "description": "Detailed information regarding the processing applied to a sample during or after receiving the sample.",
      "title": "specimen processing details",
      "comments": [
        "Provide a free text description of any processing details applied to a sample."
      ],
      "examples": [
        {
          "value": "25 swabs were pooled and further prepared as a single sample during library prep."
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "slot_uri": "GENEPIO:0100311",
      "domain_of": [
        "Influenza"
      ],
      "range": "WhitespaceMinimizedString"
    },
    "biomaterial_extracted": {
      "name": "biomaterial_extracted",
      "description": "The biomaterial extracted from samples for the purpose of sequencing.",
      "title": "biomaterial extracted",
      "comments": [
        "Provide the biomaterial extracted from the picklist in the template."
      ],
      "examples": [
        {
          "value": "RNA (total)"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "NML_LIMS:biomaterial%20extracted"
      ],
      "slot_uri": "GENEPIO:0001266",
      "domain_of": [
        "Influenza"
      ],
      "any_of": [
        {
          "range": "BiomaterialExtractedMenu"
        },
        {
          "range": "NullValueMenu"
        }
      ]
    },
    "host_common_name": {
      "name": "host_common_name",
      "description": "The commonly used name of the host.",
      "title": "host (common name)",
      "comments": [
        "Common name or scientific name are required if there was a host. Both can be provided, if known. Use terms from the pick lists in the template. Common name e.g. human, bat. If the sample was environmental, put \"not applicable."
      ],
      "examples": [
        {
          "value": "Human"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "CNPHI:Animal%20Type",
        "NML_LIMS:PH_ANIMAL_TYPE"
      ],
      "slot_uri": "GENEPIO:0001386",
      "domain_of": [
        "Influenza"
      ],
      "any_of": [
        {
          "range": "HostCommonNameMenu"
        },
        {
          "range": "NullValueMenu"
        }
      ]
    },
    "host_scientific_name": {
      "name": "host_scientific_name",
      "description": "The taxonomic, or scientific name of the host.",
      "title": "host (scientific name)",
      "comments": [
        "Common name or scientific name are required if there was a host. Both can be provided, if known. Use terms from the pick lists in the template. Scientific name e.g. Homo sapiens, If the sample was environmental, put \"not applicable"
      ],
      "examples": [
        {
          "value": "Homo sapiens"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "GISAID:Host",
        "NML_LIMS:host%20%28scientific%20name%29",
        "BIOSAMPLE:host",
        "VirusSeq_Portal:host%20%28scientific%20name%29"
      ],
      "slot_uri": "GENEPIO:0001387",
      "domain_of": [
        "Influenza"
      ],
      "required": true,
      "any_of": [
        {
          "range": "HostScientificNameMenu"
        },
        {
          "range": "NullValueMenu"
        }
      ]
    },
    "host_health_state": {
      "name": "host_health_state",
      "description": "Health status of the host at the time of sample collection.",
      "title": "host health state",
      "comments": [
        "If known, select a descriptor from the pick list provided in the template."
      ],
      "examples": [
        {
          "value": "Symptomatic"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "GISAID:Patient%20status",
        "CNPHI:Host%20Health%20State",
        "NML_LIMS:PH_HOST_HEALTH",
        "BIOSAMPLE:host_health_state"
      ],
      "slot_uri": "GENEPIO:0001388",
      "domain_of": [
        "Influenza"
      ],
      "any_of": [
        {
          "range": "HostHealthStateMenu"
        },
        {
          "range": "NullValueMenu"
        }
      ]
    },
    "host_health_status_details": {
      "name": "host_health_status_details",
      "description": "Further details pertaining to the health or disease status of the host at time of collection.",
      "title": "host health status details",
      "comments": [
        "If known, select a descriptor from the pick list provided in the template."
      ],
      "examples": [
        {
          "value": "Hospitalized (ICU)"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "CNPHI:Host%20Health%20State%20Details",
        "NML_LIMS:PH_HOST_HEALTH_DETAILS"
      ],
      "slot_uri": "GENEPIO:0001389",
      "domain_of": [
        "Influenza"
      ],
      "any_of": [
        {
          "range": "HostHealthStatusDetailsMenu"
        },
        {
          "range": "NullValueMenu"
        }
      ]
    },
    "host_health_outcome": {
      "name": "host_health_outcome",
      "description": "Disease outcome in the host.",
      "title": "host health outcome",
      "comments": [
        "If known, select a descriptor from the pick list provided in the template."
      ],
      "examples": [
        {
          "value": "Recovered"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "NML_LIMS:PH_HOST_HEALTH_OUTCOME",
        "BIOSAMPLE:host_disease_outcome"
      ],
      "slot_uri": "GENEPIO:0001390",
      "domain_of": [
        "Influenza"
      ],
      "any_of": [
        {
          "range": "HostHealthOutcomeMenu"
        },
        {
          "range": "NullValueMenu"
        }
      ]
    },
    "host_disease": {
      "name": "host_disease",
      "description": "The name of the disease experienced by the host.",
      "title": "host disease",
      "comments": [
        "Select \"Influenza\" from the pick list provided in the template."
      ],
      "examples": [
        {
          "value": "Influenza"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "CNPHI:Host%20Disease",
        "NML_LIMS:PH_HOST_DISEASE",
        "BIOSAMPLE:host_disease",
        "VirusSeq_Portal:host%20disease"
      ],
      "slot_uri": "GENEPIO:0001391",
      "domain_of": [
        "Influenza"
      ],
      "required": true,
      "any_of": [
        {
          "range": "HostDiseaseMenu"
        },
        {
          "range": "NullValueMenu"
        }
      ]
    },
    "host_age": {
      "name": "host_age",
      "description": "Age of host at the time of sampling.",
      "title": "host age",
      "comments": [
        "Enter the age of the host in years. If not available, provide a null value. If there is not host, put \"Not Applicable\"."
      ],
      "examples": [
        {
          "value": "79"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "GISAID:Patient%20age",
        "CNPHI:Patient%20Age",
        "NML_LIMS:PH_AGE",
        "BIOSAMPLE:host_age",
        "VirusSeq_Portal:host%20age"
      ],
      "slot_uri": "GENEPIO:0001392",
      "domain_of": [
        "Influenza"
      ],
      "required": true,
      "minimum_value": 0,
      "maximum_value": 130,
      "any_of": [
        {
          "range": "decimal"
        },
        {
          "range": "NullValueMenu"
        }
      ]
    },
    "host_age_unit": {
      "name": "host_age_unit",
      "description": "The unit used to measure the host age, in either months or years.",
      "title": "host age unit",
      "comments": [
        "Indicate whether the host age is in months or years. Age indicated in months will be binned to the 0 - 9 year age bin."
      ],
      "examples": [
        {
          "value": "years"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "CNPHI:Age%20Units",
        "NML_LIMS:PH_AGE_UNIT",
        "VirusSeq_Portal:host%20age%20unit"
      ],
      "slot_uri": "GENEPIO:0001393",
      "domain_of": [
        "Influenza"
      ],
      "required": true,
      "any_of": [
        {
          "range": "HostAgeUnitMenu"
        },
        {
          "range": "NullValueMenu"
        }
      ]
    },
    "host_age_bin": {
      "name": "host_age_bin",
      "description": "Age of host at the time of sampling, expressed as an age group.",
      "title": "host age bin",
      "comments": [
        "Select the corresponding host age bin from the pick list provided in the template. If not available, provide a null value."
      ],
      "examples": [
        {
          "value": "60 - 69"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "CNPHI:Host%20Age%20Category",
        "NML_LIMS:PH_AGE_GROUP",
        "VirusSeq_Portal:host%20age%20bin"
      ],
      "slot_uri": "GENEPIO:0001394",
      "domain_of": [
        "Influenza"
      ],
      "required": true,
      "any_of": [
        {
          "range": "HostAgeBinMenu"
        },
        {
          "range": "NullValueMenu"
        }
      ]
    },
    "host_gender": {
      "name": "host_gender",
      "description": "The gender of the host at the time of sample collection.",
      "title": "host gender",
      "comments": [
        "Select the corresponding host gender from the pick list provided in the template. If not available, provide a null value. If there is no host, put \"Not Applicable\"."
      ],
      "examples": [
        {
          "value": "Male"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "GISAID:Gender",
        "CNPHI:Patient%20Sex",
        "NML_LIMS:VD_SEX",
        "BIOSAMPLE:host_sex",
        "VirusSeq_Portal:host%20gender"
      ],
      "slot_uri": "GENEPIO:0001395",
      "domain_of": [
        "Influenza"
      ],
      "required": true,
      "structured_pattern": {
        "syntax": "{Title_Case}",
        "interpolated": true,
        "partial_match": false
      },
      "any_of": [
        {
          "range": "HostGenderMenu"
        },
        {
          "range": "NullValueMenu"
        }
      ]
    },
    "host_subject_id": {
      "name": "host_subject_id",
      "description": "A unique identifier by which each host can be referred to e.g. #131",
      "title": "host subject ID",
      "comments": [
        "Provide the host identifier. Should be a unique, user-defined identifier."
      ],
      "examples": [
        {
          "value": "BCxy123"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "NML_LIMS:host%20subject%20ID",
        "BIOSAMPLE:host_subject_id"
      ],
      "slot_uri": "GENEPIO:0001398",
      "domain_of": [
        "Influenza"
      ],
      "range": "WhitespaceMinimizedString"
    },
    "host_vaccination_status": {
      "name": "host_vaccination_status",
      "description": "The vaccination status of the host (fully vaccinated, partially vaccinated, or not vaccinated).",
      "title": "host vaccination status",
      "comments": [
        "Select the vaccination status of the host from the pick list."
      ],
      "examples": [
        {
          "value": "Fully Vaccinated"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "NML_LIMS:PH_VACCINATION_HISTORY"
      ],
      "slot_uri": "GENEPIO:0001404",
      "domain_of": [
        "Influenza"
      ],
      "any_of": [
        {
          "range": "HostVaccinationStatusMenu"
        },
        {
          "range": "NullValueMenu"
        }
      ]
    },
    "vaccination_history": {
      "name": "vaccination_history",
      "description": "A description of the vaccines received and the administration dates of a series of vaccinations against a specific disease or a set of diseases.",
      "title": "vaccination history",
      "comments": [
        "Free text description of the dates and vaccines administered against a particular disease/set of diseases. It is also acceptable to concatenate the individual dose information (vaccine name, vaccination date) separated by semicolons."
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "NML_LIMS:PH_VACCINATION_HISTORY"
      ],
      "slot_uri": "GENEPIO:0100321",
      "domain_of": [
        "Influenza"
      ],
      "range": "WhitespaceMinimizedString"
    },
    "exposure_event": {
      "name": "exposure_event",
      "description": "Event leading to exposure.",
      "title": "exposure event",
      "comments": [
        "Select an exposure event from the pick list provided in the template. If the desired term is missing, contact the curation team."
      ],
      "examples": [
        {
          "value": "Social Gathering"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "GISAID:Additional%20location%20information",
        "CNPHI:Exposure%20Event",
        "NML_LIMS:PH_EXPOSURE"
      ],
      "slot_uri": "GENEPIO:0001417",
      "domain_of": [
        "Influenza"
      ],
      "any_of": [
        {
          "range": "ExposureEventMenu"
        },
        {
          "range": "NullValueMenu"
        }
      ]
    },
    "exposure_contact_level": {
      "name": "exposure_contact_level",
      "description": "The exposure transmission contact type.",
      "title": "exposure contact level",
      "comments": [
        "Select direct or indirect exposure from the pick-list."
      ],
      "examples": [
        {
          "value": "Direct"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "NML_LIMS:exposure%20contact%20level"
      ],
      "slot_uri": "GENEPIO:0001418",
      "domain_of": [
        "Influenza"
      ],
      "any_of": [
        {
          "range": "ExposureContactLevelMenu"
        },
        {
          "range": "NullValueMenu"
        }
      ]
    },
    "host_role": {
      "name": "host_role",
      "description": "The role of the host in relation to the exposure setting.",
      "title": "host role",
      "comments": [
        "Select the host's personal role(s) from the pick list provided in the template. If the desired term is missing, contact the curation team."
      ],
      "examples": [
        {
          "value": "Inpatient"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "NML_LIMS:PH_HOST_ROLE"
      ],
      "slot_uri": "GENEPIO:0001419",
      "domain_of": [
        "Influenza"
      ],
      "range": "HostRoleMenu",
      "multivalued": true
    },
    "exposure_setting": {
      "name": "exposure_setting",
      "description": "The setting leading to exposure.",
      "title": "exposure setting",
      "comments": [
        "Select the host exposure setting(s) from the pick list provided in the template. If a desired term is missing, contact the curation team."
      ],
      "examples": [
        {
          "value": "Healthcare Setting"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "NML_LIMS:PH_EXPOSURE"
      ],
      "slot_uri": "GENEPIO:0001428",
      "domain_of": [
        "Influenza"
      ],
      "range": "ExposureSettingMenu",
      "multivalued": true
    },
    "exposure_details": {
      "name": "exposure_details",
      "description": "Additional host exposure information.",
      "title": "exposure details",
      "comments": [
        "Free text description of the exposure."
      ],
      "examples": [
        {
          "value": "Case infected family at home"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "NML_LIMS:PH_EXPOSURE_DETAILS"
      ],
      "slot_uri": "GENEPIO:0001431",
      "domain_of": [
        "Influenza"
      ],
      "range": "WhitespaceMinimizedString"
    },
    "purpose_of_sequencing": {
      "name": "purpose_of_sequencing",
      "description": "The reason that the sample was sequenced.",
      "title": "purpose of sequencing",
      "comments": [
        "The reason why a sample was originally collected may differ from the reason why it was selected for sequencing. The reason a sample was sequenced may provide information about potential biases in sequencing strategy. Provide the purpose of sequencing from the picklist in the template. The reason for sample collection should be indicated in the \"purpose of sampling\" field."
      ],
      "examples": [
        {
          "value": "Baseline surveillance (random sampling)"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "CNPHI:Reason%20for%20Sequencing",
        "NML_LIMS:PH_REASON_FOR_SEQUENCING",
        "BIOSAMPLE:purpose_of_sequencing",
        "VirusSeq_Portal:purpose%20of%20sequencing"
      ],
      "slot_uri": "GENEPIO:0001445",
      "domain_of": [
        "Influenza"
      ],
      "required": true,
      "multivalued": true,
      "any_of": [
        {
          "range": "PurposeOfSequencingMenu"
        },
        {
          "range": "NullValueMenu"
        }
      ]
    },
    "purpose_of_sequencing_details": {
      "name": "purpose_of_sequencing_details",
      "description": "The description of why the sample was sequenced providing specific details.",
      "title": "purpose of sequencing details",
      "comments": [
        "Provide an expanded description of why the sample was sequenced using free text. The description may include the importance of the sequences for a particular public health investigation/surveillance activity/research question. Suggested standardized descriotions include: Screened for S gene target failure (S dropout), Screened for mink variants, Screened for B.1.1.7 variant, Screened for B.1.135 variant, Screened for P.1 variant, Screened due to travel history, Screened due to close contact with infected individual, Assessing public health control measures, Determining early introductions and spread, Investigating airline-related exposures, Investigating temporary foreign worker, Investigating remote regions, Investigating health care workers, Investigating schools/universities, Investigating reinfection."
      ],
      "examples": [
        {
          "value": "Seasonal flu research project"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "CNPHI:Details%20on%20the%20Reason%20for%20Sequencing",
        "NML_LIMS:PH_REASON_FOR_SEQUENCING_DETAILS",
        "VirusSeq_Portal:purpose%20of%20sequencing%20details"
      ],
      "slot_uri": "GENEPIO:0001446",
      "domain_of": [
        "Influenza"
      ],
      "required": true,
      "any_of": [
        {
          "range": "WhitespaceMinimizedString"
        },
        {
          "range": "NullValueMenu"
        }
      ]
    },
    "sequencing_date": {
      "name": "sequencing_date",
      "description": "The date the sample was sequenced.",
      "title": "sequencing date",
      "todos": [
        "<={today}"
      ],
      "comments": [
        "ISO 8601 standard \"YYYY-MM-DD\"."
      ],
      "examples": [
        {
          "value": "2023-09-22"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "NML_LIMS:PH_SEQUENCING_DATE"
      ],
      "slot_uri": "GENEPIO:0001447",
      "domain_of": [
        "Influenza"
      ],
      "required": true,
      "any_of": [
        {
          "range": "date"
        },
        {
          "range": "NullValueMenu"
        }
      ]
    },
    "amplicon_size": {
      "name": "amplicon_size",
      "description": "The length of the amplicon generated by PCR amplification.",
      "title": "amplicon size",
      "comments": [
        "Provide the amplicon size, including the units."
      ],
      "examples": [
        {
          "value": "300bp"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "NML_LIMS:amplicon%20size"
      ],
      "slot_uri": "GENEPIO:0001449",
      "domain_of": [
        "Influenza"
      ],
      "range": "WhitespaceMinimizedString"
    },
    "library_preparation_kit": {
      "name": "library_preparation_kit",
      "description": "The name of the DNA library preparation kit used to generate the library being sequenced.",
      "title": "library preparation kit",
      "comments": [
        "Provide the name of the library preparation kit used."
      ],
      "examples": [
        {
          "value": "Nextera XT"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "NML_LIMS:PH_LIBRARY_PREP_KIT"
      ],
      "slot_uri": "GENEPIO:0001450",
      "domain_of": [
        "Influenza"
      ],
      "range": "WhitespaceMinimizedString"
    },
    "sequencing_instrument": {
      "name": "sequencing_instrument",
      "description": "The model of the sequencing instrument used.",
      "title": "sequencing instrument",
      "comments": [
        "Select a sequencing instrument from the picklist provided in the template."
      ],
      "examples": [
        {
          "value": "Oxford Nanopore MinION"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "GISAID:Sequencing%20technology",
        "CNPHI:Sequencing%20Instrument",
        "NML_LIMS:PH_INSTRUMENT_CGN",
        "VirusSeq_Portal:sequencing%20instrument"
      ],
      "slot_uri": "GENEPIO:0001452",
      "domain_of": [
        "Influenza"
      ],
      "required": true,
      "multivalued": true,
      "any_of": [
        {
          "range": "SequencingInstrumentMenu"
        },
        {
          "range": "NullValueMenu"
        }
      ]
    },
    "sequencing_protocol": {
      "name": "sequencing_protocol",
      "description": "The protocol used to generate the sequence.",
      "title": "sequencing protocol",
      "comments": [
        "Provide a free text description of the methods and materials used to generate the sequence. Suggested text, fill in information where indicated.: \"Viral sequencing was performed following a tiling amplicon strategy using the <fill in> primer scheme. Sequencing was performed using a <fill in> sequencing instrument. Libraries were prepared using <fill in> library kit. \""
      ],
      "examples": [
        {
          "value": "Genomes were generated through amplicon sequencing of 300 bp amplicons with ARTIC schema primers. Libraries were created using Illumina DNA Prep kits, and sequence data was produced using Miseq Micro v2 (500 cycles) sequencing kits."
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "NML_LIMS:PH_TESTING_PROTOCOL",
        "VirusSeq_Portal:sequencing%20protocol"
      ],
      "slot_uri": "GENEPIO:0001454",
      "domain_of": [
        "Influenza"
      ],
      "range": "WhitespaceMinimizedString"
    },
    "amplicon_pcr_primer_scheme": {
      "name": "amplicon_pcr_primer_scheme",
      "description": "The specifications of the primers (primer sequences, binding positions, fragment size generated etc) used to generate the amplicons to be sequenced.",
      "title": "amplicon pcr primer scheme",
      "comments": [
        "Provide the name and version of the primer scheme used to generate the amplicons for sequencing."
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "NML_LIMS:amplicon%20pcr%20primer%20scheme"
      ],
      "slot_uri": "GENEPIO:0001456",
      "domain_of": [
        "Influenza"
      ],
      "range": "WhitespaceMinimizedString"
    },
    "raw_sequence_data_processing_method": {
      "name": "raw_sequence_data_processing_method",
      "description": "The names of the software and version number used for raw data processing such as removing barcodes, adapter trimming, filtering etc.",
      "title": "raw sequence data processing method",
      "comments": [
        "Provide the software name followed by the version e.g. Trimmomatic v. 0.38, Porechop v. 0.2.3"
      ],
      "examples": [
        {
          "value": "Porechop 0.2.3"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "NML_LIMS:PH_RAW_SEQUENCE_METHOD",
        "VirusSeq_Portal:raw%20sequence%20data%20processing%20method"
      ],
      "slot_uri": "GENEPIO:0001458",
      "domain_of": [
        "Influenza"
      ],
      "range": "WhitespaceMinimizedString",
      "required": true
    },
    "dehosting_method": {
      "name": "dehosting_method",
      "description": "The method used to remove host reads from the pathogen sequence.",
      "title": "dehosting method",
      "comments": [
        "Provide the name and version number of the software used to remove host reads."
      ],
      "examples": [
        {
          "value": "Nanostripper"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "NML_LIMS:PH_DEHOSTING_METHOD",
        "VirusSeq_Portal:dehosting%20method"
      ],
      "slot_uri": "GENEPIO:0001459",
      "domain_of": [
        "Influenza"
      ],
      "range": "WhitespaceMinimizedString",
      "required": true
    },
    "consensus_sequence_software_name": {
      "name": "consensus_sequence_software_name",
      "description": "The name of software used to generate the consensus sequence.",
      "title": "consensus sequence software name",
      "comments": [
        "Provide the name of the software used to generate the consensus sequence."
      ],
      "examples": [
        {
          "value": "iVar"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "GISAID:Assembly%20method",
        "CNPHI:consensus%20sequence",
        "NML_LIMS:PH_CONSENSUS_SEQUENCE",
        "VirusSeq_Portal:consensus%20sequence%20software%20name"
      ],
      "slot_uri": "GENEPIO:0001463",
      "domain_of": [
        "Influenza"
      ],
      "range": "WhitespaceMinimizedString",
      "required": true
    },
    "consensus_sequence_software_version": {
      "name": "consensus_sequence_software_version",
      "description": "The version of the software used to generate the consensus sequence.",
      "title": "consensus sequence software version",
      "comments": [
        "Provide the version of the software used to generate the consensus sequence."
      ],
      "examples": [
        {
          "value": "1.3"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "CNPHI:consensus%20sequence",
        "NML_LIMS:PH_CONSENSUS_SEQUENCE_VERSION",
        "VirusSeq_Portal:consensus%20sequence%20software%20version"
      ],
      "slot_uri": "GENEPIO:0001469",
      "domain_of": [
        "Influenza"
      ],
      "range": "WhitespaceMinimizedString",
      "required": true
    },
    "breadth_of_coverage_value": {
      "name": "breadth_of_coverage_value",
      "description": "The percentage of the reference genome covered by the sequenced data, to a prescribed depth.",
      "title": "breadth of coverage value",
      "comments": [
        "Provide value as a percent."
      ],
      "examples": [
        {
          "value": "95%"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "NML_LIMS:breadth%20of%20coverage%20value",
        "VirusSeq_Portal:breadth%20of%20coverage%20value"
      ],
      "slot_uri": "GENEPIO:0001472",
      "domain_of": [
        "Influenza"
      ],
      "range": "WhitespaceMinimizedString"
    },
    "depth_of_coverage_value": {
      "name": "depth_of_coverage_value",
      "description": "The average number of reads representing a given nucleotide in the reconstructed sequence.",
      "title": "depth of coverage value",
      "comments": [
        "Provide value as a fold of coverage."
      ],
      "examples": [
        {
          "value": "400x"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "GISAID:Coverage",
        "NML_LIMS:depth%20of%20coverage%20value",
        "VirusSeq_Portal:depth%20of%20coverage%20value"
      ],
      "slot_uri": "GENEPIO:0001474",
      "domain_of": [
        "Influenza"
      ],
      "range": "WhitespaceMinimizedString"
    },
    "depth_of_coverage_threshold": {
      "name": "depth_of_coverage_threshold",
      "description": "The threshold used as a cut-off for the depth of coverage.",
      "title": "depth of coverage threshold",
      "comments": [
        "Provide the threshold fold coverage."
      ],
      "examples": [
        {
          "value": "100x"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "NML_LIMS:depth%20of%20coverage%20threshold"
      ],
      "slot_uri": "GENEPIO:0001475",
      "domain_of": [
        "Influenza"
      ],
      "range": "WhitespaceMinimizedString"
    },
    "number_of_base_pairs_sequenced": {
      "name": "number_of_base_pairs_sequenced",
      "description": "The number of total base pairs generated by the sequencing process.",
      "title": "number of base pairs sequenced",
      "comments": [
        "Provide a numerical value (no need to include units)."
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "NML_LIMS:number%20of%20base%20pairs%20sequenced"
      ],
      "slot_uri": "GENEPIO:0001482",
      "domain_of": [
        "Influenza"
      ],
      "range": "integer",
      "minimum_value": 0
    },
    "consensus_genome_length": {
      "name": "consensus_genome_length",
      "description": "Size of the reconstructed genome described as the number of base pairs.",
      "title": "consensus genome length",
      "comments": [
        "Provide a numerical value (no need to include units)."
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "NML_LIMS:consensus%20genome%20length"
      ],
      "slot_uri": "GENEPIO:0001483",
      "domain_of": [
        "Influenza"
      ],
      "range": "integer",
      "minimum_value": 0
    },
    "reference_genome_accession": {
      "name": "reference_genome_accession",
      "description": "A persistent, unique identifier of a genome database entry.",
      "title": "reference genome accession",
      "comments": [
        "Provide the accession number of the reference genome."
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "NML_LIMS:reference%20genome%20accession",
        "VirusSeq_Portal:reference%20genome%20accession"
      ],
      "slot_uri": "GENEPIO:0001485",
      "domain_of": [
        "Influenza"
      ],
      "range": "WhitespaceMinimizedString"
    },
    "bioinformatics_protocol": {
      "name": "bioinformatics_protocol",
      "description": "A description of the overall bioinformatics strategy used.",
      "title": "bioinformatics protocol",
      "comments": [
        "Further details regarding the methods used to process raw data, and/or generate assemblies, and/or generate consensus sequences can. This information can be provided in an SOP or protocol or pipeline/workflow. Provide the name and version number of the protocol, or a GitHub link to a pipeline or workflow."
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "CNPHI:Bioinformatics%20Protocol",
        "NML_LIMS:PH_BIOINFORMATICS_PROTOCOL",
        "VirusSeq_Portal:bioinformatics%20protocol"
      ],
      "slot_uri": "GENEPIO:0001489",
      "domain_of": [
        "Influenza"
      ],
      "range": "WhitespaceMinimizedString",
      "required": true
    },
    "gene_name_1": {
      "name": "gene_name_1",
      "description": "The name of the gene used in the diagnostic RT-PCR test.",
      "title": "gene name 1",
      "comments": [
        "Provide the full name of the gene used in the test. The gene symbol (short form of gene name) can also be provided. Standardized gene names and symbols can be found in the Gene Ontology using this look-up service: https://bit.ly/2Sq1LbI"
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "CNPHI:Gene%20Target%201",
        "NML_LIMS:SUBMITTED_RESLT%20-%20Gene%20Target%20%231",
        "BIOSAMPLE:gene_name_1",
        "VirusSeq_Portal:gene%20name"
      ],
      "slot_uri": "GENEPIO:0001507",
      "domain_of": [
        "Influenza"
      ],
      "any_of": [
        {
          "range": "GeneNameMenu"
        },
        {
          "range": "NullValueMenu"
        }
      ]
    },
    "diagnostic_pcr_ct_value_1": {
      "name": "diagnostic_pcr_ct_value_1",
      "description": "The Ct value result from a diagnostic SARS-CoV-2 RT-PCR test.",
      "title": "diagnostic pcr Ct value 1",
      "comments": [
        "Provide the CT value of the sample from the diagnostic RT-PCR test."
      ],
      "examples": [
        {
          "value": "21"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "CNPHI:Gene%20Target%201%20CT%20Value",
        "NML_LIMS:SUBMITTED_RESLT%20-%20Gene%20Target%20%231%20CT%20Value",
        "BIOSAMPLE:diagnostic_PCR_CT_value_1",
        "VirusSeq_Portal:diagnostic%20pcr%20Ct%20value"
      ],
      "slot_uri": "GENEPIO:0001509",
      "domain_of": [
        "Influenza"
      ],
      "any_of": [
        {
          "range": "decimal"
        },
        {
          "range": "NullValueMenu"
        }
      ]
    },
    "gene_name_2": {
      "name": "gene_name_2",
      "description": "The name of the gene used in the diagnostic RT-PCR test.",
      "title": "gene name 2",
      "comments": [
        "Provide the full name of another gene used in an RT-PCR test. The gene symbol (short form of gene name) can also be provided. Standardized gene names and symbols can be found in the Gene Ontology using this look-up service: https://bit.ly/2Sq1LbI"
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "CNPHI:Gene%20Target%202",
        "NML_LIMS:SUBMITTED_RESLT%20-%20Gene%20Target%20%232",
        "BIOSAMPLE:gene_name_2"
      ],
      "slot_uri": "GENEPIO:0001510",
      "domain_of": [
        "Influenza"
      ],
      "any_of": [
        {
          "range": "GeneNameMenu"
        },
        {
          "range": "NullValueMenu"
        }
      ]
    },
    "diagnostic_pcr_ct_value_2": {
      "name": "diagnostic_pcr_ct_value_2",
      "description": "The Ct value result from a diagnostic SARS-CoV-2 RT-PCR test.",
      "title": "diagnostic pcr Ct value 2",
      "comments": [
        "Provide the CT value of the sample from the second diagnostic RT-PCR test."
      ],
      "examples": [
        {
          "value": "36"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "CNPHI:Gene%20Target%202%20CT%20Value",
        "NML_LIMS:SUBMITTED_RESLT%20-%20Gene%20Target%20%232%20CT%20Value",
        "BIOSAMPLE:diagnostic_PCR_CT_value_2"
      ],
      "slot_uri": "GENEPIO:0001512",
      "domain_of": [
        "Influenza"
      ],
      "any_of": [
        {
          "range": "decimal"
        },
        {
          "range": "NullValueMenu"
        }
      ]
    },
    "gene_name_3": {
      "name": "gene_name_3",
      "description": "The name of the gene used in the diagnostic RT-PCR test.",
      "title": "gene name 3",
      "comments": [
        "Provide the full name of another gene used in an RT-PCR test. The gene symbol (short form of gene name) can also be provided. Standardized gene names and symbols can be found in the Gene Ontology using this look-up service: https://bit.ly/2Sq1LbI"
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "CNPHI:Gene%20Target%203",
        "NML_LIMS:SUBMITTED_RESLT%20-%20Gene%20Target%20%233"
      ],
      "slot_uri": "GENEPIO:0001513",
      "domain_of": [
        "Influenza"
      ],
      "any_of": [
        {
          "range": "GeneNameMenu"
        },
        {
          "range": "NullValueMenu"
        }
      ]
    },
    "diagnostic_pcr_ct_value_3": {
      "name": "diagnostic_pcr_ct_value_3",
      "description": "The Ct value result from a diagnostic SARS-CoV-2 RT-PCR test.",
      "title": "diagnostic pcr Ct value 3",
      "comments": [
        "Provide the CT value of the sample from the second diagnostic RT-PCR test."
      ],
      "examples": [
        {
          "value": "30"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "CNPHI:Gene%20Target%203%20CT%20Value",
        "NML_LIMS:SUBMITTED_RESLT%20-%20Gene%20Target%20%233%20CT%20Value"
      ],
      "slot_uri": "GENEPIO:0001515",
      "domain_of": [
        "Influenza"
      ],
      "any_of": [
        {
          "range": "decimal"
        },
        {
          "range": "NullValueMenu"
        }
      ]
    },
    "authors": {
      "name": "authors",
      "description": "Names of individuals contributing to the processes of sample collection, sequence generation, analysis, and data submission.",
      "title": "authors",
      "comments": [
        "Include the first and last names of all individuals that should be attributed, separated by a comma."
      ],
      "examples": [
        {
          "value": "Tejinder Singh, Fei Hu, Joe Blogs"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "GISAID:Authors",
        "CNPHI:Authors",
        "NML_LIMS:PH_CANCOGEN_AUTHORS"
      ],
      "slot_uri": "GENEPIO:0001517",
      "domain_of": [
        "Influenza"
      ],
      "range": "WhitespaceMinimizedString",
      "recommended": true
    },
    "dataharmonizer_provenance": {
      "name": "dataharmonizer_provenance",
      "description": "The DataHarmonizer software and template version provenance.",
      "title": "DataHarmonizer provenance",
      "comments": [
        "The current software and template version information will be automatically generated in this field after the user utilizes the \"validate\" function. This information will be generated regardless as to whether the row is valid of not."
      ],
      "examples": [
        {
          "value": "DataHarmonizer v3.3.3, Influenza v1.0.0"
        }
      ],
      "from_schema": "https://example.com/Influenza",
      "exact_mappings": [
        "GISAID:DataHarmonizer%20provenance",
        "CNPHI:Additional%20Comments",
        "NML_LIMS:HC_COMMENTS"
      ],
      "slot_uri": "GENEPIO:0001518",
      "domain_of": [
        "Influenza"
      ],
      "range": "Provenance"
    }
  },
  "classes": {
    "dh_interface": {
      "name": "dh_interface",
      "description": "A DataHarmonizer interface",
      "from_schema": "https://example.com/Influenza"
    },
    "Influenza": {
      "name": "Influenza",
      "description": "Draft template for harmonizing human influenza virus genomic surveillance contextual data.",
      "from_schema": "https://example.com/Influenza",
      "is_a": "dh_interface",
      "slot_usage": {
        "specimen_collector_sample_id": {
          "name": "specimen_collector_sample_id",
          "rank": 1,
          "slot_group": "Database Identifiers"
        },
        "third_party_lab_service_provider_name": {
          "name": "third_party_lab_service_provider_name",
          "rank": 2,
          "slot_group": "Database Identifiers"
        },
        "third_party_lab_sample_id": {
          "name": "third_party_lab_sample_id",
          "rank": 3,
          "slot_group": "Database Identifiers"
        },
        "case_id": {
          "name": "case_id",
          "rank": 4,
          "slot_group": "Database Identifiers"
        },
        "related_specimen_primary_id": {
          "name": "related_specimen_primary_id",
          "rank": 5,
          "slot_group": "Database Identifiers"
        },
        "irida_sample_name": {
          "name": "irida_sample_name",
          "rank": 6,
          "slot_group": "Database Identifiers"
        },
        "umbrella_bioproject_accession": {
          "name": "umbrella_bioproject_accession",
          "rank": 7,
          "slot_group": "Database Identifiers"
        },
        "bioproject_accession": {
          "name": "bioproject_accession",
          "rank": 8,
          "slot_group": "Database Identifiers"
        },
        "biosample_accession": {
          "name": "biosample_accession",
          "rank": 9,
          "slot_group": "Database Identifiers"
        },
        "sra_accession": {
          "name": "sra_accession",
          "rank": 10,
          "slot_group": "Database Identifiers"
        },
        "genbank_accession": {
          "name": "genbank_accession",
          "rank": 11,
          "slot_group": "Database Identifiers"
        },
        "gisaid_accession": {
          "name": "gisaid_accession",
          "rank": 12,
          "slot_group": "Database Identifiers"
        },
        "gisaid_virus_name": {
          "name": "gisaid_virus_name",
          "rank": 13,
          "slot_group": "Database Identifiers"
        },
        "sample_collected_by": {
          "name": "sample_collected_by",
          "rank": 14,
          "slot_group": "Sample collection and processing"
        },
        "sample_collector_contact_email": {
          "name": "sample_collector_contact_email",
          "rank": 15,
          "slot_group": "Sample collection and processing"
        },
        "sequenced_by": {
          "name": "sequenced_by",
          "rank": 16,
          "slot_group": "Sample collection and processing"
        },
        "sequence_submitted_by": {
          "name": "sequence_submitted_by",
          "rank": 17,
          "slot_group": "Sample collection and processing"
        },
        "sample_collection_date": {
          "name": "sample_collection_date",
          "rank": 18,
          "slot_group": "Sample collection and processing"
        },
        "sample_collection_date_precision": {
          "name": "sample_collection_date_precision",
          "rank": 19,
          "slot_group": "Sample collection and processing"
        },
        "geo_loc_name_country": {
          "name": "geo_loc_name_country",
          "rank": 20,
          "slot_group": "Sample collection and processing"
        },
        "geo_loc_name_state_province_territory": {
          "name": "geo_loc_name_state_province_territory",
          "rank": 21,
          "slot_group": "Sample collection and processing"
        },
        "organism": {
          "name": "organism",
          "rank": 22,
          "slot_group": "Sample collection and processing"
        },
        "isolate": {
          "name": "isolate",
          "rank": 23,
          "slot_group": "Sample collection and processing"
        },
        "purpose_of_sampling": {
          "name": "purpose_of_sampling",
          "rank": 24,
          "slot_group": "Sample collection and processing"
        },
        "purpose_of_sampling_details": {
          "name": "purpose_of_sampling_details",
          "rank": 25,
          "slot_group": "Sample collection and processing"
        },
        "nml_submitted_specimen_type": {
          "name": "nml_submitted_specimen_type",
          "rank": 26,
          "slot_group": "Sample collection and processing"
        },
        "related_specimen_relationship_type": {
          "name": "related_specimen_relationship_type",
          "rank": 27,
          "slot_group": "Sample collection and processing"
        },
        "presampling_activity": {
          "name": "presampling_activity",
          "rank": 28,
          "slot_group": "Sample collection and processing"
        },
        "presampling_activity_details": {
          "name": "presampling_activity_details",
          "rank": 29,
          "slot_group": "Sample collection and processing"
        },
        "anatomical_material": {
          "name": "anatomical_material",
          "rank": 30,
          "slot_group": "Sample collection and processing"
        },
        "anatomical_part": {
          "name": "anatomical_part",
          "rank": 31,
          "slot_group": "Sample collection and processing"
        },
        "body_product": {
          "name": "body_product",
          "rank": 32,
          "slot_group": "Sample collection and processing"
        },
        "collection_device": {
          "name": "collection_device",
          "rank": 33,
          "slot_group": "Sample collection and processing"
        },
        "collection_method": {
          "name": "collection_method",
          "rank": 34,
          "slot_group": "Sample collection and processing"
        },
        "collection_protocol": {
          "name": "collection_protocol",
          "rank": 35,
          "slot_group": "Sample collection and processing"
        },
        "specimen_processing": {
          "name": "specimen_processing",
          "rank": 36,
          "slot_group": "Sample collection and processing"
        },
        "specimen_processing_details": {
          "name": "specimen_processing_details",
          "rank": 37,
          "slot_group": "Sample collection and processing"
        },
        "biomaterial_extracted": {
          "name": "biomaterial_extracted",
          "rank": 38,
          "slot_group": "Sample collection and processing"
        },
        "host_common_name": {
          "name": "host_common_name",
          "rank": 39,
          "slot_group": "Host Information"
        },
        "host_scientific_name": {
          "name": "host_scientific_name",
          "rank": 40,
          "slot_group": "Host Information"
        },
        "host_health_state": {
          "name": "host_health_state",
          "rank": 41,
          "slot_group": "Host Information"
        },
        "host_health_status_details": {
          "name": "host_health_status_details",
          "rank": 42,
          "slot_group": "Host Information"
        },
        "host_health_outcome": {
          "name": "host_health_outcome",
          "rank": 43,
          "slot_group": "Host Information"
        },
        "host_disease": {
          "name": "host_disease",
          "rank": 44,
          "slot_group": "Host Information"
        },
        "host_age": {
          "name": "host_age",
          "rank": 45,
          "slot_group": "Host Information"
        },
        "host_age_unit": {
          "name": "host_age_unit",
          "rank": 46,
          "slot_group": "Host Information"
        },
        "host_age_bin": {
          "name": "host_age_bin",
          "rank": 47,
          "slot_group": "Host Information"
        },
        "host_gender": {
          "name": "host_gender",
          "rank": 48,
          "slot_group": "Host Information"
        },
        "host_subject_id": {
          "name": "host_subject_id",
          "rank": 49,
          "slot_group": "Host Information"
        },
        "host_vaccination_status": {
          "name": "host_vaccination_status",
          "rank": 50,
          "slot_group": "Host vaccination information"
        },
        "vaccination_history": {
          "name": "vaccination_history",
          "rank": 51,
          "slot_group": "Host vaccination information"
        },
        "exposure_event": {
          "name": "exposure_event",
          "rank": 52,
          "slot_group": "Host exposure information"
        },
        "exposure_contact_level": {
          "name": "exposure_contact_level",
          "rank": 53,
          "slot_group": "Host exposure information"
        },
        "host_role": {
          "name": "host_role",
          "rank": 54,
          "slot_group": "Host exposure information"
        },
        "exposure_setting": {
          "name": "exposure_setting",
          "rank": 55,
          "slot_group": "Host exposure information"
        },
        "exposure_details": {
          "name": "exposure_details",
          "rank": 56,
          "slot_group": "Host exposure information"
        },
        "purpose_of_sequencing": {
          "name": "purpose_of_sequencing",
          "rank": 57,
          "slot_group": "Sequencing"
        },
        "purpose_of_sequencing_details": {
          "name": "purpose_of_sequencing_details",
          "rank": 58,
          "slot_group": "Sequencing"
        },
        "sequencing_date": {
          "name": "sequencing_date",
          "rank": 59,
          "slot_group": "Sequencing"
        },
        "amplicon_size": {
          "name": "amplicon_size",
          "rank": 60,
          "slot_group": "Sequencing"
        },
        "library_preparation_kit": {
          "name": "library_preparation_kit",
          "rank": 61,
          "slot_group": "Sequencing"
        },
        "sequencing_instrument": {
          "name": "sequencing_instrument",
          "rank": 62,
          "slot_group": "Sequencing"
        },
        "sequencing_protocol": {
          "name": "sequencing_protocol",
          "rank": 63,
          "slot_group": "Sequencing"
        },
        "amplicon_pcr_primer_scheme": {
          "name": "amplicon_pcr_primer_scheme",
          "rank": 64,
          "slot_group": "Sequencing"
        },
        "raw_sequence_data_processing_method": {
          "name": "raw_sequence_data_processing_method",
          "rank": 65,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "dehosting_method": {
          "name": "dehosting_method",
          "rank": 66,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "consensus_sequence_software_name": {
          "name": "consensus_sequence_software_name",
          "rank": 67,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "consensus_sequence_software_version": {
          "name": "consensus_sequence_software_version",
          "rank": 68,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "breadth_of_coverage_value": {
          "name": "breadth_of_coverage_value",
          "rank": 69,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "depth_of_coverage_value": {
          "name": "depth_of_coverage_value",
          "rank": 70,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "depth_of_coverage_threshold": {
          "name": "depth_of_coverage_threshold",
          "rank": 71,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "number_of_base_pairs_sequenced": {
          "name": "number_of_base_pairs_sequenced",
          "rank": 72,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "consensus_genome_length": {
          "name": "consensus_genome_length",
          "rank": 73,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "reference_genome_accession": {
          "name": "reference_genome_accession",
          "rank": 74,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "bioinformatics_protocol": {
          "name": "bioinformatics_protocol",
          "rank": 75,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "gene_name_1": {
          "name": "gene_name_1",
          "rank": 76,
          "slot_group": "Pathogen diagnostic testing"
        },
        "diagnostic_pcr_ct_value_1": {
          "name": "diagnostic_pcr_ct_value_1",
          "rank": 77,
          "slot_group": "Pathogen diagnostic testing"
        },
        "gene_name_2": {
          "name": "gene_name_2",
          "rank": 78,
          "slot_group": "Pathogen diagnostic testing"
        },
        "diagnostic_pcr_ct_value_2": {
          "name": "diagnostic_pcr_ct_value_2",
          "rank": 79,
          "slot_group": "Pathogen diagnostic testing"
        },
        "gene_name_3": {
          "name": "gene_name_3",
          "rank": 80,
          "slot_group": "Pathogen diagnostic testing"
        },
        "diagnostic_pcr_ct_value_3": {
          "name": "diagnostic_pcr_ct_value_3",
          "rank": 81,
          "slot_group": "Pathogen diagnostic testing"
        },
        "authors": {
          "name": "authors",
          "rank": 82,
          "slot_group": "Contributor acknowledgement"
        },
        "dataharmonizer_provenance": {
          "name": "dataharmonizer_provenance",
          "rank": 83,
          "slot_group": "Contributor acknowledgement"
        }
      },
      "attributes": {
        "specimen_collector_sample_id": {
          "name": "specimen_collector_sample_id",
          "description": "The user-defined name for the sample.",
          "title": "specimen collector sample ID",
          "comments": [
            "Store the collector sample ID. If this number is considered identifiable information, provide an alternative ID. Be sure to store the key that maps between the original and alternative IDs for traceability and follow up if necessary. Every collector sample ID from a single submitter must be unique. It can have any format, but we suggest that you make it concise, unique and consistent within your lab."
          ],
          "examples": [
            {
              "value": "prov_rona_99"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "GISAID:Sample%20ID%20given%20by%20the%20sample%20provider",
            "CNPHI:Primary%20Specimen%20ID",
            "NML_LIMS:TEXT_ID",
            "BIOSAMPLE:sample_name",
            "VirusSeq_Portal:specimen%20collector%20sample%20ID"
          ],
          "rank": 1,
          "slot_uri": "GENEPIO:0001123",
          "identifier": true,
          "alias": "specimen_collector_sample_id",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Database Identifiers",
          "range": "WhitespaceMinimizedString",
          "required": true
        },
        "third_party_lab_service_provider_name": {
          "name": "third_party_lab_service_provider_name",
          "description": "The name of the third party company or laboratory that provided services.",
          "title": "third party lab service provider name",
          "comments": [
            "Provide the full, unabbreviated name of the company or laboratory."
          ],
          "examples": [
            {
              "value": "Switch Health"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "NML_LIMS:HC_TEXT5"
          ],
          "rank": 2,
          "slot_uri": "GENEPIO:0001202",
          "alias": "third_party_lab_service_provider_name",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Database Identifiers",
          "range": "WhitespaceMinimizedString"
        },
        "third_party_lab_sample_id": {
          "name": "third_party_lab_sample_id",
          "description": "The identifier assigned to a sample by a third party service provider.",
          "title": "third party lab sample ID",
          "comments": [
            "Store the sample identifier supplied by the third party services provider."
          ],
          "examples": [
            {
              "value": "SHK123456"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "NML_LIMS:PH_ID_NUMBER_PRIMARY"
          ],
          "rank": 3,
          "slot_uri": "GENEPIO:0001149",
          "alias": "third_party_lab_sample_id",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Database Identifiers",
          "range": "WhitespaceMinimizedString"
        },
        "case_id": {
          "name": "case_id",
          "description": "The identifier used to specify an epidemiologically detected case of disease.",
          "title": "case ID",
          "comments": [
            "Provide the case identifer. The case ID greatly facilitates linkage between laboratory and epidemiological data. The case ID may be considered identifiable information. Consult the data steward before sharing."
          ],
          "examples": [
            {
              "value": "ABCD1234"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "NML_LIMS:PH_CASE_ID"
          ],
          "rank": 4,
          "slot_uri": "GENEPIO:0100281",
          "alias": "case_id",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Database Identifiers",
          "range": "WhitespaceMinimizedString",
          "recommended": true
        },
        "related_specimen_primary_id": {
          "name": "related_specimen_primary_id",
          "description": "The primary ID of a related specimen previously submitted to the repository.",
          "title": "Related specimen primary ID",
          "comments": [
            "Store the primary ID of the related specimen previously submitted to the National Microbiology Laboratory so that the samples can be linked and tracked through the system."
          ],
          "examples": [
            {
              "value": "SR20-12345"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "CNPHI:Related%20Specimen%20ID",
            "CNPHI:Related%20Specimen%20Relationship%20Type",
            "NML_LIMS:PH_RELATED_PRIMARY_ID"
          ],
          "rank": 5,
          "slot_uri": "GENEPIO:0001128",
          "alias": "related_specimen_primary_id",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Database Identifiers",
          "any_of": [
            {
              "range": "WhitespaceMinimizedString"
            },
            {
              "range": "NullValueMenu"
            }
          ]
        },
        "irida_sample_name": {
          "name": "irida_sample_name",
          "description": "The identifier assigned to a sequenced isolate in IRIDA.",
          "title": "IRIDA sample name",
          "comments": [
            "Store the IRIDA sample name. The IRIDA sample name will be created by the individual entering data into the IRIDA platform. IRIDA samples may be linked to metadata and sequence data, or just metadata alone. It is recommended that the IRIDA sample name be the same as, or contain, the specimen collector sample ID for better traceability. It is also recommended that the IRIDA sample name mirror the GISAID accession. IRIDA sample names cannot contain slashes. Slashes should be replaced by underscores. See IRIDA documentation for more information regarding special characters (https://irida.corefacility.ca/documentation/user/user/samples/#adding-a-new-sample)."
          ],
          "examples": [
            {
              "value": "prov_rona_99"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "NML_LIMS:IRIDA%20sample%20name"
          ],
          "rank": 6,
          "slot_uri": "GENEPIO:0001131",
          "alias": "irida_sample_name",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Database Identifiers",
          "range": "WhitespaceMinimizedString"
        },
        "umbrella_bioproject_accession": {
          "name": "umbrella_bioproject_accession",
          "description": "The INSDC accession number assigned to the umbrella BioProject.",
          "title": "umbrella bioproject accession",
          "comments": [
            "Store the umbrella BioProject accession by selecting it from the picklist in the template. The umbrella BioProject accession will be identical for all CanCOGen submitters. Different provinces will have their own BioProjects, however these BioProjects will be linked under one umbrella BioProject."
          ],
          "examples": [
            {
              "value": "PRJNA623807"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "NML_LIMS:umbrella%20bioproject%20accession"
          ],
          "rank": 7,
          "slot_uri": "GENEPIO:0001133",
          "alias": "umbrella_bioproject_accession",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Database Identifiers",
          "range": "UmbrellaBioprojectAccessionMenu",
          "structured_pattern": {
            "syntax": "{UPPER_CASE}",
            "interpolated": true,
            "partial_match": false
          }
        },
        "bioproject_accession": {
          "name": "bioproject_accession",
          "description": "The INSDC accession number of the BioProject(s) to which the BioSample belongs.",
          "title": "bioproject accession",
          "comments": [
            "Store the BioProject accession number. BioProjects are an organizing tool that links together raw sequence data, assemblies, and their associated metadata. Each province will be assigned a different bioproject accession number by the National Microbiology Lab. A valid NCBI BioProject accession has prefix PRJN e.g., PRJNA12345, and is created once at the beginning of a new sequencing project."
          ],
          "examples": [
            {
              "value": "PRJNA608651"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "CNPHI:BioProject%20Accession",
            "NML_LIMS:PH_BIOPROJECT_ACCESSION",
            "BIOSAMPLE:bioproject_accession"
          ],
          "rank": 8,
          "slot_uri": "GENEPIO:0001136",
          "alias": "bioproject_accession",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Database Identifiers",
          "range": "WhitespaceMinimizedString",
          "structured_pattern": {
            "syntax": "{UPPER_CASE}",
            "interpolated": true,
            "partial_match": false
          }
        },
        "biosample_accession": {
          "name": "biosample_accession",
          "description": "The identifier assigned to a BioSample in INSDC archives.",
          "title": "biosample accession",
          "comments": [
            "Store the accession returned from the BioSample submission. NCBI BioSamples will have the prefix SAMN."
          ],
          "examples": [
            {
              "value": "SAMN14180202"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "CNPHI:BioSample%20Accession",
            "NML_LIMS:PH_BIOSAMPLE_ACCESSION"
          ],
          "rank": 9,
          "slot_uri": "GENEPIO:0001139",
          "alias": "biosample_accession",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Database Identifiers",
          "range": "WhitespaceMinimizedString",
          "structured_pattern": {
            "syntax": "{UPPER_CASE}",
            "interpolated": true,
            "partial_match": false
          }
        },
        "sra_accession": {
          "name": "sra_accession",
          "description": "The Sequence Read Archive (SRA) identifier linking raw read data, methodological metadata and quality control metrics submitted to the INSDC.",
          "title": "SRA accession",
          "comments": [
            "Store the accession assigned to the submitted \"run\". NCBI-SRA accessions start with SRR."
          ],
          "examples": [
            {
              "value": "SRR11177792"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "CNPHI:SRA%20Accession",
            "NML_LIMS:PH_SRA_ACCESSION"
          ],
          "rank": 10,
          "slot_uri": "GENEPIO:0001142",
          "alias": "sra_accession",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Database Identifiers",
          "range": "WhitespaceMinimizedString",
          "structured_pattern": {
            "syntax": "{UPPER_CASE}",
            "interpolated": true,
            "partial_match": false
          }
        },
        "genbank_accession": {
          "name": "genbank_accession",
          "description": "The GenBank identifier assigned to the sequence in the INSDC archives.",
          "title": "GenBank accession",
          "comments": [
            "Store the accession returned from a GenBank submission (viral genome assembly)."
          ],
          "examples": [
            {
              "value": "MN908947.3"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "CNPHI:GenBank%20Accession",
            "NML_LIMS:GenBank%20accession"
          ],
          "rank": 11,
          "slot_uri": "GENEPIO:0001145",
          "alias": "genbank_accession",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Database Identifiers",
          "range": "WhitespaceMinimizedString",
          "structured_pattern": {
            "syntax": "{UPPER_CASE}",
            "interpolated": true,
            "partial_match": false
          }
        },
        "gisaid_accession": {
          "name": "gisaid_accession",
          "description": "The GISAID accession number assigned to the sequence.",
          "title": "GISAID accession",
          "comments": [
            "Store the accession returned from the GISAID submission."
          ],
          "examples": [
            {
              "value": "EPI_ISL_436489"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "CNPHI:GISAID%20Accession%20%28if%20known%29",
            "NML_LIMS:SUBMISSIONS%20-%20GISAID%20Accession%20ID",
            "BIOSAMPLE:GISAID_accession",
            "VirusSeq_Portal:GISAID%20accession"
          ],
          "rank": 12,
          "slot_uri": "GENEPIO:0001147",
          "alias": "gisaid_accession",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Database Identifiers",
          "range": "WhitespaceMinimizedString",
          "structured_pattern": {
            "syntax": "{UPPER_CASE}",
            "interpolated": true,
            "partial_match": false
          }
        },
        "gisaid_virus_name": {
          "name": "gisaid_virus_name",
          "description": "The user-defined name of the virus, specified in the organism-specific format prescribed by the GISAID database.",
          "title": "GISAID virus name",
          "comments": [
            "Provide the GISAID virus name, which should be written in the format: A/Province/Country/SampleID/year"
          ],
          "examples": [
            {
              "value": "A/Ontario/Canada/ABCD1234/2023"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "rank": 13,
          "alias": "gisaid_virus_name",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Database Identifiers",
          "range": "WhitespaceMinimizedString",
          "required": true
        },
        "sample_collected_by": {
          "name": "sample_collected_by",
          "description": "The name of the agency that collected the original sample.",
          "title": "sample collected by",
          "comments": [
            "The name of the sample collector should be written out in full, (with minor exceptions) and be consistent across multple submissions e.g. Public Health Agency of Canada, Public Health Ontario, BC Centre for Disease Control. The sample collector specified is at the discretion of the data provider (i.e. may be hospital, provincial public health lab, or other)."
          ],
          "examples": [
            {
              "value": "BC Centre for Disease Control"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "GISAID:Originating%20lab",
            "CNPHI:Lab%20Name",
            "NML_LIMS:CUSTOMER",
            "BIOSAMPLE:collected_by",
            "VirusSeq_Portal:sample%20collected%20by"
          ],
          "rank": 14,
          "slot_uri": "GENEPIO:0001153",
          "alias": "sample_collected_by",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Sample collection and processing",
          "required": true,
          "any_of": [
            {
              "range": "SampleCollectedByMenu"
            },
            {
              "range": "NullValueMenu"
            }
          ]
        },
        "sample_collector_contact_email": {
          "name": "sample_collector_contact_email",
          "description": "The email address of the contact responsible for follow-up regarding the sample.",
          "title": "sample collector contact email",
          "comments": [
            "The email address can represent a specific individual or lab e.g. johnnyblogs@lab.ca, or RespLab@lab.ca"
          ],
          "examples": [
            {
              "value": "RespLab@lab.ca"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "NML_LIMS:sample%20collector%20contact%20email"
          ],
          "rank": 15,
          "slot_uri": "GENEPIO:0001156",
          "alias": "sample_collector_contact_email",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString",
          "pattern": "^\\S+@\\S+\\.\\S+$"
        },
        "sequenced_by": {
          "name": "sequenced_by",
          "description": "The name of the agency that generated the sequence.",
          "title": "sequenced by",
          "comments": [
            "The name of the agency should be written out in full, (with minor exceptions) and be consistent across multiple submissions. If submitting specimens rather than sequencing data, please put the \"National Microbiology Laboratory (NML)\"."
          ],
          "examples": [
            {
              "value": "Public Health Ontario (PHO)"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "NML_LIMS:PH_SEQUENCING_CENTRE",
            "BIOSAMPLE:sequenced_by"
          ],
          "rank": 16,
          "slot_uri": "GENEPIO:0100416",
          "alias": "sequenced_by",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Sample collection and processing",
          "required": true,
          "any_of": [
            {
              "range": "SequencedByMenu"
            },
            {
              "range": "NullValueMenu"
            }
          ]
        },
        "sequence_submitted_by": {
          "name": "sequence_submitted_by",
          "description": "The name of the agency that generated the sequence.",
          "title": "sequence submitted by",
          "comments": [
            "The name of the agency should be written out in full, (with minor exceptions) and be consistent across multple submissions. If submitting specimens rather than sequencing data, please put the \"National Microbiology Laboratory (NML)\"."
          ],
          "examples": [
            {
              "value": "Public Health Ontario (PHO)"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "GISAID:Submitting%20lab",
            "CNPHI:Sequencing%20Centre",
            "NML_LIMS:PH_SEQUENCING_CENTRE",
            "BIOSAMPLE:sequenced_by",
            "VirusSeq_Portal:sequence%20submitted%20by"
          ],
          "rank": 17,
          "slot_uri": "GENEPIO:0001159",
          "alias": "sequence_submitted_by",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Sample collection and processing",
          "required": true,
          "any_of": [
            {
              "range": "SequenceSubmittedByMenu"
            },
            {
              "range": "NullValueMenu"
            }
          ]
        },
        "sample_collection_date": {
          "name": "sample_collection_date",
          "description": "The date on which the sample was collected.",
          "title": "sample collection date",
          "todos": [
            ">=2019-10-01",
            "<={today}"
          ],
          "comments": [
            "Sample collection date is critical for surveillance and many types of analyses. Required granularity includes year, month and day. If this date is considered identifiable information, it is acceptable to add \"jitter\" by adding or subtracting a calendar day (acceptable by GISAID). Alternatively, ”received date” may be used as a substitute. The date should be provided in ISO 8601 standard format \"YYYY-MM-DD\"."
          ],
          "examples": [
            {
              "value": "2020-03-16"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "GISAID:Collection%20date",
            "CNPHI:Patient%20Sample%20Collected%20Date",
            "NML_LIMS:HC_COLLECT_DATE",
            "BIOSAMPLE:sample%20collection%20date",
            "VirusSeq_Portal:sample%20collection%20date"
          ],
          "rank": 18,
          "slot_uri": "GENEPIO:0001174",
          "alias": "sample_collection_date",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Sample collection and processing",
          "required": true,
          "any_of": [
            {
              "range": "date"
            },
            {
              "range": "NullValueMenu"
            }
          ]
        },
        "sample_collection_date_precision": {
          "name": "sample_collection_date_precision",
          "description": "The precision to which the \"sample collection date\" was provided.",
          "title": "sample collection date precision",
          "comments": [
            "Provide the precision of granularity to the \"day\", \"month\", or \"year\" for the date provided in the \"sample collection date\" field. The \"sample collection date\" will be truncated to the precision specified upon export; \"day\" for \"YYYY-MM-DD\", \"month\" for \"YYYY-MM\", or \"year\" for \"YYYY\"."
          ],
          "examples": [
            {
              "value": "year"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "CNPHI:Precision%20of%20date%20collected",
            "NML_LIMS:HC_TEXT2"
          ],
          "rank": 19,
          "slot_uri": "GENEPIO:0001177",
          "alias": "sample_collection_date_precision",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Sample collection and processing",
          "required": true,
          "any_of": [
            {
              "range": "SampleCollectionDatePrecisionMenu"
            },
            {
              "range": "NullValueMenu"
            }
          ]
        },
        "geo_loc_name_country": {
          "name": "geo_loc_name_country",
          "description": "The country where the sample was collected.",
          "title": "geo_loc_name (country)",
          "comments": [
            "Provide the country name from the controlled vocabulary provided."
          ],
          "examples": [
            {
              "value": "Canada"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "GISAID:Location",
            "CNPHI:Patient%20Country",
            "NML_LIMS:HC_COUNTRY",
            "BIOSAMPLE:geo_loc_name",
            "VirusSeq_Portal:geo_loc_name%20%28country%29"
          ],
          "rank": 20,
          "slot_uri": "GENEPIO:0001181",
          "alias": "geo_loc_name_country",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Sample collection and processing",
          "required": true,
          "any_of": [
            {
              "range": "GeoLocNameCountryMenu"
            },
            {
              "range": "NullValueMenu"
            }
          ]
        },
        "geo_loc_name_state_province_territory": {
          "name": "geo_loc_name_state_province_territory",
          "description": "The province/territory where the sample was collected.",
          "title": "geo_loc_name (state/province/territory)",
          "comments": [
            "Provide the province/territory name from the controlled vocabulary provided."
          ],
          "examples": [
            {
              "value": "Saskatchewan"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "CNPHI:Patient%20Province",
            "NML_LIMS:HC_PROVINCE",
            "BIOSAMPLE:geo_loc_name",
            "VirusSeq_Portal:geo_loc_name%20%28state/province/territory%29"
          ],
          "rank": 21,
          "slot_uri": "GENEPIO:0001185",
          "alias": "geo_loc_name_state_province_territory",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Sample collection and processing",
          "required": true,
          "any_of": [
            {
              "range": "GeoLocNameStateProvinceTerritoryMenu"
            },
            {
              "range": "NullValueMenu"
            }
          ]
        },
        "organism": {
          "name": "organism",
          "description": "Taxonomic name of the organism.",
          "title": "organism",
          "comments": [
            "Select the type of influenza virus from the picklist provided."
          ],
          "examples": [
            {
              "value": "Influenza virus A virus (H1N1)"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "CNPHI:Pathogen",
            "NML_LIMS:HC_CURRENT_ID",
            "BIOSAMPLE:organism",
            "VirusSeq_Portal:organism"
          ],
          "rank": 22,
          "slot_uri": "GENEPIO:0001191",
          "alias": "organism",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Sample collection and processing",
          "required": true,
          "any_of": [
            {
              "range": "OrganismMenu"
            },
            {
              "range": "NullValueMenu"
            }
          ]
        },
        "isolate": {
          "name": "isolate",
          "description": "Identifier of the specific isolate.",
          "title": "isolate",
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "GISAID:Virus%20name",
            "CNPHI:GISAID%20Virus%20Name",
            "NML_LIMS:RESULT%20-%20CANCOGEN_SUBMISSIONS",
            "BIOSAMPLE:isolate",
            "BIOSAMPLE:GISAID_virus_name",
            "VirusSeq_Portal:isolate",
            "VirusSeq_Portal:fasta%20header%20name"
          ],
          "rank": 23,
          "slot_uri": "GENEPIO:0001195",
          "alias": "isolate",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Sample collection and processing",
          "required": true,
          "any_of": [
            {
              "range": "WhitespaceMinimizedString"
            },
            {
              "range": "NullValueMenu"
            }
          ]
        },
        "purpose_of_sampling": {
          "name": "purpose_of_sampling",
          "description": "The reason that the sample was collected.",
          "title": "purpose of sampling",
          "comments": [
            "The reason a sample was collected may provide information about potential biases in sampling strategy. Provide the purpose of sampling from the picklist in the template. Most likely, the sample was collected for diagnostic testing. The reason why a sample was originally collected may differ from the reason why it was selected for sequencing, which should be indicated in the \"purpose of sequencing\" field."
          ],
          "examples": [
            {
              "value": "Diagnostic testing"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "CNPHI:Reason%20for%20Sampling",
            "NML_LIMS:HC_SAMPLE_CATEGORY",
            "BIOSAMPLE:purpose_of_sampling",
            "VirusSeq_Portal:purpose%20of%20sampling"
          ],
          "rank": 24,
          "slot_uri": "GENEPIO:0001198",
          "alias": "purpose_of_sampling",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Sample collection and processing",
          "required": true,
          "any_of": [
            {
              "range": "PurposeOfSamplingMenu"
            },
            {
              "range": "NullValueMenu"
            }
          ]
        },
        "purpose_of_sampling_details": {
          "name": "purpose_of_sampling_details",
          "description": "The description of why the sample was collected, providing specific details.",
          "title": "purpose of sampling details",
          "comments": [
            "Provide an expanded description of why the sample was collected using free text. The description may include the importance of the sample for a particular public health investigation/surveillance activity/research question. If details are not available, provide a null value."
          ],
          "examples": [
            {
              "value": "The sample was collected to investigate the prevalence of variants associated with mink-to-human transmission in Canada."
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "CNPHI:Details%20on%20the%20Reason%20for%20Sampling",
            "NML_LIMS:PH_SAMPLING_DETAILS",
            "BIOSAMPLE:description",
            "VirusSeq_Portal:purpose%20of%20sampling%20details"
          ],
          "rank": 25,
          "slot_uri": "GENEPIO:0001200",
          "alias": "purpose_of_sampling_details",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Sample collection and processing",
          "required": true,
          "any_of": [
            {
              "range": "WhitespaceMinimizedString"
            },
            {
              "range": "NullValueMenu"
            }
          ]
        },
        "nml_submitted_specimen_type": {
          "name": "nml_submitted_specimen_type",
          "description": "The type of specimen submitted to the National Microbiology Laboratory (NML) for testing.",
          "title": "NML submitted specimen type",
          "comments": [
            "This information is required for upload through the CNPHI LaSER system. Select the specimen type from the pick list provided. If sequence data is being submitted rather than a specimen for testing, select “Not Applicable”."
          ],
          "examples": [
            {
              "value": "swab"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "CNPHI:Specimen%20Type",
            "NML_LIMS:PH_SPECIMEN_TYPE"
          ],
          "rank": 26,
          "slot_uri": "GENEPIO:0001204",
          "alias": "nml_submitted_specimen_type",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Sample collection and processing",
          "range": "NmlSubmittedSpecimenTypeMenu",
          "required": true
        },
        "related_specimen_relationship_type": {
          "name": "related_specimen_relationship_type",
          "description": "The relationship of the current specimen to the specimen/sample previously submitted to the repository.",
          "title": "Related specimen relationship type",
          "comments": [
            "Provide the tag that describes how the previous sample is related to the current sample being submitted from the pick list provided, so that the samples can be linked and tracked in the system."
          ],
          "examples": [
            {
              "value": "Reinfection testing"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "CNPHI:Related%20Specimen%20ID",
            "CNPHI:Related%20Specimen%20Relationship%20Type",
            "NML_LIMS:PH_RELATED_RELATIONSHIP_TYPE"
          ],
          "rank": 27,
          "slot_uri": "GENEPIO:0001209",
          "alias": "related_specimen_relationship_type",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Sample collection and processing",
          "range": "RelatedSpecimenRelationshipTypeMenu"
        },
        "presampling_activity": {
          "name": "presampling_activity",
          "description": "The upstream activities or variables that may affect the sample collected.",
          "title": "presampling_activity",
          "comments": [
            "If there was an activity that would affect the sample prior to collection (this is different than sample processing), provide the activities by selecting one or more values from the template pick list. If the information is unknown or cannot be provided, leave blank or provide a null value."
          ],
          "examples": [
            {
              "value": "Vaccination"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "rank": 28,
          "slot_uri": "GENEPIO:0100433",
          "alias": "presampling_activity",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Sample collection and processing",
          "any_of": [
            {
              "range": "PresamplingActivityMenu"
            },
            {
              "range": "NullValueMenu"
            }
          ]
        },
        "presampling_activity_details": {
          "name": "presampling_activity_details",
          "description": "The details of the activities or variables that may affect the sample collected.",
          "title": "presampling activity details",
          "comments": [
            "Briefly describe the presampling details using free text."
          ],
          "examples": [
            {
              "value": "Patient was previously infected. Sample taken during convalescence."
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "rank": 29,
          "slot_uri": "GENEPIO:0100434",
          "alias": "presampling_activity_details",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "anatomical_material": {
          "name": "anatomical_material",
          "description": "A substance obtained from an anatomical part of an organism e.g. tissue, blood.",
          "title": "anatomical material",
          "comments": [
            "Provide a descriptor if an anatomical material was sampled. Use the picklist provided in the template. If a desired term is missing from the picklist, contact emma_griffiths@sfu.ca. If not applicable, do not leave blank. Choose a null value."
          ],
          "examples": [
            {
              "value": "Blood"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "GISAID:Specimen%20source",
            "CNPHI:Anatomical%20Material",
            "NML_LIMS:PH_ISOLATION_SITE_DESC",
            "BIOSAMPLE:isolation_source",
            "BIOSAMPLE:anatomical_material",
            "VirusSeq_Portal:anatomical%20material"
          ],
          "rank": 30,
          "slot_uri": "GENEPIO:0001211",
          "alias": "anatomical_material",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Sample collection and processing",
          "required": true,
          "multivalued": true,
          "any_of": [
            {
              "range": "AnatomicalMaterialMenu"
            },
            {
              "range": "NullValueMenu"
            }
          ]
        },
        "anatomical_part": {
          "name": "anatomical_part",
          "description": "An anatomical part of an organism e.g. oropharynx.",
          "title": "anatomical part",
          "comments": [
            "Provide a descriptor if an anatomical part was sampled. Use the picklist provided in the template. If a desired term is missing from the picklist, contact emma_griffiths@sfu.ca. If not applicable, do not leave blank. Choose a null value."
          ],
          "examples": [
            {
              "value": "Nasopharynx (NP)"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "GISAID:Specimen%20source",
            "CNPHI:Anatomical%20Site",
            "NML_LIMS:PH_ISOLATION_SITE",
            "BIOSAMPLE:isolation_source",
            "BIOSAMPLE:anatomical_part",
            "VirusSeq_Portal:anatomical%20part"
          ],
          "rank": 31,
          "slot_uri": "GENEPIO:0001214",
          "alias": "anatomical_part",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Sample collection and processing",
          "required": true,
          "multivalued": true,
          "any_of": [
            {
              "range": "AnatomicalPartMenu"
            },
            {
              "range": "NullValueMenu"
            }
          ]
        },
        "body_product": {
          "name": "body_product",
          "description": "A substance excreted/secreted from an organism e.g. feces, urine, sweat.",
          "title": "body product",
          "comments": [
            "Provide a descriptor if a body product was sampled. Use the picklist provided in the template.  If a desired term is missing from the picklist, contact emma_griffiths@sfu.ca. If not applicable, do not leave blank. Choose a null value."
          ],
          "examples": [
            {
              "value": "Urine"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "GISAID:Specimen%20source",
            "CNPHI:Body%20Product",
            "NML_LIMS:PH_SPECIMEN_SOURCE_DESC",
            "BIOSAMPLE:isolation_source",
            "BIOSAMPLE:body_product",
            "VirusSeq_Portal:body%20product"
          ],
          "rank": 32,
          "slot_uri": "GENEPIO:0001216",
          "alias": "body_product",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Sample collection and processing",
          "required": true,
          "multivalued": true,
          "any_of": [
            {
              "range": "BodyProductMenu"
            },
            {
              "range": "NullValueMenu"
            }
          ]
        },
        "collection_device": {
          "name": "collection_device",
          "description": "The instrument or container used to collect the sample e.g. swab.",
          "title": "collection device",
          "comments": [
            "Provide a descriptor if a device was used for sampling. Use the picklist provided in the template. If a desired term is missing from the picklist, contact emma_griffiths@sfu.ca. If not applicable, do not leave blank. Choose a null value."
          ],
          "examples": [
            {
              "value": "Swab"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "GISAID:Specimen%20source",
            "CNPHI:Specimen%20Collection%20Matrix",
            "NML_LIMS:PH_SPECIMEN_TYPE_ORIG",
            "BIOSAMPLE:isolation_source",
            "BIOSAMPLE:collection_device",
            "VirusSeq_Portal:collection%20device"
          ],
          "rank": 33,
          "slot_uri": "GENEPIO:0001234",
          "alias": "collection_device",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Sample collection and processing",
          "required": true,
          "multivalued": true,
          "any_of": [
            {
              "range": "CollectionDeviceMenu"
            },
            {
              "range": "NullValueMenu"
            }
          ]
        },
        "collection_method": {
          "name": "collection_method",
          "description": "The process used to collect the sample e.g. phlebotomy, necropsy.",
          "title": "collection method",
          "comments": [
            "Provide a descriptor if a collection method was used for sampling. Use the picklist provided in the template.  If a desired term is missing from the picklist, contact emma_griffiths@sfu.ca. If not applicable, do not leave blank. Choose a null value."
          ],
          "examples": [
            {
              "value": "Bronchoalveolar lavage (BAL)"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "GISAID:Specimen%20source",
            "CNPHI:Collection%20Method",
            "NML_LIMS:COLLECTION_METHOD",
            "BIOSAMPLE:isolation_source",
            "BIOSAMPLE:collection_method",
            "VirusSeq_Portal:collection%20method"
          ],
          "rank": 34,
          "slot_uri": "GENEPIO:0001241",
          "alias": "collection_method",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Sample collection and processing",
          "required": true,
          "multivalued": true,
          "any_of": [
            {
              "range": "CollectionMethodMenu"
            },
            {
              "range": "NullValueMenu"
            }
          ]
        },
        "collection_protocol": {
          "name": "collection_protocol",
          "description": "The name and version of a particular protocol used for sampling.",
          "title": "collection protocol",
          "comments": [
            "Free text."
          ],
          "examples": [
            {
              "value": "FluSamplingProtocol v. 1.2"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "NML_LIMS:collection%20protocol"
          ],
          "rank": 35,
          "slot_uri": "GENEPIO:0001243",
          "alias": "collection_protocol",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "specimen_processing": {
          "name": "specimen_processing",
          "description": "Any processing applied to the sample during or after receiving the sample.",
          "title": "specimen processing",
          "comments": [
            "Critical for interpreting data. Select all the applicable processes from the pick list. If virus was passaged, include information in \"lab host\", \"passage number\", and \"passage method\" fields. If none of the processes in the pick list apply, put \"not applicable\"."
          ],
          "examples": [
            {
              "value": "Virus passage"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "GISAID:Passage%20details/history",
            "NML_LIMS:specimen%20processing"
          ],
          "rank": 36,
          "slot_uri": "GENEPIO:0001253",
          "alias": "specimen_processing",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Sample collection and processing",
          "recommended": true,
          "multivalued": true,
          "any_of": [
            {
              "range": "SpecimenProcessingMenu"
            },
            {
              "range": "NullValueMenu"
            }
          ]
        },
        "specimen_processing_details": {
          "name": "specimen_processing_details",
          "description": "Detailed information regarding the processing applied to a sample during or after receiving the sample.",
          "title": "specimen processing details",
          "comments": [
            "Provide a free text description of any processing details applied to a sample."
          ],
          "examples": [
            {
              "value": "25 swabs were pooled and further prepared as a single sample during library prep."
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "rank": 37,
          "slot_uri": "GENEPIO:0100311",
          "alias": "specimen_processing_details",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "biomaterial_extracted": {
          "name": "biomaterial_extracted",
          "description": "The biomaterial extracted from samples for the purpose of sequencing.",
          "title": "biomaterial extracted",
          "comments": [
            "Provide the biomaterial extracted from the picklist in the template."
          ],
          "examples": [
            {
              "value": "RNA (total)"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "NML_LIMS:biomaterial%20extracted"
          ],
          "rank": 38,
          "slot_uri": "GENEPIO:0001266",
          "alias": "biomaterial_extracted",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Sample collection and processing",
          "any_of": [
            {
              "range": "BiomaterialExtractedMenu"
            },
            {
              "range": "NullValueMenu"
            }
          ]
        },
        "host_common_name": {
          "name": "host_common_name",
          "description": "The commonly used name of the host.",
          "title": "host (common name)",
          "comments": [
            "Common name or scientific name are required if there was a host. Both can be provided, if known. Use terms from the pick lists in the template. Common name e.g. human, bat. If the sample was environmental, put \"not applicable."
          ],
          "examples": [
            {
              "value": "Human"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "CNPHI:Animal%20Type",
            "NML_LIMS:PH_ANIMAL_TYPE"
          ],
          "rank": 39,
          "slot_uri": "GENEPIO:0001386",
          "alias": "host_common_name",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Host Information",
          "any_of": [
            {
              "range": "HostCommonNameMenu"
            },
            {
              "range": "NullValueMenu"
            }
          ]
        },
        "host_scientific_name": {
          "name": "host_scientific_name",
          "description": "The taxonomic, or scientific name of the host.",
          "title": "host (scientific name)",
          "comments": [
            "Common name or scientific name are required if there was a host. Both can be provided, if known. Use terms from the pick lists in the template. Scientific name e.g. Homo sapiens, If the sample was environmental, put \"not applicable"
          ],
          "examples": [
            {
              "value": "Homo sapiens"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "GISAID:Host",
            "NML_LIMS:host%20%28scientific%20name%29",
            "BIOSAMPLE:host",
            "VirusSeq_Portal:host%20%28scientific%20name%29"
          ],
          "rank": 40,
          "slot_uri": "GENEPIO:0001387",
          "alias": "host_scientific_name",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Host Information",
          "required": true,
          "any_of": [
            {
              "range": "HostScientificNameMenu"
            },
            {
              "range": "NullValueMenu"
            }
          ]
        },
        "host_health_state": {
          "name": "host_health_state",
          "description": "Health status of the host at the time of sample collection.",
          "title": "host health state",
          "comments": [
            "If known, select a descriptor from the pick list provided in the template."
          ],
          "examples": [
            {
              "value": "Symptomatic"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "GISAID:Patient%20status",
            "CNPHI:Host%20Health%20State",
            "NML_LIMS:PH_HOST_HEALTH",
            "BIOSAMPLE:host_health_state"
          ],
          "rank": 41,
          "slot_uri": "GENEPIO:0001388",
          "alias": "host_health_state",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Host Information",
          "any_of": [
            {
              "range": "HostHealthStateMenu"
            },
            {
              "range": "NullValueMenu"
            }
          ]
        },
        "host_health_status_details": {
          "name": "host_health_status_details",
          "description": "Further details pertaining to the health or disease status of the host at time of collection.",
          "title": "host health status details",
          "comments": [
            "If known, select a descriptor from the pick list provided in the template."
          ],
          "examples": [
            {
              "value": "Hospitalized (ICU)"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "CNPHI:Host%20Health%20State%20Details",
            "NML_LIMS:PH_HOST_HEALTH_DETAILS"
          ],
          "rank": 42,
          "slot_uri": "GENEPIO:0001389",
          "alias": "host_health_status_details",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Host Information",
          "any_of": [
            {
              "range": "HostHealthStatusDetailsMenu"
            },
            {
              "range": "NullValueMenu"
            }
          ]
        },
        "host_health_outcome": {
          "name": "host_health_outcome",
          "description": "Disease outcome in the host.",
          "title": "host health outcome",
          "comments": [
            "If known, select a descriptor from the pick list provided in the template."
          ],
          "examples": [
            {
              "value": "Recovered"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "NML_LIMS:PH_HOST_HEALTH_OUTCOME",
            "BIOSAMPLE:host_disease_outcome"
          ],
          "rank": 43,
          "slot_uri": "GENEPIO:0001390",
          "alias": "host_health_outcome",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Host Information",
          "any_of": [
            {
              "range": "HostHealthOutcomeMenu"
            },
            {
              "range": "NullValueMenu"
            }
          ]
        },
        "host_disease": {
          "name": "host_disease",
          "description": "The name of the disease experienced by the host.",
          "title": "host disease",
          "comments": [
            "Select \"Influenza\" from the pick list provided in the template."
          ],
          "examples": [
            {
              "value": "Influenza"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "CNPHI:Host%20Disease",
            "NML_LIMS:PH_HOST_DISEASE",
            "BIOSAMPLE:host_disease",
            "VirusSeq_Portal:host%20disease"
          ],
          "rank": 44,
          "slot_uri": "GENEPIO:0001391",
          "alias": "host_disease",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Host Information",
          "required": true,
          "any_of": [
            {
              "range": "HostDiseaseMenu"
            },
            {
              "range": "NullValueMenu"
            }
          ]
        },
        "host_age": {
          "name": "host_age",
          "description": "Age of host at the time of sampling.",
          "title": "host age",
          "comments": [
            "Enter the age of the host in years. If not available, provide a null value. If there is not host, put \"Not Applicable\"."
          ],
          "examples": [
            {
              "value": "79"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "GISAID:Patient%20age",
            "CNPHI:Patient%20Age",
            "NML_LIMS:PH_AGE",
            "BIOSAMPLE:host_age",
            "VirusSeq_Portal:host%20age"
          ],
          "rank": 45,
          "slot_uri": "GENEPIO:0001392",
          "alias": "host_age",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Host Information",
          "required": true,
          "minimum_value": 0,
          "maximum_value": 130,
          "any_of": [
            {
              "range": "decimal"
            },
            {
              "range": "NullValueMenu"
            }
          ]
        },
        "host_age_unit": {
          "name": "host_age_unit",
          "description": "The unit used to measure the host age, in either months or years.",
          "title": "host age unit",
          "comments": [
            "Indicate whether the host age is in months or years. Age indicated in months will be binned to the 0 - 9 year age bin."
          ],
          "examples": [
            {
              "value": "years"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "CNPHI:Age%20Units",
            "NML_LIMS:PH_AGE_UNIT",
            "VirusSeq_Portal:host%20age%20unit"
          ],
          "rank": 46,
          "slot_uri": "GENEPIO:0001393",
          "alias": "host_age_unit",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Host Information",
          "required": true,
          "any_of": [
            {
              "range": "HostAgeUnitMenu"
            },
            {
              "range": "NullValueMenu"
            }
          ]
        },
        "host_age_bin": {
          "name": "host_age_bin",
          "description": "Age of host at the time of sampling, expressed as an age group.",
          "title": "host age bin",
          "comments": [
            "Select the corresponding host age bin from the pick list provided in the template. If not available, provide a null value."
          ],
          "examples": [
            {
              "value": "60 - 69"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "CNPHI:Host%20Age%20Category",
            "NML_LIMS:PH_AGE_GROUP",
            "VirusSeq_Portal:host%20age%20bin"
          ],
          "rank": 47,
          "slot_uri": "GENEPIO:0001394",
          "alias": "host_age_bin",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Host Information",
          "required": true,
          "any_of": [
            {
              "range": "HostAgeBinMenu"
            },
            {
              "range": "NullValueMenu"
            }
          ]
        },
        "host_gender": {
          "name": "host_gender",
          "description": "The gender of the host at the time of sample collection.",
          "title": "host gender",
          "comments": [
            "Select the corresponding host gender from the pick list provided in the template. If not available, provide a null value. If there is no host, put \"Not Applicable\"."
          ],
          "examples": [
            {
              "value": "Male"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "GISAID:Gender",
            "CNPHI:Patient%20Sex",
            "NML_LIMS:VD_SEX",
            "BIOSAMPLE:host_sex",
            "VirusSeq_Portal:host%20gender"
          ],
          "rank": 48,
          "slot_uri": "GENEPIO:0001395",
          "alias": "host_gender",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Host Information",
          "required": true,
          "structured_pattern": {
            "syntax": "{Title_Case}",
            "interpolated": true,
            "partial_match": false
          },
          "any_of": [
            {
              "range": "HostGenderMenu"
            },
            {
              "range": "NullValueMenu"
            }
          ]
        },
        "host_subject_id": {
          "name": "host_subject_id",
          "description": "A unique identifier by which each host can be referred to e.g. #131",
          "title": "host subject ID",
          "comments": [
            "Provide the host identifier. Should be a unique, user-defined identifier."
          ],
          "examples": [
            {
              "value": "BCxy123"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "NML_LIMS:host%20subject%20ID",
            "BIOSAMPLE:host_subject_id"
          ],
          "rank": 49,
          "slot_uri": "GENEPIO:0001398",
          "alias": "host_subject_id",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Host Information",
          "range": "WhitespaceMinimizedString"
        },
        "host_vaccination_status": {
          "name": "host_vaccination_status",
          "description": "The vaccination status of the host (fully vaccinated, partially vaccinated, or not vaccinated).",
          "title": "host vaccination status",
          "comments": [
            "Select the vaccination status of the host from the pick list."
          ],
          "examples": [
            {
              "value": "Fully Vaccinated"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "NML_LIMS:PH_VACCINATION_HISTORY"
          ],
          "rank": 50,
          "slot_uri": "GENEPIO:0001404",
          "alias": "host_vaccination_status",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Host vaccination information",
          "any_of": [
            {
              "range": "HostVaccinationStatusMenu"
            },
            {
              "range": "NullValueMenu"
            }
          ]
        },
        "vaccination_history": {
          "name": "vaccination_history",
          "description": "A description of the vaccines received and the administration dates of a series of vaccinations against a specific disease or a set of diseases.",
          "title": "vaccination history",
          "comments": [
            "Free text description of the dates and vaccines administered against a particular disease/set of diseases. It is also acceptable to concatenate the individual dose information (vaccine name, vaccination date) separated by semicolons."
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "NML_LIMS:PH_VACCINATION_HISTORY"
          ],
          "rank": 51,
          "slot_uri": "GENEPIO:0100321",
          "alias": "vaccination_history",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Host vaccination information",
          "range": "WhitespaceMinimizedString"
        },
        "exposure_event": {
          "name": "exposure_event",
          "description": "Event leading to exposure.",
          "title": "exposure event",
          "comments": [
            "Select an exposure event from the pick list provided in the template. If the desired term is missing, contact the curation team."
          ],
          "examples": [
            {
              "value": "Social Gathering"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "GISAID:Additional%20location%20information",
            "CNPHI:Exposure%20Event",
            "NML_LIMS:PH_EXPOSURE"
          ],
          "rank": 52,
          "slot_uri": "GENEPIO:0001417",
          "alias": "exposure_event",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Host exposure information",
          "any_of": [
            {
              "range": "ExposureEventMenu"
            },
            {
              "range": "NullValueMenu"
            }
          ]
        },
        "exposure_contact_level": {
          "name": "exposure_contact_level",
          "description": "The exposure transmission contact type.",
          "title": "exposure contact level",
          "comments": [
            "Select direct or indirect exposure from the pick-list."
          ],
          "examples": [
            {
              "value": "Direct"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "NML_LIMS:exposure%20contact%20level"
          ],
          "rank": 53,
          "slot_uri": "GENEPIO:0001418",
          "alias": "exposure_contact_level",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Host exposure information",
          "any_of": [
            {
              "range": "ExposureContactLevelMenu"
            },
            {
              "range": "NullValueMenu"
            }
          ]
        },
        "host_role": {
          "name": "host_role",
          "description": "The role of the host in relation to the exposure setting.",
          "title": "host role",
          "comments": [
            "Select the host's personal role(s) from the pick list provided in the template. If the desired term is missing, contact the curation team."
          ],
          "examples": [
            {
              "value": "Inpatient"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "NML_LIMS:PH_HOST_ROLE"
          ],
          "rank": 54,
          "slot_uri": "GENEPIO:0001419",
          "alias": "host_role",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Host exposure information",
          "range": "HostRoleMenu",
          "multivalued": true
        },
        "exposure_setting": {
          "name": "exposure_setting",
          "description": "The setting leading to exposure.",
          "title": "exposure setting",
          "comments": [
            "Select the host exposure setting(s) from the pick list provided in the template. If a desired term is missing, contact the curation team."
          ],
          "examples": [
            {
              "value": "Healthcare Setting"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "NML_LIMS:PH_EXPOSURE"
          ],
          "rank": 55,
          "slot_uri": "GENEPIO:0001428",
          "alias": "exposure_setting",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Host exposure information",
          "range": "ExposureSettingMenu",
          "multivalued": true
        },
        "exposure_details": {
          "name": "exposure_details",
          "description": "Additional host exposure information.",
          "title": "exposure details",
          "comments": [
            "Free text description of the exposure."
          ],
          "examples": [
            {
              "value": "Case infected family at home"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "NML_LIMS:PH_EXPOSURE_DETAILS"
          ],
          "rank": 56,
          "slot_uri": "GENEPIO:0001431",
          "alias": "exposure_details",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Host exposure information",
          "range": "WhitespaceMinimizedString"
        },
        "purpose_of_sequencing": {
          "name": "purpose_of_sequencing",
          "description": "The reason that the sample was sequenced.",
          "title": "purpose of sequencing",
          "comments": [
            "The reason why a sample was originally collected may differ from the reason why it was selected for sequencing. The reason a sample was sequenced may provide information about potential biases in sequencing strategy. Provide the purpose of sequencing from the picklist in the template. The reason for sample collection should be indicated in the \"purpose of sampling\" field."
          ],
          "examples": [
            {
              "value": "Baseline surveillance (random sampling)"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "CNPHI:Reason%20for%20Sequencing",
            "NML_LIMS:PH_REASON_FOR_SEQUENCING",
            "BIOSAMPLE:purpose_of_sequencing",
            "VirusSeq_Portal:purpose%20of%20sequencing"
          ],
          "rank": 57,
          "slot_uri": "GENEPIO:0001445",
          "alias": "purpose_of_sequencing",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Sequencing",
          "required": true,
          "multivalued": true,
          "any_of": [
            {
              "range": "PurposeOfSequencingMenu"
            },
            {
              "range": "NullValueMenu"
            }
          ]
        },
        "purpose_of_sequencing_details": {
          "name": "purpose_of_sequencing_details",
          "description": "The description of why the sample was sequenced providing specific details.",
          "title": "purpose of sequencing details",
          "comments": [
            "Provide an expanded description of why the sample was sequenced using free text. The description may include the importance of the sequences for a particular public health investigation/surveillance activity/research question. Suggested standardized descriotions include: Screened for S gene target failure (S dropout), Screened for mink variants, Screened for B.1.1.7 variant, Screened for B.1.135 variant, Screened for P.1 variant, Screened due to travel history, Screened due to close contact with infected individual, Assessing public health control measures, Determining early introductions and spread, Investigating airline-related exposures, Investigating temporary foreign worker, Investigating remote regions, Investigating health care workers, Investigating schools/universities, Investigating reinfection."
          ],
          "examples": [
            {
              "value": "Seasonal flu research project"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "CNPHI:Details%20on%20the%20Reason%20for%20Sequencing",
            "NML_LIMS:PH_REASON_FOR_SEQUENCING_DETAILS",
            "VirusSeq_Portal:purpose%20of%20sequencing%20details"
          ],
          "rank": 58,
          "slot_uri": "GENEPIO:0001446",
          "alias": "purpose_of_sequencing_details",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Sequencing",
          "required": true,
          "any_of": [
            {
              "range": "WhitespaceMinimizedString"
            },
            {
              "range": "NullValueMenu"
            }
          ]
        },
        "sequencing_date": {
          "name": "sequencing_date",
          "description": "The date the sample was sequenced.",
          "title": "sequencing date",
          "todos": [
            "<={today}"
          ],
          "comments": [
            "ISO 8601 standard \"YYYY-MM-DD\"."
          ],
          "examples": [
            {
              "value": "2023-09-22"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "NML_LIMS:PH_SEQUENCING_DATE"
          ],
          "rank": 59,
          "slot_uri": "GENEPIO:0001447",
          "alias": "sequencing_date",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Sequencing",
          "required": true,
          "any_of": [
            {
              "range": "date"
            },
            {
              "range": "NullValueMenu"
            }
          ]
        },
        "amplicon_size": {
          "name": "amplicon_size",
          "description": "The length of the amplicon generated by PCR amplification.",
          "title": "amplicon size",
          "comments": [
            "Provide the amplicon size, including the units."
          ],
          "examples": [
            {
              "value": "300bp"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "NML_LIMS:amplicon%20size"
          ],
          "rank": 60,
          "slot_uri": "GENEPIO:0001449",
          "alias": "amplicon_size",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Sequencing",
          "range": "WhitespaceMinimizedString"
        },
        "library_preparation_kit": {
          "name": "library_preparation_kit",
          "description": "The name of the DNA library preparation kit used to generate the library being sequenced.",
          "title": "library preparation kit",
          "comments": [
            "Provide the name of the library preparation kit used."
          ],
          "examples": [
            {
              "value": "Nextera XT"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "NML_LIMS:PH_LIBRARY_PREP_KIT"
          ],
          "rank": 61,
          "slot_uri": "GENEPIO:0001450",
          "alias": "library_preparation_kit",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Sequencing",
          "range": "WhitespaceMinimizedString"
        },
        "sequencing_instrument": {
          "name": "sequencing_instrument",
          "description": "The model of the sequencing instrument used.",
          "title": "sequencing instrument",
          "comments": [
            "Select a sequencing instrument from the picklist provided in the template."
          ],
          "examples": [
            {
              "value": "Oxford Nanopore MinION"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "GISAID:Sequencing%20technology",
            "CNPHI:Sequencing%20Instrument",
            "NML_LIMS:PH_INSTRUMENT_CGN",
            "VirusSeq_Portal:sequencing%20instrument"
          ],
          "rank": 62,
          "slot_uri": "GENEPIO:0001452",
          "alias": "sequencing_instrument",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Sequencing",
          "required": true,
          "multivalued": true,
          "any_of": [
            {
              "range": "SequencingInstrumentMenu"
            },
            {
              "range": "NullValueMenu"
            }
          ]
        },
        "sequencing_protocol": {
          "name": "sequencing_protocol",
          "description": "The protocol used to generate the sequence.",
          "title": "sequencing protocol",
          "comments": [
            "Provide a free text description of the methods and materials used to generate the sequence. Suggested text, fill in information where indicated.: \"Viral sequencing was performed following a tiling amplicon strategy using the <fill in> primer scheme. Sequencing was performed using a <fill in> sequencing instrument. Libraries were prepared using <fill in> library kit. \""
          ],
          "examples": [
            {
              "value": "Genomes were generated through amplicon sequencing of 300 bp amplicons with ARTIC schema primers. Libraries were created using Illumina DNA Prep kits, and sequence data was produced using Miseq Micro v2 (500 cycles) sequencing kits."
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "NML_LIMS:PH_TESTING_PROTOCOL",
            "VirusSeq_Portal:sequencing%20protocol"
          ],
          "rank": 63,
          "slot_uri": "GENEPIO:0001454",
          "alias": "sequencing_protocol",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Sequencing",
          "range": "WhitespaceMinimizedString"
        },
        "amplicon_pcr_primer_scheme": {
          "name": "amplicon_pcr_primer_scheme",
          "description": "The specifications of the primers (primer sequences, binding positions, fragment size generated etc) used to generate the amplicons to be sequenced.",
          "title": "amplicon pcr primer scheme",
          "comments": [
            "Provide the name and version of the primer scheme used to generate the amplicons for sequencing."
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "NML_LIMS:amplicon%20pcr%20primer%20scheme"
          ],
          "rank": 64,
          "slot_uri": "GENEPIO:0001456",
          "alias": "amplicon_pcr_primer_scheme",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Sequencing",
          "range": "WhitespaceMinimizedString"
        },
        "raw_sequence_data_processing_method": {
          "name": "raw_sequence_data_processing_method",
          "description": "The names of the software and version number used for raw data processing such as removing barcodes, adapter trimming, filtering etc.",
          "title": "raw sequence data processing method",
          "comments": [
            "Provide the software name followed by the version e.g. Trimmomatic v. 0.38, Porechop v. 0.2.3"
          ],
          "examples": [
            {
              "value": "Porechop 0.2.3"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "NML_LIMS:PH_RAW_SEQUENCE_METHOD",
            "VirusSeq_Portal:raw%20sequence%20data%20processing%20method"
          ],
          "rank": 65,
          "slot_uri": "GENEPIO:0001458",
          "alias": "raw_sequence_data_processing_method",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "WhitespaceMinimizedString",
          "required": true
        },
        "dehosting_method": {
          "name": "dehosting_method",
          "description": "The method used to remove host reads from the pathogen sequence.",
          "title": "dehosting method",
          "comments": [
            "Provide the name and version number of the software used to remove host reads."
          ],
          "examples": [
            {
              "value": "Nanostripper"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "NML_LIMS:PH_DEHOSTING_METHOD",
            "VirusSeq_Portal:dehosting%20method"
          ],
          "rank": 66,
          "slot_uri": "GENEPIO:0001459",
          "alias": "dehosting_method",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "WhitespaceMinimizedString",
          "required": true
        },
        "consensus_sequence_software_name": {
          "name": "consensus_sequence_software_name",
          "description": "The name of software used to generate the consensus sequence.",
          "title": "consensus sequence software name",
          "comments": [
            "Provide the name of the software used to generate the consensus sequence."
          ],
          "examples": [
            {
              "value": "iVar"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "GISAID:Assembly%20method",
            "CNPHI:consensus%20sequence",
            "NML_LIMS:PH_CONSENSUS_SEQUENCE",
            "VirusSeq_Portal:consensus%20sequence%20software%20name"
          ],
          "rank": 67,
          "slot_uri": "GENEPIO:0001463",
          "alias": "consensus_sequence_software_name",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "WhitespaceMinimizedString",
          "required": true
        },
        "consensus_sequence_software_version": {
          "name": "consensus_sequence_software_version",
          "description": "The version of the software used to generate the consensus sequence.",
          "title": "consensus sequence software version",
          "comments": [
            "Provide the version of the software used to generate the consensus sequence."
          ],
          "examples": [
            {
              "value": "1.3"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "CNPHI:consensus%20sequence",
            "NML_LIMS:PH_CONSENSUS_SEQUENCE_VERSION",
            "VirusSeq_Portal:consensus%20sequence%20software%20version"
          ],
          "rank": 68,
          "slot_uri": "GENEPIO:0001469",
          "alias": "consensus_sequence_software_version",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "WhitespaceMinimizedString",
          "required": true
        },
        "breadth_of_coverage_value": {
          "name": "breadth_of_coverage_value",
          "description": "The percentage of the reference genome covered by the sequenced data, to a prescribed depth.",
          "title": "breadth of coverage value",
          "comments": [
            "Provide value as a percent."
          ],
          "examples": [
            {
              "value": "95%"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "NML_LIMS:breadth%20of%20coverage%20value",
            "VirusSeq_Portal:breadth%20of%20coverage%20value"
          ],
          "rank": 69,
          "slot_uri": "GENEPIO:0001472",
          "alias": "breadth_of_coverage_value",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "WhitespaceMinimizedString"
        },
        "depth_of_coverage_value": {
          "name": "depth_of_coverage_value",
          "description": "The average number of reads representing a given nucleotide in the reconstructed sequence.",
          "title": "depth of coverage value",
          "comments": [
            "Provide value as a fold of coverage."
          ],
          "examples": [
            {
              "value": "400x"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "GISAID:Coverage",
            "NML_LIMS:depth%20of%20coverage%20value",
            "VirusSeq_Portal:depth%20of%20coverage%20value"
          ],
          "rank": 70,
          "slot_uri": "GENEPIO:0001474",
          "alias": "depth_of_coverage_value",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "WhitespaceMinimizedString"
        },
        "depth_of_coverage_threshold": {
          "name": "depth_of_coverage_threshold",
          "description": "The threshold used as a cut-off for the depth of coverage.",
          "title": "depth of coverage threshold",
          "comments": [
            "Provide the threshold fold coverage."
          ],
          "examples": [
            {
              "value": "100x"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "NML_LIMS:depth%20of%20coverage%20threshold"
          ],
          "rank": 71,
          "slot_uri": "GENEPIO:0001475",
          "alias": "depth_of_coverage_threshold",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "WhitespaceMinimizedString"
        },
        "number_of_base_pairs_sequenced": {
          "name": "number_of_base_pairs_sequenced",
          "description": "The number of total base pairs generated by the sequencing process.",
          "title": "number of base pairs sequenced",
          "comments": [
            "Provide a numerical value (no need to include units)."
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "NML_LIMS:number%20of%20base%20pairs%20sequenced"
          ],
          "rank": 72,
          "slot_uri": "GENEPIO:0001482",
          "alias": "number_of_base_pairs_sequenced",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "integer",
          "minimum_value": 0
        },
        "consensus_genome_length": {
          "name": "consensus_genome_length",
          "description": "Size of the reconstructed genome described as the number of base pairs.",
          "title": "consensus genome length",
          "comments": [
            "Provide a numerical value (no need to include units)."
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "NML_LIMS:consensus%20genome%20length"
          ],
          "rank": 73,
          "slot_uri": "GENEPIO:0001483",
          "alias": "consensus_genome_length",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "integer",
          "minimum_value": 0
        },
        "reference_genome_accession": {
          "name": "reference_genome_accession",
          "description": "A persistent, unique identifier of a genome database entry.",
          "title": "reference genome accession",
          "comments": [
            "Provide the accession number of the reference genome."
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "NML_LIMS:reference%20genome%20accession",
            "VirusSeq_Portal:reference%20genome%20accession"
          ],
          "rank": 74,
          "slot_uri": "GENEPIO:0001485",
          "alias": "reference_genome_accession",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "WhitespaceMinimizedString"
        },
        "bioinformatics_protocol": {
          "name": "bioinformatics_protocol",
          "description": "A description of the overall bioinformatics strategy used.",
          "title": "bioinformatics protocol",
          "comments": [
            "Further details regarding the methods used to process raw data, and/or generate assemblies, and/or generate consensus sequences can. This information can be provided in an SOP or protocol or pipeline/workflow. Provide the name and version number of the protocol, or a GitHub link to a pipeline or workflow."
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "CNPHI:Bioinformatics%20Protocol",
            "NML_LIMS:PH_BIOINFORMATICS_PROTOCOL",
            "VirusSeq_Portal:bioinformatics%20protocol"
          ],
          "rank": 75,
          "slot_uri": "GENEPIO:0001489",
          "alias": "bioinformatics_protocol",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "WhitespaceMinimizedString",
          "required": true
        },
        "gene_name_1": {
          "name": "gene_name_1",
          "description": "The name of the gene used in the diagnostic RT-PCR test.",
          "title": "gene name 1",
          "comments": [
            "Provide the full name of the gene used in the test. The gene symbol (short form of gene name) can also be provided. Standardized gene names and symbols can be found in the Gene Ontology using this look-up service: https://bit.ly/2Sq1LbI"
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "CNPHI:Gene%20Target%201",
            "NML_LIMS:SUBMITTED_RESLT%20-%20Gene%20Target%20%231",
            "BIOSAMPLE:gene_name_1",
            "VirusSeq_Portal:gene%20name"
          ],
          "rank": 76,
          "slot_uri": "GENEPIO:0001507",
          "alias": "gene_name_1",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Pathogen diagnostic testing",
          "any_of": [
            {
              "range": "GeneNameMenu"
            },
            {
              "range": "NullValueMenu"
            }
          ]
        },
        "diagnostic_pcr_ct_value_1": {
          "name": "diagnostic_pcr_ct_value_1",
          "description": "The Ct value result from a diagnostic SARS-CoV-2 RT-PCR test.",
          "title": "diagnostic pcr Ct value 1",
          "comments": [
            "Provide the CT value of the sample from the diagnostic RT-PCR test."
          ],
          "examples": [
            {
              "value": "21"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "CNPHI:Gene%20Target%201%20CT%20Value",
            "NML_LIMS:SUBMITTED_RESLT%20-%20Gene%20Target%20%231%20CT%20Value",
            "BIOSAMPLE:diagnostic_PCR_CT_value_1",
            "VirusSeq_Portal:diagnostic%20pcr%20Ct%20value"
          ],
          "rank": 77,
          "slot_uri": "GENEPIO:0001509",
          "alias": "diagnostic_pcr_ct_value_1",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Pathogen diagnostic testing",
          "any_of": [
            {
              "range": "decimal"
            },
            {
              "range": "NullValueMenu"
            }
          ]
        },
        "gene_name_2": {
          "name": "gene_name_2",
          "description": "The name of the gene used in the diagnostic RT-PCR test.",
          "title": "gene name 2",
          "comments": [
            "Provide the full name of another gene used in an RT-PCR test. The gene symbol (short form of gene name) can also be provided. Standardized gene names and symbols can be found in the Gene Ontology using this look-up service: https://bit.ly/2Sq1LbI"
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "CNPHI:Gene%20Target%202",
            "NML_LIMS:SUBMITTED_RESLT%20-%20Gene%20Target%20%232",
            "BIOSAMPLE:gene_name_2"
          ],
          "rank": 78,
          "slot_uri": "GENEPIO:0001510",
          "alias": "gene_name_2",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Pathogen diagnostic testing",
          "any_of": [
            {
              "range": "GeneNameMenu"
            },
            {
              "range": "NullValueMenu"
            }
          ]
        },
        "diagnostic_pcr_ct_value_2": {
          "name": "diagnostic_pcr_ct_value_2",
          "description": "The Ct value result from a diagnostic SARS-CoV-2 RT-PCR test.",
          "title": "diagnostic pcr Ct value 2",
          "comments": [
            "Provide the CT value of the sample from the second diagnostic RT-PCR test."
          ],
          "examples": [
            {
              "value": "36"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "CNPHI:Gene%20Target%202%20CT%20Value",
            "NML_LIMS:SUBMITTED_RESLT%20-%20Gene%20Target%20%232%20CT%20Value",
            "BIOSAMPLE:diagnostic_PCR_CT_value_2"
          ],
          "rank": 79,
          "slot_uri": "GENEPIO:0001512",
          "alias": "diagnostic_pcr_ct_value_2",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Pathogen diagnostic testing",
          "any_of": [
            {
              "range": "decimal"
            },
            {
              "range": "NullValueMenu"
            }
          ]
        },
        "gene_name_3": {
          "name": "gene_name_3",
          "description": "The name of the gene used in the diagnostic RT-PCR test.",
          "title": "gene name 3",
          "comments": [
            "Provide the full name of another gene used in an RT-PCR test. The gene symbol (short form of gene name) can also be provided. Standardized gene names and symbols can be found in the Gene Ontology using this look-up service: https://bit.ly/2Sq1LbI"
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "CNPHI:Gene%20Target%203",
            "NML_LIMS:SUBMITTED_RESLT%20-%20Gene%20Target%20%233"
          ],
          "rank": 80,
          "slot_uri": "GENEPIO:0001513",
          "alias": "gene_name_3",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Pathogen diagnostic testing",
          "any_of": [
            {
              "range": "GeneNameMenu"
            },
            {
              "range": "NullValueMenu"
            }
          ]
        },
        "diagnostic_pcr_ct_value_3": {
          "name": "diagnostic_pcr_ct_value_3",
          "description": "The Ct value result from a diagnostic SARS-CoV-2 RT-PCR test.",
          "title": "diagnostic pcr Ct value 3",
          "comments": [
            "Provide the CT value of the sample from the second diagnostic RT-PCR test."
          ],
          "examples": [
            {
              "value": "30"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "CNPHI:Gene%20Target%203%20CT%20Value",
            "NML_LIMS:SUBMITTED_RESLT%20-%20Gene%20Target%20%233%20CT%20Value"
          ],
          "rank": 81,
          "slot_uri": "GENEPIO:0001515",
          "alias": "diagnostic_pcr_ct_value_3",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Pathogen diagnostic testing",
          "any_of": [
            {
              "range": "decimal"
            },
            {
              "range": "NullValueMenu"
            }
          ]
        },
        "authors": {
          "name": "authors",
          "description": "Names of individuals contributing to the processes of sample collection, sequence generation, analysis, and data submission.",
          "title": "authors",
          "comments": [
            "Include the first and last names of all individuals that should be attributed, separated by a comma."
          ],
          "examples": [
            {
              "value": "Tejinder Singh, Fei Hu, Joe Blogs"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "GISAID:Authors",
            "CNPHI:Authors",
            "NML_LIMS:PH_CANCOGEN_AUTHORS"
          ],
          "rank": 82,
          "slot_uri": "GENEPIO:0001517",
          "alias": "authors",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Contributor acknowledgement",
          "range": "WhitespaceMinimizedString",
          "recommended": true
        },
        "dataharmonizer_provenance": {
          "name": "dataharmonizer_provenance",
          "description": "The DataHarmonizer software and template version provenance.",
          "title": "DataHarmonizer provenance",
          "comments": [
            "The current software and template version information will be automatically generated in this field after the user utilizes the \"validate\" function. This information will be generated regardless as to whether the row is valid of not."
          ],
          "examples": [
            {
              "value": "DataHarmonizer v3.3.3, Influenza v1.0.0"
            }
          ],
          "from_schema": "https://example.com/Influenza",
          "exact_mappings": [
            "GISAID:DataHarmonizer%20provenance",
            "CNPHI:Additional%20Comments",
            "NML_LIMS:HC_COMMENTS"
          ],
          "rank": 83,
          "slot_uri": "GENEPIO:0001518",
          "alias": "dataharmonizer_provenance",
          "owner": "Influenza",
          "domain_of": [
            "Influenza"
          ],
          "slot_group": "Contributor acknowledgement",
          "range": "Provenance"
        }
      }
    }
  },
  "settings": {
    "Title_Case": {
      "setting_key": "Title_Case",
      "setting_value": "(((?<=\\b)[^a-z\\W]\\w*?|[\\W])+)"
    },
    "UPPER_CASE": {
      "setting_key": "UPPER_CASE",
      "setting_value": "[A-Z\\W\\d_]*"
    },
    "lower_case": {
      "setting_key": "lower_case",
      "setting_value": "[a-z\\W\\d_]*"
    }
  },
  "@type": "SchemaDefinition"
}