{
  "name": "Wastewater",
  "description": "",
  "id": "https://example.com/CanCOGeN_Covid-19",
  "version": "1.0.0",
  "prefixes": {
    "linkml": {
      "prefix_prefix": "linkml",
      "prefix_reference": "https://w3id.org/linkml/"
    },
    "GENEPIO": {
      "prefix_prefix": "GENEPIO",
      "prefix_reference": "http://purl.obolibrary.org/obo/GENEPIO_"
    },
    "xsd": {
      "prefix_prefix": "xsd",
      "prefix_reference": "http://www.w3.org/2001/XMLSchema#"
    },
    "shex": {
      "prefix_prefix": "shex",
      "prefix_reference": "http://www.w3.org/ns/shex#"
    },
    "schema": {
      "prefix_prefix": "schema",
      "prefix_reference": "http://schema.org/"
    }
  },
  "default_prefix": "https://example.com/CanCOGeN_Covid-19/",
  "types": {
    "WhitespaceMinimizedString": {
      "name": "WhitespaceMinimizedString",
      "description": "A string that has all whitespace trimmed off of beginning and end, and all internal whitespace segments reduced to single spaces. Whitespace includes #x9 (tab), #xA (linefeed), and #xD (carriage return).",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "typeof": "string",
      "base": "str",
      "uri": "xsd:token"
    },
    "Provenance": {
      "name": "Provenance",
      "description": "A field containing a DataHarmonizer versioning marker. It is issued by DataHarmonizer when validation is applied to a given row of data.",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "typeof": "string",
      "base": "str",
      "uri": "xsd:token"
    },
    "string": {
      "name": "string",
      "description": "A character string",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "exact_mappings": [
        "schema:Text"
      ],
      "base": "str",
      "uri": "xsd:string"
    },
    "integer": {
      "name": "integer",
      "description": "An integer",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "exact_mappings": [
        "schema:Integer"
      ],
      "base": "int",
      "uri": "xsd:integer"
    },
    "boolean": {
      "name": "boolean",
      "description": "A binary (true or false) value",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "exact_mappings": [
        "schema:Boolean"
      ],
      "base": "Bool",
      "uri": "xsd:boolean",
      "repr": "bool"
    },
    "float": {
      "name": "float",
      "description": "A real number that conforms to the xsd:float specification",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "exact_mappings": [
        "schema:Float"
      ],
      "base": "float",
      "uri": "xsd:float"
    },
    "double": {
      "name": "double",
      "description": "A real number that conforms to the xsd:double specification",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "close_mappings": [
        "schema:Float"
      ],
      "base": "float",
      "uri": "xsd:double"
    },
    "decimal": {
      "name": "decimal",
      "description": "A real number with arbitrary precision that conforms to the xsd:decimal specification",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "broad_mappings": [
        "schema:Number"
      ],
      "base": "Decimal",
      "uri": "xsd:decimal"
    },
    "time": {
      "name": "time",
      "description": "A time object represents a (local) time of day, independent of any particular day",
      "notes": [
        "URI is dateTime because OWL reasoners do not work with straight date or time"
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "exact_mappings": [
        "schema:Time"
      ],
      "base": "XSDTime",
      "uri": "xsd:dateTime",
      "repr": "str"
    },
    "date": {
      "name": "date",
      "description": "a date (year, month and day) in an idealized calendar",
      "notes": [
        "URI is dateTime because OWL reasoners don't work with straight date or time"
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "exact_mappings": [
        "schema:Date"
      ],
      "base": "XSDDate",
      "uri": "xsd:date",
      "repr": "str"
    },
    "datetime": {
      "name": "datetime",
      "description": "The combination of a date and time",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "exact_mappings": [
        "schema:DateTime"
      ],
      "base": "XSDDateTime",
      "uri": "xsd:dateTime",
      "repr": "str"
    },
    "date_or_datetime": {
      "name": "date_or_datetime",
      "description": "Either a date or a datetime",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "base": "str",
      "uri": "linkml:DateOrDatetime",
      "repr": "str"
    },
    "uriorcurie": {
      "name": "uriorcurie",
      "description": "a URI or a CURIE",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "base": "URIorCURIE",
      "uri": "xsd:anyURI",
      "repr": "str"
    },
    "curie": {
      "name": "curie",
      "conforms_to": "https://www.w3.org/TR/curie/",
      "description": "a compact URI",
      "comments": [
        "in RDF serializations this MUST be expanded to a URI",
        "in non-RDF serializations MAY be serialized as the compact representation"
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "base": "Curie",
      "uri": "xsd:string",
      "repr": "str"
    },
    "uri": {
      "name": "uri",
      "conforms_to": "https://www.ietf.org/rfc/rfc3987.txt",
      "description": "a complete URI",
      "comments": [
        "in RDF serializations a slot with range of uri is treated as a literal or type xsd:anyURI unless it is an identifier or a reference to an identifier, in which case it is translated directly to a node"
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "close_mappings": [
        "schema:URL"
      ],
      "base": "URI",
      "uri": "xsd:anyURI",
      "repr": "str"
    },
    "ncname": {
      "name": "ncname",
      "description": "Prefix part of CURIE",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "base": "NCName",
      "uri": "xsd:string",
      "repr": "str"
    },
    "objectidentifier": {
      "name": "objectidentifier",
      "description": "A URI or CURIE that represents an object in the model.",
      "comments": [
        "Used for inheritence and type checking"
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "base": "ElementIdentifier",
      "uri": "shex:iri",
      "repr": "str"
    },
    "nodeidentifier": {
      "name": "nodeidentifier",
      "description": "A URI, CURIE or BNODE that represents a node in a model.",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "base": "NodeIdentifier",
      "uri": "shex:nonLiteral",
      "repr": "str"
    }
  },
  "enums": {
    "null value menu": {
      "name": "null value menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "Not Applicable": {
          "text": "Not Applicable",
          "meaning": "GENEPIO:0001619"
        },
        "Missing": {
          "text": "Missing",
          "meaning": "GENEPIO:0001618"
        },
        "Not Collected": {
          "text": "Not Collected",
          "meaning": "GENEPIO:0001620"
        },
        "Not Provided": {
          "text": "Not Provided",
          "meaning": "GENEPIO:0001668"
        },
        "Restricted Access": {
          "text": "Restricted Access",
          "meaning": "GENEPIO:0001810"
        }
      }
    },
    "geo_loc_name (country) menu": {
      "name": "geo_loc_name (country) menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "Afghanistan": {
          "text": "Afghanistan",
          "meaning": "GAZ:00006882"
        },
        "Albania": {
          "text": "Albania",
          "meaning": "GAZ:00002953"
        },
        "Algeria": {
          "text": "Algeria",
          "meaning": "GAZ:00000563"
        },
        "American Samoa": {
          "text": "American Samoa",
          "meaning": "GAZ:00003957"
        },
        "Andorra": {
          "text": "Andorra",
          "meaning": "GAZ:00002948"
        },
        "Angola": {
          "text": "Angola",
          "meaning": "GAZ:00001095"
        },
        "Anguilla": {
          "text": "Anguilla",
          "meaning": "GAZ:00009159"
        },
        "Antarctica": {
          "text": "Antarctica",
          "meaning": "GAZ:00000462"
        },
        "Antigua and Barbuda": {
          "text": "Antigua and Barbuda",
          "meaning": "GAZ:00006883"
        },
        "Argentina": {
          "text": "Argentina",
          "meaning": "GAZ:00002928"
        },
        "Armenia": {
          "text": "Armenia",
          "meaning": "GAZ:00004094"
        },
        "Aruba": {
          "text": "Aruba",
          "meaning": "GAZ:00004025"
        },
        "Ashmore and Cartier Islands": {
          "text": "Ashmore and Cartier Islands",
          "meaning": "GAZ:00005901"
        },
        "Australia": {
          "text": "Australia",
          "meaning": "GAZ:00000463"
        },
        "Austria": {
          "text": "Austria",
          "meaning": "GAZ:00002942"
        },
        "Azerbaijan": {
          "text": "Azerbaijan",
          "meaning": "GAZ:00004941"
        },
        "Bahamas": {
          "text": "Bahamas",
          "meaning": "GAZ:00002733"
        },
        "Bahrain": {
          "text": "Bahrain",
          "meaning": "GAZ:00005281"
        },
        "Baker Island": {
          "text": "Baker Island",
          "meaning": "GAZ:00007117"
        },
        "Bangladesh": {
          "text": "Bangladesh",
          "meaning": "GAZ:00003750"
        },
        "Barbados": {
          "text": "Barbados",
          "meaning": "GAZ:00001251"
        },
        "Bassas da India": {
          "text": "Bassas da India",
          "meaning": "GAZ:00005810"
        },
        "Belarus": {
          "text": "Belarus",
          "meaning": "GAZ:00006886"
        },
        "Belgium": {
          "text": "Belgium",
          "meaning": "GAZ:00002938"
        },
        "Belize": {
          "text": "Belize",
          "meaning": "GAZ:00002934"
        },
        "Benin": {
          "text": "Benin",
          "meaning": "GAZ:00000904"
        },
        "Bermuda": {
          "text": "Bermuda",
          "meaning": "GAZ:00001264"
        },
        "Bhutan": {
          "text": "Bhutan",
          "meaning": "GAZ:00003920"
        },
        "Bolivia": {
          "text": "Bolivia",
          "meaning": "GAZ:00002511"
        },
        "Borneo": {
          "text": "Borneo",
          "meaning": "GAZ:00025355"
        },
        "Bosnia and Herzegovina": {
          "text": "Bosnia and Herzegovina",
          "meaning": "GAZ:00006887"
        },
        "Botswana": {
          "text": "Botswana",
          "meaning": "GAZ:00001097"
        },
        "Bouvet Island": {
          "text": "Bouvet Island",
          "meaning": "GAZ:00001453"
        },
        "Brazil": {
          "text": "Brazil",
          "meaning": "GAZ:00002828"
        },
        "British Virgin Islands": {
          "text": "British Virgin Islands",
          "meaning": "GAZ:00003961"
        },
        "Brunei": {
          "text": "Brunei",
          "meaning": "GAZ:00003901"
        },
        "Bulgaria": {
          "text": "Bulgaria",
          "meaning": "GAZ:00002950"
        },
        "Burkina Faso": {
          "text": "Burkina Faso",
          "meaning": "GAZ:00000905"
        },
        "Burundi": {
          "text": "Burundi",
          "meaning": "GAZ:00001090"
        },
        "Cambodia": {
          "text": "Cambodia",
          "meaning": "GAZ:00006888"
        },
        "Cameroon": {
          "text": "Cameroon",
          "meaning": "GAZ:00001093"
        },
        "Canada": {
          "text": "Canada",
          "meaning": "GAZ:00002560"
        },
        "Cape Verde": {
          "text": "Cape Verde",
          "meaning": "GAZ:00001227"
        },
        "Cayman Islands": {
          "text": "Cayman Islands",
          "meaning": "GAZ:00003986"
        },
        "Central African Republic": {
          "text": "Central African Republic",
          "meaning": "GAZ:00001089"
        },
        "Chad": {
          "text": "Chad",
          "meaning": "GAZ:00000586"
        },
        "Chile": {
          "text": "Chile",
          "meaning": "GAZ:00002825"
        },
        "China": {
          "text": "China",
          "meaning": "GAZ:00002845"
        },
        "Christmas Island": {
          "text": "Christmas Island",
          "meaning": "GAZ:00005915"
        },
        "Clipperton Island": {
          "text": "Clipperton Island",
          "meaning": "GAZ:00005838"
        },
        "Cocos Islands": {
          "text": "Cocos Islands",
          "meaning": "GAZ:00009721"
        },
        "Colombia": {
          "text": "Colombia",
          "meaning": "GAZ:00002929"
        },
        "Comoros": {
          "text": "Comoros",
          "meaning": "GAZ:00005820"
        },
        "Cook Islands": {
          "text": "Cook Islands",
          "meaning": "GAZ:00053798"
        },
        "Coral Sea Islands": {
          "text": "Coral Sea Islands",
          "meaning": "GAZ:00005917"
        },
        "Costa Rica": {
          "text": "Costa Rica",
          "meaning": "GAZ:00002901"
        },
        "Cote d'Ivoire": {
          "text": "Cote d'Ivoire",
          "meaning": "GAZ:00000906"
        },
        "Croatia": {
          "text": "Croatia",
          "meaning": "GAZ:00002719"
        },
        "Cuba": {
          "text": "Cuba",
          "meaning": "GAZ:00003762"
        },
        "Curacao": {
          "text": "Curacao",
          "meaning": "GAZ:00012582"
        },
        "Cyprus": {
          "text": "Cyprus",
          "meaning": "GAZ:00004006"
        },
        "Czech Republic": {
          "text": "Czech Republic",
          "meaning": "GAZ:00002954"
        },
        "Democratic Republic of the Congo": {
          "text": "Democratic Republic of the Congo",
          "meaning": "GAZ:00001086"
        },
        "Denmark": {
          "text": "Denmark",
          "meaning": "GAZ:00005852"
        },
        "Djibouti": {
          "text": "Djibouti",
          "meaning": "GAZ:00000582"
        },
        "Dominica": {
          "text": "Dominica",
          "meaning": "GAZ:00006890"
        },
        "Dominican Republic": {
          "text": "Dominican Republic",
          "meaning": "GAZ:00003952"
        },
        "Ecuador": {
          "text": "Ecuador",
          "meaning": "GAZ:00002912"
        },
        "Egypt": {
          "text": "Egypt",
          "meaning": "GAZ:00003934"
        },
        "El Salvador": {
          "text": "El Salvador",
          "meaning": "GAZ:00002935"
        },
        "Equatorial Guinea": {
          "text": "Equatorial Guinea",
          "meaning": "GAZ:00001091"
        },
        "Eritrea": {
          "text": "Eritrea",
          "meaning": "GAZ:00000581"
        },
        "Estonia": {
          "text": "Estonia",
          "meaning": "GAZ:00002959"
        },
        "Eswatini": {
          "text": "Eswatini",
          "meaning": "GAZ:00001099"
        },
        "Ethiopia": {
          "text": "Ethiopia",
          "meaning": "GAZ:00000567"
        },
        "Europa Island": {
          "text": "Europa Island",
          "meaning": "GAZ:00005811"
        },
        "Falkland Islands (Islas Malvinas)": {
          "text": "Falkland Islands (Islas Malvinas)",
          "meaning": "GAZ:00001412"
        },
        "Faroe Islands": {
          "text": "Faroe Islands",
          "meaning": "GAZ:00059206"
        },
        "Fiji": {
          "text": "Fiji",
          "meaning": "GAZ:00006891"
        },
        "Finland": {
          "text": "Finland",
          "meaning": "GAZ:00002937"
        },
        "France": {
          "text": "France",
          "meaning": "GAZ:00003940"
        },
        "French Guiana": {
          "text": "French Guiana",
          "meaning": "GAZ:00002516"
        },
        "French Polynesia": {
          "text": "French Polynesia",
          "meaning": "GAZ:00002918"
        },
        "French Southern and Antarctic Lands": {
          "text": "French Southern and Antarctic Lands",
          "meaning": "GAZ:00003753"
        },
        "Gabon": {
          "text": "Gabon",
          "meaning": "GAZ:00001092"
        },
        "Gambia": {
          "text": "Gambia",
          "meaning": "GAZ:00000907"
        },
        "Gaza Strip": {
          "text": "Gaza Strip",
          "meaning": "GAZ:00009571"
        },
        "Georgia": {
          "text": "Georgia",
          "meaning": "GAZ:00004942"
        },
        "Germany": {
          "text": "Germany",
          "meaning": "GAZ:00002646"
        },
        "Ghana": {
          "text": "Ghana",
          "meaning": "GAZ:00000908"
        },
        "Gibraltar": {
          "text": "Gibraltar",
          "meaning": "GAZ:00003987"
        },
        "Glorioso Islands": {
          "text": "Glorioso Islands",
          "meaning": "GAZ:00005808"
        },
        "Greece": {
          "text": "Greece",
          "meaning": "GAZ:00002945"
        },
        "Greenland": {
          "text": "Greenland",
          "meaning": "GAZ:00001507"
        },
        "Grenada": {
          "text": "Grenada",
          "meaning": "GAZ:02000573"
        },
        "Guadeloupe": {
          "text": "Guadeloupe",
          "meaning": "GAZ:00067142"
        },
        "Guam": {
          "text": "Guam",
          "meaning": "GAZ:00003706"
        },
        "Guatemala": {
          "text": "Guatemala",
          "meaning": "GAZ:00002936"
        },
        "Guernsey": {
          "text": "Guernsey",
          "meaning": "GAZ:00001550"
        },
        "Guinea": {
          "text": "Guinea",
          "meaning": "GAZ:00000909"
        },
        "Guinea-Bissau": {
          "text": "Guinea-Bissau",
          "meaning": "GAZ:00000910"
        },
        "Guyana": {
          "text": "Guyana",
          "meaning": "GAZ:00002522"
        },
        "Haiti": {
          "text": "Haiti",
          "meaning": "GAZ:00003953"
        },
        "Heard Island and McDonald Islands": {
          "text": "Heard Island and McDonald Islands",
          "meaning": "GAZ:00009718"
        },
        "Honduras": {
          "text": "Honduras",
          "meaning": "GAZ:00002894"
        },
        "Hong Kong": {
          "text": "Hong Kong",
          "meaning": "GAZ:00003203"
        },
        "Howland Island": {
          "text": "Howland Island",
          "meaning": "GAZ:00007120"
        },
        "Hungary": {
          "text": "Hungary",
          "meaning": "GAZ:00002952"
        },
        "Iceland": {
          "text": "Iceland",
          "meaning": "GAZ:00000843"
        },
        "India": {
          "text": "India",
          "meaning": "GAZ:00002839"
        },
        "Indonesia": {
          "text": "Indonesia",
          "meaning": "GAZ:00003727"
        },
        "Iran": {
          "text": "Iran",
          "meaning": "GAZ:00004474"
        },
        "Iraq": {
          "text": "Iraq",
          "meaning": "GAZ:00004483"
        },
        "Ireland": {
          "text": "Ireland",
          "meaning": "GAZ:00002943"
        },
        "Isle of Man": {
          "text": "Isle of Man",
          "meaning": "GAZ:00052477"
        },
        "Israel": {
          "text": "Israel",
          "meaning": "GAZ:00002476"
        },
        "Italy": {
          "text": "Italy",
          "meaning": "GAZ:00002650"
        },
        "Jamaica": {
          "text": "Jamaica",
          "meaning": "GAZ:00003781"
        },
        "Jan Mayen": {
          "text": "Jan Mayen",
          "meaning": "GAZ:00005853"
        },
        "Japan": {
          "text": "Japan",
          "meaning": "GAZ:00002747"
        },
        "Jarvis Island": {
          "text": "Jarvis Island",
          "meaning": "GAZ:00007118"
        },
        "Jersey": {
          "text": "Jersey",
          "meaning": "GAZ:00001551"
        },
        "Johnston Atoll": {
          "text": "Johnston Atoll",
          "meaning": "GAZ:00007114"
        },
        "Jordan": {
          "text": "Jordan",
          "meaning": "GAZ:00002473"
        },
        "Juan de Nova Island": {
          "text": "Juan de Nova Island",
          "meaning": "GAZ:00005809"
        },
        "Kazakhstan": {
          "text": "Kazakhstan",
          "meaning": "GAZ:00004999"
        },
        "Kenya": {
          "text": "Kenya",
          "meaning": "GAZ:00001101"
        },
        "Kerguelen Archipelago": {
          "text": "Kerguelen Archipelago",
          "meaning": "GAZ:00005682"
        },
        "Kingman Reef": {
          "text": "Kingman Reef",
          "meaning": "GAZ:00007116"
        },
        "Kiribati": {
          "text": "Kiribati",
          "meaning": "GAZ:00006894"
        },
        "Kosovo": {
          "text": "Kosovo",
          "meaning": "GAZ:00011337"
        },
        "Kuwait": {
          "text": "Kuwait",
          "meaning": "GAZ:00005285"
        },
        "Kyrgyzstan": {
          "text": "Kyrgyzstan",
          "meaning": "GAZ:00006893"
        },
        "Laos": {
          "text": "Laos",
          "meaning": "GAZ:00006889"
        },
        "Latvia": {
          "text": "Latvia",
          "meaning": "GAZ:00002958"
        },
        "Lebanon": {
          "text": "Lebanon",
          "meaning": "GAZ:00002478"
        },
        "Lesotho": {
          "text": "Lesotho",
          "meaning": "GAZ:00001098"
        },
        "Liberia": {
          "text": "Liberia",
          "meaning": "GAZ:00000911"
        },
        "Libya": {
          "text": "Libya",
          "meaning": "GAZ:00000566"
        },
        "Liechtenstein": {
          "text": "Liechtenstein",
          "meaning": "GAZ:00003858"
        },
        "Line Islands": {
          "text": "Line Islands",
          "meaning": "GAZ:00007144"
        },
        "Lithuania": {
          "text": "Lithuania",
          "meaning": "GAZ:00002960"
        },
        "Luxembourg": {
          "text": "Luxembourg",
          "meaning": "GAZ:00002947"
        },
        "Macau": {
          "text": "Macau",
          "meaning": "GAZ:00003202"
        },
        "Madagascar": {
          "text": "Madagascar",
          "meaning": "GAZ:00001108"
        },
        "Malawi": {
          "text": "Malawi",
          "meaning": "GAZ:00001105"
        },
        "Malaysia": {
          "text": "Malaysia",
          "meaning": "GAZ:00003902"
        },
        "Maldives": {
          "text": "Maldives",
          "meaning": "GAZ:00006924"
        },
        "Mali": {
          "text": "Mali",
          "meaning": "GAZ:00000584"
        },
        "Malta": {
          "text": "Malta",
          "meaning": "GAZ:00004017"
        },
        "Marshall Islands": {
          "text": "Marshall Islands",
          "meaning": "GAZ:00007161"
        },
        "Martinique": {
          "text": "Martinique",
          "meaning": "GAZ:00067143"
        },
        "Mauritania": {
          "text": "Mauritania",
          "meaning": "GAZ:00000583"
        },
        "Mauritius": {
          "text": "Mauritius",
          "meaning": "GAZ:00003745"
        },
        "Mayotte": {
          "text": "Mayotte",
          "meaning": "GAZ:00003943"
        },
        "Mexico": {
          "text": "Mexico",
          "meaning": "GAZ:00002852"
        },
        "Micronesia": {
          "text": "Micronesia",
          "meaning": "GAZ:00005862"
        },
        "Midway Islands": {
          "text": "Midway Islands",
          "meaning": "GAZ:00007112"
        },
        "Moldova": {
          "text": "Moldova",
          "meaning": "GAZ:00003897"
        },
        "Monaco": {
          "text": "Monaco",
          "meaning": "GAZ:00003857"
        },
        "Mongolia": {
          "text": "Mongolia",
          "meaning": "GAZ:00008744"
        },
        "Montenegro": {
          "text": "Montenegro",
          "meaning": "GAZ:00006898"
        },
        "Montserrat": {
          "text": "Montserrat",
          "meaning": "GAZ:00003988"
        },
        "Morocco": {
          "text": "Morocco",
          "meaning": "GAZ:00000565"
        },
        "Mozambique": {
          "text": "Mozambique",
          "meaning": "GAZ:00001100"
        },
        "Myanmar": {
          "text": "Myanmar",
          "meaning": "GAZ:00006899"
        },
        "Namibia": {
          "text": "Namibia",
          "meaning": "GAZ:00001096"
        },
        "Nauru": {
          "text": "Nauru",
          "meaning": "GAZ:00006900"
        },
        "Navassa Island": {
          "text": "Navassa Island",
          "meaning": "GAZ:00007119"
        },
        "Nepal": {
          "text": "Nepal",
          "meaning": "GAZ:00004399"
        },
        "Netherlands": {
          "text": "Netherlands",
          "meaning": "GAZ:00002946"
        },
        "New Caledonia": {
          "text": "New Caledonia",
          "meaning": "GAZ:00005206"
        },
        "New Zealand": {
          "text": "New Zealand",
          "meaning": "GAZ:00000469"
        },
        "Nicaragua": {
          "text": "Nicaragua",
          "meaning": "GAZ:00002978"
        },
        "Niger": {
          "text": "Niger",
          "meaning": "GAZ:00000585"
        },
        "Nigeria": {
          "text": "Nigeria",
          "meaning": "GAZ:00000912"
        },
        "Niue": {
          "text": "Niue",
          "meaning": "GAZ:00006902"
        },
        "Norfolk Island": {
          "text": "Norfolk Island",
          "meaning": "GAZ:00005908"
        },
        "North Korea": {
          "text": "North Korea",
          "meaning": "GAZ:00002801"
        },
        "North Macedonia": {
          "text": "North Macedonia",
          "meaning": "GAZ:00006895"
        },
        "North Sea": {
          "text": "North Sea",
          "meaning": "GAZ:00002284"
        },
        "Northern Mariana Islands": {
          "text": "Northern Mariana Islands",
          "meaning": "GAZ:00003958"
        },
        "Norway": {
          "text": "Norway",
          "meaning": "GAZ:00002699"
        },
        "Oman": {
          "text": "Oman",
          "meaning": "GAZ:00005283"
        },
        "Pakistan": {
          "text": "Pakistan",
          "meaning": "GAZ:00005246"
        },
        "Palau": {
          "text": "Palau",
          "meaning": "GAZ:00006905"
        },
        "Panama": {
          "text": "Panama",
          "meaning": "GAZ:00002892"
        },
        "Papua New Guinea": {
          "text": "Papua New Guinea",
          "meaning": "GAZ:00003922"
        },
        "Paracel Islands": {
          "text": "Paracel Islands",
          "meaning": "GAZ:00010832"
        },
        "Paraguay": {
          "text": "Paraguay",
          "meaning": "GAZ:00002933"
        },
        "Peru": {
          "text": "Peru",
          "meaning": "GAZ:00002932"
        },
        "Philippines": {
          "text": "Philippines",
          "meaning": "GAZ:00004525"
        },
        "Pitcairn Islands": {
          "text": "Pitcairn Islands",
          "meaning": "GAZ:00005867"
        },
        "Poland": {
          "text": "Poland",
          "meaning": "GAZ:00002939"
        },
        "Portugal": {
          "text": "Portugal",
          "meaning": "GAZ:00004126"
        },
        "Puerto Rico": {
          "text": "Puerto Rico",
          "meaning": "GAZ:00006935"
        },
        "Qatar": {
          "text": "Qatar",
          "meaning": "GAZ:00005286"
        },
        "Republic of the Congo": {
          "text": "Republic of the Congo",
          "meaning": "GAZ:00001088"
        },
        "Reunion": {
          "text": "Reunion",
          "meaning": "GAZ:00003945"
        },
        "Romania": {
          "text": "Romania",
          "meaning": "GAZ:00002951"
        },
        "Ross Sea": {
          "text": "Ross Sea",
          "meaning": "GAZ:00023304"
        },
        "Russia": {
          "text": "Russia",
          "meaning": "GAZ:00002721"
        },
        "Rwanda": {
          "text": "Rwanda",
          "meaning": "GAZ:00001087"
        },
        "Saint Helena": {
          "text": "Saint Helena",
          "meaning": "GAZ:00000849"
        },
        "Saint Kitts and Nevis": {
          "text": "Saint Kitts and Nevis",
          "meaning": "GAZ:00006906"
        },
        "Saint Lucia": {
          "text": "Saint Lucia",
          "meaning": "GAZ:00006909"
        },
        "Saint Pierre and Miquelon": {
          "text": "Saint Pierre and Miquelon",
          "meaning": "GAZ:00003942"
        },
        "Saint Martin": {
          "text": "Saint Martin",
          "meaning": "GAZ:00005841"
        },
        "Saint Vincent and the Grenadines": {
          "text": "Saint Vincent and the Grenadines",
          "meaning": "GAZ:02000565"
        },
        "Samoa": {
          "text": "Samoa",
          "meaning": "GAZ:00006910"
        },
        "San Marino": {
          "text": "San Marino",
          "meaning": "GAZ:00003102"
        },
        "Sao Tome and Principe": {
          "text": "Sao Tome and Principe",
          "meaning": "GAZ:00006927"
        },
        "Saudi Arabia": {
          "text": "Saudi Arabia",
          "meaning": "GAZ:00005279"
        },
        "Senegal": {
          "text": "Senegal",
          "meaning": "GAZ:00000913"
        },
        "Serbia": {
          "text": "Serbia",
          "meaning": "GAZ:00002957"
        },
        "Seychelles": {
          "text": "Seychelles",
          "meaning": "GAZ:00006922"
        },
        "Sierra Leone": {
          "text": "Sierra Leone",
          "meaning": "GAZ:00000914"
        },
        "Singapore": {
          "text": "Singapore",
          "meaning": "GAZ:00003923"
        },
        "Sint Maarten": {
          "text": "Sint Maarten",
          "meaning": "GAZ:00012579"
        },
        "Slovakia": {
          "text": "Slovakia",
          "meaning": "GAZ:00002956"
        },
        "Slovenia": {
          "text": "Slovenia",
          "meaning": "GAZ:00002955"
        },
        "Solomon Islands": {
          "text": "Solomon Islands",
          "meaning": "GAZ:00005275"
        },
        "Somalia": {
          "text": "Somalia",
          "meaning": "GAZ:00001104"
        },
        "South Africa": {
          "text": "South Africa",
          "meaning": "GAZ:00001094"
        },
        "South Georgia and the South Sandwich Islands": {
          "text": "South Georgia and the South Sandwich Islands",
          "meaning": "GAZ:00003990"
        },
        "South Korea": {
          "text": "South Korea",
          "meaning": "GAZ:00002802"
        },
        "South Sudan": {
          "text": "South Sudan",
          "meaning": "GAZ:00233439"
        },
        "Spain": {
          "text": "Spain",
          "meaning": "GAZ:00000591"
        },
        "Spratly Islands": {
          "text": "Spratly Islands",
          "meaning": "GAZ:00010831"
        },
        "Sri Lanka": {
          "text": "Sri Lanka",
          "meaning": "GAZ:00003924"
        },
        "State of Palestine": {
          "text": "State of Palestine",
          "meaning": "GAZ:00002475"
        },
        "Sudan": {
          "text": "Sudan",
          "meaning": "GAZ:00000560"
        },
        "Suriname": {
          "text": "Suriname",
          "meaning": "GAZ:00002525"
        },
        "Svalbard": {
          "text": "Svalbard",
          "meaning": "GAZ:00005396"
        },
        "Swaziland": {
          "text": "Swaziland",
          "meaning": "GAZ:00001099"
        },
        "Sweden": {
          "text": "Sweden",
          "meaning": "GAZ:00002729"
        },
        "Switzerland": {
          "text": "Switzerland",
          "meaning": "GAZ:00002941"
        },
        "Syria": {
          "text": "Syria",
          "meaning": "GAZ:00002474"
        },
        "Taiwan": {
          "text": "Taiwan",
          "meaning": "GAZ:00005341"
        },
        "Tajikistan": {
          "text": "Tajikistan",
          "meaning": "GAZ:00006912"
        },
        "Tanzania": {
          "text": "Tanzania",
          "meaning": "GAZ:00001103"
        },
        "Thailand": {
          "text": "Thailand",
          "meaning": "GAZ:00003744"
        },
        "Timor-Leste": {
          "text": "Timor-Leste",
          "meaning": "GAZ:00006913"
        },
        "Togo": {
          "text": "Togo",
          "meaning": "GAZ:00000915"
        },
        "Tokelau": {
          "text": "Tokelau",
          "meaning": "GAZ:00260188"
        },
        "Tonga": {
          "text": "Tonga",
          "meaning": "GAZ:00006916"
        },
        "Trinidad and Tobago": {
          "text": "Trinidad and Tobago",
          "meaning": "GAZ:00003767"
        },
        "Tromelin Island": {
          "text": "Tromelin Island",
          "meaning": "GAZ:00005812"
        },
        "Tunisia": {
          "text": "Tunisia",
          "meaning": "GAZ:00000562"
        },
        "Turkey": {
          "text": "Turkey",
          "meaning": "GAZ:00000558"
        },
        "Turkmenistan": {
          "text": "Turkmenistan",
          "meaning": "GAZ:00005018"
        },
        "Turks and Caicos Islands": {
          "text": "Turks and Caicos Islands",
          "meaning": "GAZ:00003955"
        },
        "Tuvalu": {
          "text": "Tuvalu",
          "meaning": "GAZ:00009715"
        },
        "United States of America": {
          "text": "United States of America",
          "meaning": "GAZ:00002459"
        },
        "Uganda": {
          "text": "Uganda",
          "meaning": "GAZ:00001102"
        },
        "Ukraine": {
          "text": "Ukraine",
          "meaning": "GAZ:00002724"
        },
        "United Arab Emirates": {
          "text": "United Arab Emirates",
          "meaning": "GAZ:00005282"
        },
        "United Kingdom": {
          "text": "United Kingdom",
          "meaning": "GAZ:00002637"
        },
        "Uruguay": {
          "text": "Uruguay",
          "meaning": "GAZ:00002930"
        },
        "Uzbekistan": {
          "text": "Uzbekistan",
          "meaning": "GAZ:00004979"
        },
        "Vanuatu": {
          "text": "Vanuatu",
          "meaning": "GAZ:00006918"
        },
        "Venezuela": {
          "text": "Venezuela",
          "meaning": "GAZ:00002931"
        },
        "Viet Nam": {
          "text": "Viet Nam",
          "meaning": "GAZ:00003756"
        },
        "Virgin Islands": {
          "text": "Virgin Islands",
          "meaning": "GAZ:00003959"
        },
        "Wake Island": {
          "text": "Wake Island",
          "meaning": "GAZ:00007111"
        },
        "Wallis and Futuna": {
          "text": "Wallis and Futuna",
          "meaning": "GAZ:00007191"
        },
        "West Bank": {
          "text": "West Bank",
          "meaning": "GAZ:00009572"
        },
        "Western Sahara": {
          "text": "Western Sahara",
          "meaning": "GAZ:00000564"
        },
        "Yemen": {
          "text": "Yemen",
          "meaning": "GAZ:00005284"
        },
        "Zambia": {
          "text": "Zambia",
          "meaning": "GAZ:00001107"
        },
        "Zimbabwe": {
          "text": "Zimbabwe",
          "meaning": "GAZ:00001106"
        }
      }
    },
    "geo_loc_name (state/province/territory) menu": {
      "name": "geo_loc_name (state/province/territory) menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "Alberta": {
          "text": "Alberta",
          "meaning": "GAZ:00002566"
        },
        "British Columbia": {
          "text": "British Columbia",
          "meaning": "GAZ:00002562"
        },
        "Manitoba": {
          "text": "Manitoba",
          "meaning": "GAZ:00002571"
        },
        "New Brunswick": {
          "text": "New Brunswick",
          "meaning": "GAZ:00002570"
        },
        "Newfoundland and Labrador": {
          "text": "Newfoundland and Labrador",
          "meaning": "GAZ:00002567"
        },
        "Northwest Territories": {
          "text": "Northwest Territories",
          "meaning": "GAZ:00002575"
        },
        "Nova Scotia": {
          "text": "Nova Scotia",
          "meaning": "GAZ:00002565"
        },
        "Nunavut": {
          "text": "Nunavut",
          "meaning": "GAZ:00002574"
        },
        "Ontario": {
          "text": "Ontario",
          "meaning": "GAZ:00002563"
        },
        "Prince Edward Island": {
          "text": "Prince Edward Island",
          "meaning": "GAZ:00002572"
        },
        "Quebec": {
          "text": "Quebec",
          "meaning": "GAZ:00002569"
        },
        "Saskatchewan": {
          "text": "Saskatchewan",
          "meaning": "GAZ:00002564"
        },
        "Yukon": {
          "text": "Yukon",
          "meaning": "GAZ:00002576"
        }
      }
    },
    "watershed shapefile availability menu": {
      "name": "watershed shapefile availability menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "available": {
          "text": "available",
          "meaning": "GENEPIO:0100993"
        },
        "unavailable": {
          "text": "unavailable",
          "meaning": "GENEPIO:0100994"
        },
        "unknown": {
          "text": "unknown",
          "meaning": "GENEPIO:0100995"
        }
      }
    },
    "organism menu": {
      "name": "organism menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "Severe acute respiratory syndrome coronavirus 2": {
          "text": "Severe acute respiratory syndrome coronavirus 2",
          "meaning": "NCBITaxon:2697049"
        }
      }
    },
    "purpose of sampling menu": {
      "name": "purpose of sampling menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "Wastewater treatment efficiency assessment": {
          "text": "Wastewater treatment efficiency assessment",
          "meaning": "GENEPIO:0100869"
        },
        "Wastewater chemical surveillance": {
          "text": "Wastewater chemical surveillance",
          "meaning": "GENEPIO:0100870"
        },
        "Wastewater drug surveillance": {
          "text": "Wastewater drug surveillance",
          "meaning": "GENEPIO:0100871"
        },
        "Wastewater pathogen surveillance": {
          "text": "Wastewater pathogen surveillance",
          "meaning": "GENEPIO:0100872"
        },
        "Research": {
          "text": "Research",
          "meaning": "GENEPIO:0100003"
        },
        "Environmental survey (profiling)": {
          "text": "Environmental survey (profiling)",
          "meaning": "GENEPIO:0100873",
          "is_a": "Research"
        },
        "Protocol testing": {
          "text": "Protocol testing",
          "meaning": "GENEPIO:0100024",
          "is_a": "Research"
        }
      }
    },
    "scale of sampling menu": {
      "name": "scale of sampling menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "Community-level surveillance": {
          "text": "Community-level surveillance",
          "meaning": "GENEPIO:0100874"
        },
        "Institution-level surveillance": {
          "text": "Institution-level surveillance",
          "meaning": "GENEPIO:0100875"
        },
        "Building-level surveillance": {
          "text": "Building-level surveillance",
          "meaning": "GENEPIO:0100876"
        }
      }
    },
    "sample collection time of day menu": {
      "name": "sample collection time of day menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "Morning": {
          "text": "Morning",
          "meaning": "NCIT:C64934"
        },
        "Afternoon": {
          "text": "Afternoon",
          "meaning": "NCIT:C64935"
        },
        "Evening": {
          "text": "Evening",
          "meaning": "NCIT:C64936"
        },
        "Night": {
          "text": "Night",
          "meaning": "NCIT:C65001"
        }
      }
    },
    "sample collection duration unit menu": {
      "name": "sample collection duration unit menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "Second": {
          "text": "Second",
          "meaning": "UO:0000010"
        },
        "Minute": {
          "text": "Minute",
          "meaning": "UO:0000031"
        },
        "Hour": {
          "text": "Hour",
          "meaning": "UO:0000032"
        },
        "Day": {
          "text": "Day",
          "meaning": "UO:0000033"
        },
        "Week": {
          "text": "Week",
          "meaning": "UO:0000034"
        },
        "Month": {
          "text": "Month",
          "meaning": "UO:0000035"
        },
        "Year": {
          "text": "Year",
          "meaning": "UO:0000036"
        }
      }
    },
    "presampling activity menu": {
      "name": "presampling activity menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "Agricultural activity": {
          "text": "Agricultural activity",
          "meaning": "ENVO:01001442"
        },
        "Animal husbandry": {
          "text": "Animal husbandry",
          "meaning": "ENVO:01001248"
        },
        "Industrial activity": {
          "text": "Industrial activity",
          "meaning": "ENVO:01001450"
        },
        "Healthcare activity": {
          "text": "Healthcare activity",
          "meaning": "NCIT:C16205"
        },
        "Wastewater treatment": {
          "text": "Wastewater treatment",
          "meaning": "ENVO:06105300"
        },
        "Wastewater filtration": {
          "text": "Wastewater filtration",
          "meaning": "GENEPIO:0100881",
          "is_a": "Wastewater treatment"
        },
        "Wastewater grit removal": {
          "text": "Wastewater grit removal",
          "meaning": "GENEPIO:0100882",
          "is_a": "Wastewater treatment"
        },
        "Wastewater microbial pre-treatment": {
          "text": "Wastewater microbial pre-treatment",
          "meaning": "GENEPIO:0100883",
          "is_a": "Wastewater treatment"
        },
        "Wastewater primary sedimentation": {
          "text": "Wastewater primary sedimentation",
          "meaning": "GENEPIO:0100884",
          "is_a": "Wastewater treatment"
        },
        "Wastewater secondary sedimentation": {
          "text": "Wastewater secondary sedimentation",
          "meaning": "GENEPIO:0100885",
          "is_a": "Wastewater treatment"
        }
      }
    },
    "sample volume measurement unit menu": {
      "name": "sample volume measurement unit menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "microliter (uL)": {
          "text": "microliter (uL)",
          "meaning": "UO:0000101"
        },
        "milliliter (mL)": {
          "text": "milliliter (mL)",
          "meaning": "UO:0000098"
        },
        "liter (L)": {
          "text": "liter (L)",
          "meaning": "UO:0000099"
        }
      }
    },
    "sample storage duration unit menu": {
      "name": "sample storage duration unit menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "Second": {
          "text": "Second",
          "meaning": "UO:0000010"
        },
        "Minute": {
          "text": "Minute",
          "meaning": "UO:0000031"
        },
        "Hour": {
          "text": "Hour",
          "meaning": "UO:0000032"
        },
        "Day": {
          "text": "Day",
          "meaning": "UO:0000033"
        },
        "Week": {
          "text": "Week",
          "meaning": "UO:0000034"
        },
        "Month": {
          "text": "Month",
          "meaning": "UO:0000035"
        },
        "Year": {
          "text": "Year",
          "meaning": "UO:0000036"
        }
      }
    },
    "specimen processing menu": {
      "name": "specimen processing menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "Concentration": {
          "text": "Concentration",
          "meaning": "OBI:0600041"
        },
        "Centrifugation": {
          "text": "Centrifugation",
          "meaning": "OBI:0302886"
        },
        "Filtration": {
          "text": "Filtration",
          "meaning": "OBI:0302885"
        },
        "Flocculation": {
          "text": "Flocculation",
          "meaning": "NCIT:C154798"
        },
        "Magnetic nanobead binding": {
          "text": "Magnetic nanobead binding",
          "meaning": "GENEPIO:0100886"
        },
        "Precipitation": {
          "text": "Precipitation",
          "meaning": "OBI:0600034"
        },
        "Gravity separation": {
          "text": "Gravity separation"
        },
        "Pasteurization": {
          "text": "Pasteurization",
          "meaning": "IDO:0100170"
        },
        "Growth in enrichment broth": {
          "text": "Growth in enrichment broth"
        },
        "Specimens pooled": {
          "text": "Specimens pooled",
          "meaning": "OBI:0600016"
        },
        "Technical replicate": {
          "text": "Technical replicate",
          "meaning": "EFO:0002090"
        },
        "Biological replicate": {
          "text": "Biological replicate",
          "meaning": "EFO:0002091"
        }
      }
    },
    "environmental site menu": {
      "name": "environmental site menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "Correctional facility": {
          "text": "Correctional facility",
          "meaning": "ENVO:01001481"
        },
        "Healthcare facility": {
          "text": "Healthcare facility",
          "meaning": "ENVO:03501134"
        },
        "Hospital": {
          "text": "Hospital",
          "meaning": "ENVO:00002173",
          "is_a": "Healthcare facility"
        },
        "Clinic": {
          "text": "Clinic",
          "meaning": "ENVO:03501182",
          "is_a": "Healthcare facility"
        },
        "Educational facility": {
          "text": "Educational facility",
          "meaning": "ENVO:03501129"
        },
        "Daycare facility": {
          "text": "Daycare facility",
          "meaning": "ENVO:03501335",
          "is_a": "Educational facility"
        },
        "School": {
          "text": "School",
          "meaning": "ENVO:03501130",
          "is_a": "Educational facility"
        },
        "College or university": {
          "text": "College or university",
          "meaning": "ENVO:03501131",
          "is_a": "Educational facility"
        },
        "Residential building": {
          "text": "Residential building",
          "meaning": "ENVO:01000933"
        },
        "Homeless shelter": {
          "text": "Homeless shelter",
          "meaning": "ENVO:03501133",
          "is_a": "Residential building"
        },
        "Long-term care facility": {
          "text": "Long-term care facility",
          "meaning": "ENVO:01000932",
          "is_a": "Residential building"
        },
        "Transport hub": {
          "text": "Transport hub",
          "meaning": "ENVO:03501117"
        },
        "Airport": {
          "text": "Airport",
          "meaning": "ENVO:03501122",
          "is_a": "Transport hub"
        },
        "Farm": {
          "text": "Farm",
          "meaning": "ENVO:00000078"
        },
        "Refugee camp": {
          "text": "Refugee camp",
          "meaning": "NCIT:C85867"
        },
        "Industrial plant": {
          "text": "Industrial plant",
          "meaning": "ENVO:00003861"
        },
        "Meat processing plant": {
          "text": "Meat processing plant",
          "meaning": "ENVO:03501297",
          "is_a": "Industrial plant"
        },
        "Pharmaceutical manufacturing plant": {
          "text": "Pharmaceutical manufacturing plant",
          "meaning": "GENEPIO:0100887",
          "is_a": "Industrial plant"
        },
        "Body of water": {
          "text": "Body of water",
          "meaning": "ENVO:00000063"
        },
        "Surface water": {
          "text": "Surface water",
          "meaning": "ENVO:00002042",
          "is_a": "Body of water"
        },
        "Lake": {
          "text": "Lake",
          "meaning": "ENVO:00000020",
          "is_a": "Surface water"
        },
        "Stream": {
          "text": "Stream",
          "meaning": "ENVO:00000023",
          "is_a": "Surface water"
        },
        "River": {
          "text": "River",
          "meaning": "ENVO:00000022",
          "is_a": "Stream"
        },
        "Ocean": {
          "text": "Ocean",
          "meaning": "ENVO:00000015",
          "is_a": "Surface water"
        },
        "Sea": {
          "text": "Sea",
          "meaning": "ENVO:00000016",
          "is_a": "Surface water"
        },
        "Canal": {
          "text": "Canal",
          "meaning": "ENVO:00000014",
          "is_a": "Surface water"
        },
        "Reservoir": {
          "text": "Reservoir",
          "meaning": "ENVO:00000025",
          "is_a": "Surface water"
        },
        "Ground water": {
          "text": "Ground water",
          "meaning": "ENVO:01001004",
          "is_a": "Body of water"
        },
        "Well": {
          "text": "Well",
          "meaning": "ENVO:00000026",
          "is_a": "Ground water"
        },
        "Spring": {
          "text": "Spring",
          "meaning": "ENVO:00000027",
          "is_a": "Ground water"
        },
        "Transportation vehicle": {
          "text": "Transportation vehicle",
          "meaning": "ENVO:01000604"
        },
        "Boat": {
          "text": "Boat",
          "meaning": "ENVO:01000608",
          "is_a": "Transportation vehicle"
        },
        "Airplane": {
          "text": "Airplane",
          "meaning": "ENVO:03501349",
          "is_a": "Transportation vehicle"
        },
        "Wastewater treatment plant": {
          "text": "Wastewater treatment plant",
          "meaning": "ENVO:00002272"
        }
      }
    },
    "environmental material menu": {
      "name": "environmental material menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "Surface water": {
          "text": "Surface water",
          "meaning": "ENVO:00002042"
        },
        "Waste water": {
          "text": "Waste water",
          "meaning": "ENVO:00002001"
        },
        "Wastewater sediment": {
          "text": "Wastewater sediment",
          "meaning": "GENEPIO:0100890"
        },
        "Sludge": {
          "text": "Sludge",
          "meaning": "ENVO:00002044"
        },
        "Primary sludge": {
          "text": "Primary sludge",
          "meaning": "ENVO:00002057",
          "is_a": "Sludge"
        },
        "Secondary sludge": {
          "text": "Secondary sludge",
          "meaning": "ENVO:00002058",
          "is_a": "Sludge"
        },
        "Wastewater effluent": {
          "text": "Wastewater effluent",
          "meaning": "GENEPIO:0100891"
        },
        "Primary wastewater effluent": {
          "text": "Primary wastewater effluent",
          "meaning": "GENEPIO:0100892",
          "is_a": "Wastewater effluent"
        },
        "Secondary wastewater effluent": {
          "text": "Secondary wastewater effluent",
          "meaning": "GENEPIO:0100893",
          "is_a": "Wastewater effluent"
        },
        "Treated wastewater": {
          "text": "Treated wastewater",
          "meaning": "ENVO:06105268"
        }
      }
    },
    "environmental material properties menu": {
      "name": "environmental material properties menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "Stagnant": {
          "text": "Stagnant"
        },
        "Slow-flowing": {
          "text": "Slow-flowing"
        },
        "Fast-flowing": {
          "text": "Fast-flowing"
        },
        "Contamination": {
          "text": "Contamination",
          "meaning": "PATO:0015031"
        },
        "Fecal-contaminated": {
          "text": "Fecal-contaminated",
          "is_a": "Contamination"
        },
        "Liquid": {
          "text": "Liquid",
          "meaning": "PATO:0001735"
        },
        "Slurry": {
          "text": "Slurry",
          "meaning": "ENVO:03600017"
        },
        "Pumpable": {
          "text": "Pumpable"
        },
        "Semi-solid": {
          "text": "Semi-solid",
          "meaning": "NCIT:C149895"
        },
        "Spadeable": {
          "text": "Spadeable"
        },
        "Solid": {
          "text": "Solid",
          "meaning": "NCIT:C45300"
        },
        "Treated": {
          "text": "Treated"
        },
        "Untreated": {
          "text": "Untreated"
        }
      }
    },
    "wastewater system type menu": {
      "name": "wastewater system type menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "Sewered sanitation system": {
          "text": "Sewered sanitation system"
        },
        "Combined sewer system": {
          "text": "Combined sewer system",
          "is_a": "Sewered sanitation system"
        },
        "Sanitary sewer system": {
          "text": "Sanitary sewer system",
          "is_a": "Sewered sanitation system"
        },
        "Waste stabilization lagoon": {
          "text": "Waste stabilization lagoon",
          "is_a": "Sewered sanitation system"
        },
        "Non-sewered sanitation system": {
          "text": "Non-sewered sanitation system"
        },
        "Latrine": {
          "text": "Latrine",
          "meaning": "ENVO:01000519",
          "is_a": "Non-sewered sanitation system"
        },
        "Septic tank": {
          "text": "Septic tank",
          "is_a": "Non-sewered sanitation system"
        },
        "Cesspit": {
          "text": "Cesspit",
          "is_a": "Non-sewered sanitation system"
        },
        "Composting toilet": {
          "text": "Composting toilet",
          "meaning": "ENVO:01000550",
          "is_a": "Non-sewered sanitation system"
        },
        "Waste tank": {
          "text": "Waste tank",
          "is_a": "Non-sewered sanitation system"
        },
        "Drainage channel": {
          "text": "Drainage channel",
          "meaning": "ENVO:01000924",
          "is_a": "Non-sewered sanitation system"
        }
      }
    },
    "experimental control type menu": {
      "name": "experimental control type menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "Positive experimental control": {
          "text": "Positive experimental control",
          "meaning": "NCIT:C64356"
        },
        "Negative experimental control": {
          "text": "Negative experimental control",
          "meaning": "NCIT:C64357"
        }
      }
    },
    "collection device menu": {
      "name": "collection device menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "Grab sampler": {
          "text": "Grab sampler",
          "meaning": "GENEPIO:0100941"
        },
        "Core sampling device": {
          "text": "Core sampling device",
          "meaning": "GENEPIO:0100943",
          "is_a": "Grab sampler"
        },
        "Vacuum sludge sampling device": {
          "text": "Vacuum sludge sampling device",
          "meaning": "GENEPIO:0100944",
          "is_a": "Grab sampler"
        },
        "Cone-shaped sampling device": {
          "text": "Cone-shaped sampling device",
          "meaning": "GENEPIO:0100945",
          "is_a": "Grab sampler"
        },
        "Horizontal grab sampling device": {
          "text": "Horizontal grab sampling device",
          "meaning": "GENEPIO:0100946",
          "is_a": "Grab sampler"
        },
        "Vertical grab sampling device": {
          "text": "Vertical grab sampling device",
          "meaning": "GENEPIO:0100947",
          "is_a": "Grab sampler"
        },
        "Composite sampler": {
          "text": "Composite sampler",
          "meaning": "GENEPIO:0100942"
        },
        "Passive (trap) sampler": {
          "text": "Passive (trap) sampler",
          "meaning": "GENEPIO:0100948",
          "is_a": "Composite sampler"
        },
        "Moore swab": {
          "text": "Moore swab",
          "meaning": "GENEPIO:0100949",
          "is_a": "Passive (trap) sampler"
        },
        "Automatic composite sampler": {
          "text": "Automatic composite sampler",
          "meaning": "GENEPIO:0100950",
          "is_a": "Composite sampler"
        },
        "Automatic flow-proportional sampler": {
          "text": "Automatic flow-proportional sampler",
          "meaning": "GENEPIO:0100951",
          "is_a": "Automatic composite sampler"
        },
        "Automatic sequential (time-proportional) sampler": {
          "text": "Automatic sequential (time-proportional) sampler",
          "meaning": "GENEPIO:0100952",
          "is_a": "Automatic composite sampler"
        }
      }
    },
    "collection method menu": {
      "name": "collection method menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "Grab sampling": {
          "text": "Grab sampling",
          "meaning": "GENEPIO:0100953"
        },
        "Composite sampling": {
          "text": "Composite sampling",
          "meaning": "GENEPIO:0100954"
        },
        "Passive composite sampling": {
          "text": "Passive composite sampling",
          "meaning": "GENEPIO:0100955",
          "is_a": "Composite sampling"
        },
        "Automatic composite sampling": {
          "text": "Automatic composite sampling",
          "meaning": "GENEPIO:0100956",
          "is_a": "Composite sampling"
        },
        "Manual composite sampling": {
          "text": "Manual composite sampling",
          "meaning": "GENEPIO:0100957",
          "is_a": "Composite sampling"
        }
      }
    },
    "water catchment area human population range menu": {
      "name": "water catchment area human population range menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "<10 people": {
          "text": "<10 people"
        },
        "10 - 100 people": {
          "text": "10 - 100 people"
        },
        "100 - 1,000 people": {
          "text": "100 - 1,000 people"
        },
        "1,000 - 10,000 people": {
          "text": "1,000 - 10,000 people"
        },
        "10,000 - 100,000 people": {
          "text": "10,000 - 100,000 people"
        },
        "100,000 -  1,000,000 people": {
          "text": "100,000 -  1,000,000 people"
        },
        "1,000,000+ people": {
          "text": "1,000,000+ people"
        }
      }
    },
    "water catchment area human population density unit menu": {
      "name": "water catchment area human population density unit menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "persons per square mile (?? / sq mi)": {
          "text": "persons per square mile (?? / sq mi)"
        },
        "person for square kilometer": {
          "text": "person for square kilometer"
        },
        "resident per square mile": {
          "text": "resident per square mile"
        },
        "residential per square kilometer": {
          "text": "residential per square kilometer"
        }
      }
    },
    "populated area type menu": {
      "name": "populated area type menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "suburban": {
          "text": "suburban",
          "meaning": "GSSO:011077"
        },
        "rural": {
          "text": "rural",
          "meaning": "GSSO:011078"
        },
        "urban": {
          "text": "urban",
          "meaning": "GSSO:011080"
        }
      }
    },
    "sampling weather conditions menu": {
      "name": "sampling weather conditions menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "Cloudy/Overcast": {
          "text": "Cloudy/Overcast",
          "meaning": "ENVO:03501418"
        },
        "Partially cloudy": {
          "text": "Partially cloudy",
          "meaning": "ENVO:03501419",
          "is_a": "Cloudy/Overcast"
        },
        "Drizzle": {
          "text": "Drizzle",
          "meaning": "ENVO:03501420"
        },
        "Fog": {
          "text": "Fog",
          "meaning": "ENVO:01000844"
        },
        "Rain": {
          "text": "Rain",
          "meaning": "ENVO:01001564"
        },
        "Snow": {
          "text": "Snow",
          "meaning": "ENVO:01000406"
        },
        "Storm": {
          "text": "Storm",
          "meaning": "ENVO:01000876"
        },
        "Sunny/Clear": {
          "text": "Sunny/Clear",
          "meaning": "ENVO:03501421"
        }
      }
    },
    "presampling weather conditions menu": {
      "name": "presampling weather conditions menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "Cloudy/Overcast": {
          "text": "Cloudy/Overcast",
          "meaning": "ENVO:03501418"
        },
        "Partially cloudy": {
          "text": "Partially cloudy",
          "meaning": "ENVO:03501419",
          "is_a": "Cloudy/Overcast"
        },
        "Drizzle": {
          "text": "Drizzle",
          "meaning": "ENVO:03501420"
        },
        "Fog": {
          "text": "Fog",
          "meaning": "ENVO:01000844"
        },
        "Rain": {
          "text": "Rain",
          "meaning": "ENVO:01001564"
        },
        "Snow": {
          "text": "Snow",
          "meaning": "ENVO:01000406"
        },
        "Storm": {
          "text": "Storm",
          "meaning": "ENVO:01000876"
        },
        "Sunny/Clear": {
          "text": "Sunny/Clear",
          "meaning": "ENVO:03501421"
        }
      }
    },
    "precipitation measurement unit menu": {
      "name": "precipitation measurement unit menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "millimeter (mm)": {
          "text": "millimeter (mm)",
          "meaning": "UO:0000016"
        },
        "meter (m)": {
          "text": "meter (m)",
          "meaning": "UO:0000008"
        },
        "inch (in)": {
          "text": "inch (in)",
          "meaning": "UO:0010011"
        },
        "foot (ft)": {
          "text": "foot (ft)",
          "meaning": "UO:0010013"
        }
      }
    },
    "air pressure measurement unit menu": {
      "name": "air pressure measurement unit menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "atmosphere (atm)": {
          "text": "atmosphere (atm)",
          "meaning": "EFO:0005212"
        },
        "bar": {
          "text": "bar"
        },
        "pascal": {
          "text": "pascal",
          "meaning": "UO:0000110"
        }
      }
    },
    "ambient temperature measurement unit menu": {
      "name": "ambient temperature measurement unit menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "degree Fahrenheit (F)": {
          "text": "degree Fahrenheit (F)",
          "meaning": "UO:0000195"
        },
        "degree Celsius (C)": {
          "text": "degree Celsius (C)",
          "meaning": "UO:0000027"
        }
      }
    },
    "total daily flow rate measurement unit menu": {
      "name": "total daily flow rate measurement unit menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "cubic meter per second (m^3/s)": {
          "text": "cubic meter per second (m^3/s)",
          "meaning": "NCIT:C69159"
        },
        "cubic meter per minute (m^3/min)": {
          "text": "cubic meter per minute (m^3/min)"
        },
        "cubic meter per hour (m^3/h)": {
          "text": "cubic meter per hour (m^3/h)"
        },
        "liter per second (L/s)": {
          "text": "liter per second (L/s)",
          "meaning": "NCIT:C67390"
        },
        "liter per minute (L/min)": {
          "text": "liter per minute (L/min)",
          "meaning": "NCIT:C67388"
        },
        "liter per hour (L/h)": {
          "text": "liter per hour (L/h)",
          "meaning": "NCIT:C69160"
        },
        "liter per day (L/day)": {
          "text": "liter per day (L/day)",
          "meaning": "NCIT:C69110"
        },
        "million gallons per day (MGD)": {
          "text": "million gallons per day (MGD)"
        }
      }
    },
    "instantaneous daily flow rate measurement unit menu": {
      "name": "instantaneous daily flow rate measurement unit menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "cubic meter per second (m^3/s)": {
          "text": "cubic meter per second (m^3/s)",
          "meaning": "NCIT:C69159"
        },
        "cubic meter per minute (m^3/min)": {
          "text": "cubic meter per minute (m^3/min)"
        },
        "cubic meter per hour (m^3/h)": {
          "text": "cubic meter per hour (m^3/h)"
        },
        "liter per second (L/s)": {
          "text": "liter per second (L/s)",
          "meaning": "NCIT:C67390"
        },
        "liter per minute (L/min)": {
          "text": "liter per minute (L/min)",
          "meaning": "NCIT:C67388"
        },
        "liter per hour (L/h)": {
          "text": "liter per hour (L/h)",
          "meaning": "NCIT:C69160"
        },
        "liter per day (L/day)": {
          "text": "liter per day (L/day)",
          "meaning": "NCIT:C69110"
        },
        "million gallons per day (MGD)": {
          "text": "million gallons per day (MGD)"
        }
      }
    },
    "turbidity measurement unit menu": {
      "name": "turbidity measurement unit menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "nephelometric turbidity unit (NTU)": {
          "text": "nephelometric turbidity unit (NTU)"
        },
        "formazin nephelometric unit (FNU)": {
          "text": "formazin nephelometric unit (FNU)",
          "meaning": "UO:0000318"
        }
      }
    },
    "dissolved oxygen measurement unit menu": {
      "name": "dissolved oxygen measurement unit menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "milligram per liter (mg/L)": {
          "text": "milligram per liter (mg/L)",
          "meaning": "UO:0000273"
        },
        "kilogram per cubic meter (kg/m^3)": {
          "text": "kilogram per cubic meter (kg/m^3)",
          "meaning": "UO:0000083"
        },
        "part per million (ppm)": {
          "text": "part per million (ppm)",
          "meaning": "UO:0000169"
        }
      }
    },
    "oxygen reduction potential (ORP) measurement unit menu": {
      "name": "oxygen reduction potential (ORP) measurement unit menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "milliVolt (mV)": {
          "text": "milliVolt (mV)",
          "meaning": "UO:0000247"
        }
      }
    },
    "chemical oxygen demand (COD) measurement unit menu": {
      "name": "chemical oxygen demand (COD) measurement unit menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "milligram per liter (mg/L)": {
          "text": "milligram per liter (mg/L)",
          "meaning": "UO:0000273"
        }
      }
    },
    "carbonaceous biochemical oxygen demand (CBOD) measurement unit menu": {
      "name": "carbonaceous biochemical oxygen demand (CBOD) measurement unit menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "milligram per liter (mg/L)": {
          "text": "milligram per liter (mg/L)",
          "meaning": "UO:0000273"
        }
      }
    },
    "total suspended solids (TSS) measurement unit menu": {
      "name": "total suspended solids (TSS) measurement unit menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "percent (%)": {
          "text": "percent (%)",
          "meaning": "UO:0000187"
        },
        "gram per liter (g/L)": {
          "text": "gram per liter (g/L)",
          "meaning": "UO:0000175"
        }
      }
    },
    "total dissolved solids (TDS) measurement unit menu": {
      "name": "total dissolved solids (TDS) measurement unit menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "percent (%)": {
          "text": "percent (%)",
          "meaning": "UO:0000187"
        },
        "gram per liter (g/L)": {
          "text": "gram per liter (g/L)",
          "meaning": "UO:0000175"
        }
      }
    },
    "total solids (TS) measurement unit menu": {
      "name": "total solids (TS) measurement unit menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "percent (%)": {
          "text": "percent (%)",
          "meaning": "UO:0000187"
        },
        "gram per liter (g/L)": {
          "text": "gram per liter (g/L)",
          "meaning": "UO:0000175"
        }
      }
    },
    "alkalinity measurement unit menu": {
      "name": "alkalinity measurement unit menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "milliequivalent per liter (meq/L)": {
          "text": "milliequivalent per liter (meq/L)"
        },
        "milligram per liter of calcium carbonate (mg/L CaCO3)": {
          "text": "milligram per liter of calcium carbonate (mg/L CaCO3)"
        }
      }
    },
    "conductivity measurement unit menu": {
      "name": "conductivity measurement unit menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "milliSiemen per centimeter (mS/cm)": {
          "text": "milliSiemen per centimeter (mS/cm)"
        },
        "microSiemen per centimeter (μS/cm)": {
          "text": "microSiemen per centimeter (μS/cm)"
        },
        "Siemen per meter (S/m)": {
          "text": "Siemen per meter (S/m)"
        },
        "millimho per centimeter (mmho/cm)": {
          "text": "millimho per centimeter (mmho/cm)"
        },
        "micromho per centimeter (μmho/cm)": {
          "text": "micromho per centimeter (μmho/cm)"
        }
      }
    },
    "salinity measurement unit menu": {
      "name": "salinity measurement unit menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "practical salinity unit (PSU)": {
          "text": "practical salinity unit (PSU)"
        },
        "weight for weight (% w/w)": {
          "text": "weight for weight (% w/w)"
        },
        "gram per kilogram (g/kg)": {
          "text": "gram per kilogram (g/kg)"
        },
        "gram per liter (g/L)": {
          "text": "gram per liter (g/L)",
          "meaning": "UO:0000175"
        }
      }
    },
    "total nitrogen (TN) measurement unit menu": {
      "name": "total nitrogen (TN) measurement unit menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "milligram per liter (mg/L)": {
          "text": "milligram per liter (mg/L)",
          "meaning": "UO:0000273"
        },
        "gram per liter (g/L)": {
          "text": "gram per liter (g/L)",
          "meaning": "UO:0000175"
        },
        "nitrogen per total solids (gN/gTS)": {
          "text": "nitrogen per total solids (gN/gTS)"
        }
      }
    },
    "total phosphorpus (TP) measurement unit menu": {
      "name": "total phosphorpus (TP) measurement unit menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "total phosphorus per total solids (gTP/gTS)": {
          "text": "total phosphorus per total solids (gTP/gTS)"
        },
        "orthophosphate per total solids (gPO43–/gTS)": {
          "text": "orthophosphate per total solids (gPO43–/gTS)"
        },
        "orthophosphate as phosphorus per total solids (gPO4-P/gTS)": {
          "text": "orthophosphate as phosphorus per total solids (gPO4-P/gTS)"
        },
        "milligrams orthophosphate per liter (mg PO43–/L)": {
          "text": "milligrams orthophosphate per liter (mg PO43–/L)"
        },
        "milligrams orthophosphate as phosphorus per liter (mg PO4-P/L)": {
          "text": "milligrams orthophosphate as phosphorus per liter (mg PO4-P/L)"
        }
      }
    },
    "fecal contamination indicator menu": {
      "name": "fecal contamination indicator menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "crAssphage": {
          "text": "crAssphage",
          "meaning": "NCBITaxon:1211417"
        },
        "PMMoV / pepper mild mottle virus": {
          "text": "PMMoV / pepper mild mottle virus",
          "meaning": "NCBITaxon:12239"
        },
        "Bacteroides HF183": {
          "text": "Bacteroides HF183"
        },
        "Lachnospiraceae Lachno3": {
          "text": "Lachnospiraceae Lachno3"
        },
        "Male-specific (F+) coliphages": {
          "text": "Male-specific (F+) coliphages"
        },
        "stercobilin": {
          "text": "stercobilin",
          "meaning": "CHEBI:26756"
        }
      }
    },
    "fecal contamination unit menu": {
      "name": "fecal contamination unit menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "log10 gene copies per 100 milliliter (log10 GC/100 mL)": {
          "text": "log10 gene copies per 100 milliliter (log10 GC/100 mL)"
        },
        "gene copies per liter (GC/L)": {
          "text": "gene copies per liter (GC/L)"
        },
        "cycle threshold (Ct) / quantification cycle (Cq)": {
          "text": "cycle threshold (Ct) / quantification cycle (Cq)",
          "meaning": "GENEPIO:0100657"
        },
        "log10 gene copies per nanogram total DNA": {
          "text": "log10 gene copies per nanogram total DNA"
        }
      }
    },
    "urinary contamination indicator menu": {
      "name": "urinary contamination indicator menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "urobilin": {
          "text": "urobilin",
          "meaning": "CHEBI:36378"
        }
      }
    },
    "urinary contamination unit menu": {
      "name": "urinary contamination unit menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "nanograms per liter (ng/L)": {
          "text": "nanograms per liter (ng/L)",
          "meaning": "EFO:0004382"
        }
      }
    },
    "fecal coliform count unit menu": {
      "name": "fecal coliform count unit menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "colony forming units per milliliter (CFU/mL)": {
          "text": "colony forming units per milliliter (CFU/mL)",
          "meaning": "UO:0000213"
        },
        "colony forming units per 100 milliliter (CFU/100 mL)": {
          "text": "colony forming units per 100 milliliter (CFU/100 mL)"
        },
        "colony forming units per grams total solids (CFU/gTS)": {
          "text": "colony forming units per grams total solids (CFU/gTS)"
        },
        "most probable number per milliliter (MPN/mL)": {
          "text": "most probable number per milliliter (MPN/mL)"
        },
        "most probable number per 100 milliliter (MPN/100 mL)": {
          "text": "most probable number per 100 milliliter (MPN/100 mL)"
        }
      }
    },
    "sample temperature unit (at collection) menu": {
      "name": "sample temperature unit (at collection) menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "degree Fahrenheit (F)": {
          "text": "degree Fahrenheit (F)",
          "meaning": "UO:0000195"
        },
        "degree Celsius (C)": {
          "text": "degree Celsius (C)",
          "meaning": "UO:0000027"
        }
      }
    },
    "sample temperature unit (when received) menu": {
      "name": "sample temperature unit (when received) menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "degree Fahrenheit (F)": {
          "text": "degree Fahrenheit (F)",
          "meaning": "UO:0000195"
        },
        "degree Celsius (C)": {
          "text": "degree Celsius (C)",
          "meaning": "UO:0000027"
        }
      }
    },
    "purpose of sequencing menu": {
      "name": "purpose of sequencing menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "Baseline surveillance (random sampling)": {
          "text": "Baseline surveillance (random sampling)",
          "meaning": "GENEPIO:0100005"
        },
        "Targeted surveillance (non-random sampling)": {
          "text": "Targeted surveillance (non-random sampling)",
          "meaning": "GENEPIO:0100006"
        },
        "Priority surveillance project": {
          "text": "Priority surveillance project",
          "meaning": "GENEPIO:0100007"
        },
        "Longitudinal surveillance (repeat sampling)": {
          "text": "Longitudinal surveillance (repeat sampling)",
          "meaning": "GENEPIO:0100009"
        },
        "Travel-associated surveillance": {
          "text": "Travel-associated surveillance",
          "meaning": "GENEPIO:0100012"
        },
        "Domestic travel surveillance": {
          "text": "Domestic travel surveillance",
          "meaning": "GENEPIO:0100013",
          "is_a": "Travel-associated surveillance"
        },
        "International travel surveillance": {
          "text": "International travel surveillance",
          "meaning": "GENEPIO:0100014",
          "is_a": "Travel-associated surveillance"
        },
        "Research": {
          "text": "Research",
          "meaning": "GENEPIO:0100022"
        },
        "Viral passage experiment": {
          "text": "Viral passage experiment",
          "meaning": "GENEPIO:0100023",
          "is_a": "Research"
        },
        "Protocol testing experiment": {
          "text": "Protocol testing experiment",
          "meaning": "GENEPIO:0100024",
          "is_a": "Research"
        }
      }
    },
    "sequencing platform menu": {
      "name": "sequencing platform menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "Illumina": {
          "text": "Illumina",
          "meaning": "GENEPIO:0001923"
        },
        "Pacific Biosciences": {
          "text": "Pacific Biosciences",
          "meaning": "GENEPIO:0001927"
        },
        "Ion Torrent": {
          "text": "Ion Torrent",
          "meaning": "GENEPIO:0002683"
        },
        "Oxford Nanopore Technologies": {
          "text": "Oxford Nanopore Technologies"
        },
        "BGI Genomics": {
          "text": "BGI Genomics",
          "meaning": "GENEPIO:0004324"
        },
        "MGI": {
          "text": "MGI",
          "meaning": "GENEPIO:0004325"
        },
        "Roche LS454": {
          "text": "Roche LS454",
          "meaning": "GENEPIO:0001926"
        },
        "SOLiD sequencing": {
          "text": "SOLiD sequencing",
          "meaning": "GENEPIO:0002684"
        },
        "Complete Genomics": {
          "text": "Complete Genomics",
          "meaning": "GENEPIO:0001924"
        },
        "Helicos": {
          "text": "Helicos",
          "meaning": "GENEPIO:0002682"
        },
        "Applied Biosystems": {
          "text": "Applied Biosystems"
        }
      }
    },
    "sequencing instrument menu": {
      "name": "sequencing instrument menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "Illumina": {
          "text": "Illumina",
          "meaning": "GENEPIO:0100105"
        },
        "Illumina Genome Analyzer": {
          "text": "Illumina Genome Analyzer",
          "meaning": "GENEPIO:0100106",
          "is_a": "Illumina"
        },
        "Illumina Genome Analyzer II": {
          "text": "Illumina Genome Analyzer II",
          "meaning": "OBI:0000703",
          "is_a": "Illumina"
        },
        "Illumina Genome Analyzer IIx": {
          "text": "Illumina Genome Analyzer IIx",
          "meaning": "OBI:0002000",
          "is_a": "Illumina"
        },
        "Illumina HiScanSQ": {
          "text": "Illumina HiScanSQ",
          "meaning": "GENEPIO:0100109",
          "is_a": "Illumina"
        },
        "Illumina HiSeq": {
          "text": "Illumina HiSeq",
          "meaning": "GENEPIO:0100110",
          "is_a": "Illumina"
        },
        "Illumina HiSeq X": {
          "text": "Illumina HiSeq X",
          "meaning": "GENEPIO:0100111",
          "is_a": "Illumina HiSeq"
        },
        "Illumina HiSeq X Five": {
          "text": "Illumina HiSeq X Five",
          "meaning": "GENEPIO:0100112",
          "is_a": "Illumina HiSeq"
        },
        "Illumina HiSeq X Ten": {
          "text": "Illumina HiSeq X Ten",
          "meaning": "GENEPIO:0100113",
          "is_a": "Illumina HiSeq"
        },
        "Illumina HiSeq 1000": {
          "text": "Illumina HiSeq 1000",
          "meaning": "OBI:0002022",
          "is_a": "Illumina HiSeq"
        },
        "Illumina HiSeq 1500": {
          "text": "Illumina HiSeq 1500",
          "meaning": "GENEPIO:0100115",
          "is_a": "Illumina HiSeq"
        },
        "Illumina HiSeq 2000": {
          "text": "Illumina HiSeq 2000",
          "meaning": "OBI:0002001",
          "is_a": "Illumina HiSeq"
        },
        "Illumina HiSeq 2500": {
          "text": "Illumina HiSeq 2500",
          "meaning": "OBI:0002002",
          "is_a": "Illumina HiSeq"
        },
        "Illumina HiSeq 3000": {
          "text": "Illumina HiSeq 3000",
          "meaning": "OBI:0002048",
          "is_a": "Illumina HiSeq"
        },
        "Illumina HiSeq 4000": {
          "text": "Illumina HiSeq 4000",
          "meaning": "OBI:0002049",
          "is_a": "Illumina HiSeq"
        },
        "Illumina iSeq": {
          "text": "Illumina iSeq",
          "meaning": "GENEPIO:0100120",
          "is_a": "Illumina"
        },
        "Illumina iSeq 100": {
          "text": "Illumina iSeq 100",
          "meaning": "GENEPIO:0100121",
          "is_a": "Illumina iSeq"
        },
        "Illumina NovaSeq": {
          "text": "Illumina NovaSeq",
          "meaning": "GENEPIO:0100122",
          "is_a": "Illumina"
        },
        "Illumina NovaSeq 6000": {
          "text": "Illumina NovaSeq 6000",
          "meaning": "GENEPIO:0100123",
          "is_a": "Illumina NovaSeq"
        },
        "Illumina MiniSeq": {
          "text": "Illumina MiniSeq",
          "meaning": "GENEPIO:0100124",
          "is_a": "Illumina"
        },
        "Illumina MiSeq": {
          "text": "Illumina MiSeq",
          "meaning": "OBI:0002003",
          "is_a": "Illumina"
        },
        "Illumina NextSeq": {
          "text": "Illumina NextSeq",
          "meaning": "GENEPIO:0100126",
          "is_a": "Illumina"
        },
        "Illumina NextSeq 500": {
          "text": "Illumina NextSeq 500",
          "meaning": "OBI:0002021",
          "is_a": "Illumina NextSeq"
        },
        "Illumina NextSeq 550": {
          "text": "Illumina NextSeq 550",
          "meaning": "GENEPIO:0100128",
          "is_a": "Illumina NextSeq"
        },
        "Illumina NextSeq 1000": {
          "text": "Illumina NextSeq 1000",
          "meaning": "GENEPIO:0004432",
          "is_a": "Illumina NextSeq"
        },
        "Illumina NextSeq 2000": {
          "text": "Illumina NextSeq 2000",
          "meaning": "GENEPIO:0100129",
          "is_a": "Illumina NextSeq"
        },
        "PacBio": {
          "text": "PacBio",
          "meaning": "GENEPIO:0100130"
        },
        "PacBio RS": {
          "text": "PacBio RS",
          "meaning": "GENEPIO:0100131",
          "is_a": "PacBio"
        },
        "PacBio RS II": {
          "text": "PacBio RS II",
          "meaning": "OBI:0002012",
          "is_a": "PacBio"
        },
        "PacBio Sequel": {
          "text": "PacBio Sequel",
          "meaning": "GENEPIO:0100133",
          "is_a": "PacBio"
        },
        "PacBio Sequel II": {
          "text": "PacBio Sequel II",
          "meaning": "GENEPIO:0100134",
          "is_a": "PacBio"
        },
        "Ion Torrent": {
          "text": "Ion Torrent",
          "meaning": "GENEPIO:0100135"
        },
        "Ion Torrent PGM": {
          "text": "Ion Torrent PGM",
          "meaning": "GENEPIO:0100136",
          "is_a": "Ion Torrent"
        },
        "Ion Torrent Proton": {
          "text": "Ion Torrent Proton",
          "meaning": "GENEPIO:0100137",
          "is_a": "Ion Torrent"
        },
        "Ion Torrent S5 XL": {
          "text": "Ion Torrent S5 XL",
          "meaning": "GENEPIO:0100138",
          "is_a": "Ion Torrent"
        },
        "Ion Torrent S5": {
          "text": "Ion Torrent S5",
          "meaning": "GENEPIO:0100139",
          "is_a": "Ion Torrent"
        },
        "Oxford Nanopore": {
          "text": "Oxford Nanopore",
          "meaning": "GENEPIO:0100140"
        },
        "Oxford Nanopore Flongle": {
          "text": "Oxford Nanopore Flongle",
          "meaning": "GENEPIO:0004433",
          "is_a": "Oxford Nanopore"
        },
        "Oxford Nanopore GridION": {
          "text": "Oxford Nanopore GridION",
          "meaning": "GENEPIO:0100141",
          "is_a": "Oxford Nanopore"
        },
        "Oxford Nanopore MinION": {
          "text": "Oxford Nanopore MinION",
          "meaning": "GENEPIO:0100142",
          "is_a": "Oxford Nanopore"
        },
        "Oxford Nanopore PromethION": {
          "text": "Oxford Nanopore PromethION",
          "meaning": "GENEPIO:0100143",
          "is_a": "Oxford Nanopore"
        },
        "BGISEQ": {
          "text": "BGISEQ",
          "meaning": "GENEPIO:0100144"
        },
        "BGISEQ-500": {
          "text": "BGISEQ-500",
          "meaning": "GENEPIO:0100145",
          "is_a": "BGISEQ"
        },
        "MGI sequencing instrument": {
          "text": "MGI sequencing instrument",
          "meaning": "GENEPIO:0100146"
        },
        "MGISEQ-2000RS": {
          "text": "MGISEQ-2000RS",
          "meaning": "GENEPIO:0100971",
          "is_a": "MGI sequencing instrument"
        },
        "DNBSEQ-T7": {
          "text": "DNBSEQ-T7",
          "meaning": "GENEPIO:0100147",
          "is_a": "MGI sequencing instrument"
        },
        "DNBSEQ-G400": {
          "text": "DNBSEQ-G400",
          "meaning": "GENEPIO:0100148",
          "is_a": "MGI sequencing instrument"
        },
        "DNBSEQ-G400 FAST": {
          "text": "DNBSEQ-G400 FAST",
          "meaning": "GENEPIO:0100149",
          "is_a": "MGI sequencing instrument"
        },
        "DNBSEQ-G50": {
          "text": "DNBSEQ-G50",
          "meaning": "GENEPIO:0100150",
          "is_a": "MGI sequencing instrument"
        },
        "MGI DNBSEQ-G99": {
          "text": "MGI DNBSEQ-G99",
          "meaning": "GENEPIO:0100972",
          "is_a": "MGI sequencing instrument"
        },
        "MGI DNBSEQ-G400": {
          "text": "MGI DNBSEQ-G400",
          "meaning": "GENEPIO:0100148",
          "is_a": "MGI sequencing instrument"
        },
        "MGI DNBSEQ-G400RS FAST": {
          "text": "MGI DNBSEQ-G400RS FAST",
          "meaning": "GENEPIO:0100149",
          "is_a": "MGI DNBSEQ-G400"
        },
        "MGI DNBSEQ-T7": {
          "text": "MGI DNBSEQ-T7",
          "meaning": "GENEPIO:0100147",
          "is_a": "MGI sequencing instrument"
        },
        "MGI DNBSEQ-E25": {
          "text": "MGI DNBSEQ-E25",
          "meaning": "GENEPIO:0100973",
          "is_a": "MGI sequencing instrument"
        },
        "MGI DNBSEQ-G50": {
          "text": "MGI DNBSEQ-G50",
          "meaning": "GENEPIO:0100150",
          "is_a": "MGI sequencing instrument"
        },
        "454 Genome Sequencer": {
          "text": "454 Genome Sequencer",
          "meaning": "GENEPIO:0001937"
        },
        "454 Genome Sequencer 20": {
          "text": "454 Genome Sequencer 20",
          "meaning": "OBI:0000689",
          "is_a": "454 Genome Sequencer"
        },
        "454 Genome Sequencer FLX": {
          "text": "454 Genome Sequencer FLX",
          "meaning": "OBI:0000702",
          "is_a": "454 Genome Sequencer"
        },
        "454 Genome Sequencer FLX+": {
          "text": "454 Genome Sequencer FLX+",
          "meaning": "GENEPIO:0100982",
          "is_a": "454 Genome Sequencer"
        },
        "454 Genome Sequencer FLX Titanium": {
          "text": "454 Genome Sequencer FLX Titanium",
          "meaning": "GENEPIO:0001936",
          "is_a": "454 Genome Sequencer"
        },
        "454 Genome Sequencer Junior": {
          "text": "454 Genome Sequencer Junior",
          "meaning": "GENEPIO:0100983",
          "is_a": "454 Genome Sequencer"
        },
        "SOLiD System": {
          "text": "SOLiD System",
          "meaning": "OBI:0000696"
        },
        "SOLiD 5500": {
          "text": "SOLiD 5500",
          "meaning": "GENEPIO:0001929",
          "is_a": "SOLiD System"
        },
        "SOLiD 5500xl Genetic Analyzer": {
          "text": "SOLiD 5500xl Genetic Analyzer",
          "meaning": "GENEPIO:0001930",
          "is_a": "SOLiD System"
        },
        "SOLiD 5500x-Wl Genetic Analyzer": {
          "text": "SOLiD 5500x-Wl Genetic Analyzer",
          "meaning": "GENEPIO:0100984",
          "is_a": "SOLiD System"
        },
        "SOLiD 3 Plus System": {
          "text": "SOLiD 3 Plus System",
          "meaning": "OBI:0002007",
          "is_a": "SOLiD System"
        },
        "SOLiD 4 System": {
          "text": "SOLiD 4 System",
          "meaning": "OBI:0002024",
          "is_a": "SOLiD System"
        },
        "SOLiD 4hq System": {
          "text": "SOLiD 4hq System",
          "meaning": "GENEPIO:0001928",
          "is_a": "SOLiD System"
        },
        "SOLiD PI System": {
          "text": "SOLiD PI System",
          "meaning": "GENEPIO:0001931",
          "is_a": "SOLiD System"
        },
        "SOLiD System 2.0": {
          "text": "SOLiD System 2.0",
          "meaning": "GENEPIO:0001932",
          "is_a": "SOLiD System"
        },
        "SOLiD System 3.0": {
          "text": "SOLiD System 3.0",
          "meaning": "GENEPIO:0001933",
          "is_a": "SOLiD System"
        },
        "HeliScope Single Molecule Sequencer": {
          "text": "HeliScope Single Molecule Sequencer",
          "meaning": "OBI:0000717"
        },
        "Applied Biosystems sequencing instrument model": {
          "text": "Applied Biosystems sequencing instrument model",
          "meaning": "GENEPIO:0100974"
        },
        "AB 310 Genetic Analyzer": {
          "text": "AB 310 Genetic Analyzer",
          "meaning": "GENEPIO:0100975",
          "is_a": "Applied Biosystems sequencing instrument model"
        },
        "AB 3130 Genetic Analyzer": {
          "text": "AB 3130 Genetic Analyzer",
          "meaning": "GENEPIO:0100976",
          "is_a": "Applied Biosystems sequencing instrument model"
        },
        "AB 3130xL Genetic Analyzer": {
          "text": "AB 3130xL Genetic Analyzer",
          "meaning": "GENEPIO:0100977",
          "is_a": "Applied Biosystems sequencing instrument model"
        },
        "AB 3500 Genetic Analyzer": {
          "text": "AB 3500 Genetic Analyzer",
          "meaning": "GENEPIO:0100978",
          "is_a": "Applied Biosystems sequencing instrument model"
        },
        "AB 3500xL Genetic Analyzer": {
          "text": "AB 3500xL Genetic Analyzer",
          "meaning": "GENEPIO:0100979",
          "is_a": "Applied Biosystems sequencing instrument model"
        },
        "AB 3730 Genetic Analyzer": {
          "text": "AB 3730 Genetic Analyzer",
          "meaning": "GENEPIO:0100980",
          "is_a": "Applied Biosystems sequencing instrument model"
        },
        "AB 3730xL Genetic Analyzer": {
          "text": "AB 3730xL Genetic Analyzer",
          "meaning": "GENEPIO:0100981",
          "is_a": "Applied Biosystems sequencing instrument model"
        }
      }
    },
    "amplicon pcr primer scheme menu": {
      "name": "amplicon pcr primer scheme menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "artic-v1": {
          "text": "artic-v1",
          "meaning": "GENEPIO:0100847"
        },
        "artic-v2": {
          "text": "artic-v2",
          "meaning": "GENEPIO:0100848"
        },
        "artic-v3": {
          "text": "artic-v3",
          "meaning": "GENEPIO:0100849"
        },
        "artic-v4": {
          "text": "artic-v4",
          "meaning": "GENEPIO:0100850"
        },
        "artic-v4.1": {
          "text": "artic-v4.1",
          "meaning": "GENEPIO:0100851"
        },
        "artic-v5.0.0_400": {
          "text": "artic-v5.0.0_400",
          "meaning": "GENEPIO:0100852"
        },
        "artic-v5.1.0_400": {
          "text": "artic-v5.1.0_400",
          "meaning": "GENEPIO:0100853"
        },
        "artic-v5.2.0_1200": {
          "text": "artic-v5.2.0_1200",
          "meaning": "GENEPIO:0100854"
        },
        "artic-v5.2.0_400": {
          "text": "artic-v5.2.0_400",
          "meaning": "GENEPIO:0100855"
        },
        "artic-v5.3.2_400": {
          "text": "artic-v5.3.2_400",
          "meaning": "GENEPIO:0100856"
        },
        "eden-v1": {
          "text": "eden-v1",
          "meaning": "GENEPIO:0100857"
        },
        "midnight-bccdc-v1": {
          "text": "midnight-bccdc-v1",
          "meaning": "GENEPIO:0100858"
        },
        "midnight-bccdc-v2": {
          "text": "midnight-bccdc-v2",
          "meaning": "GENEPIO:0100859"
        },
        "midnight-bccdc-v3": {
          "text": "midnight-bccdc-v3",
          "meaning": "GENEPIO:0100860"
        },
        "midnight-bccdc-v4": {
          "text": "midnight-bccdc-v4",
          "meaning": "GENEPIO:0100861"
        },
        "midnight-ont-v3": {
          "text": "midnight-ont-v3",
          "meaning": "GENEPIO:0100862"
        },
        "midnight-v1": {
          "text": "midnight-v1",
          "meaning": "GENEPIO:0100863"
        },
        "midnight-v2": {
          "text": "midnight-v2",
          "meaning": "GENEPIO:0100864"
        },
        "varskip-vsl1a": {
          "text": "varskip-vsl1a",
          "meaning": "GENEPIO:0100865"
        },
        "varskip-vss1a": {
          "text": "varskip-vss1a",
          "meaning": "GENEPIO:0100866"
        },
        "varskip-vss2a": {
          "text": "varskip-vss2a",
          "meaning": "GENEPIO:0100867"
        },
        "varskip-vss2b": {
          "text": "varskip-vss2b",
          "meaning": "GENEPIO:0100868"
        }
      }
    },
    "quality control determination menu": {
      "name": "quality control determination menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "no quality control issues identified": {
          "text": "no quality control issues identified",
          "meaning": "GENEPIO:0100562"
        },
        "sequence passed quality control": {
          "text": "sequence passed quality control",
          "meaning": "GENEPIO:0100563"
        },
        "sequence failed quality control": {
          "text": "sequence failed quality control",
          "meaning": "GENEPIO:0100564"
        },
        "minor quality control issues identified": {
          "text": "minor quality control issues identified",
          "meaning": "GENEPIO:0100565"
        },
        "sequence flagged for potential quality control issues": {
          "text": "sequence flagged for potential quality control issues",
          "meaning": "GENEPIO:0100566"
        },
        "quality control not performed": {
          "text": "quality control not performed",
          "meaning": "GENEPIO:0100567"
        }
      }
    },
    "quality control issues menu": {
      "name": "quality control issues menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "low quality sequence": {
          "text": "low quality sequence",
          "meaning": "GENEPIO:0100568"
        },
        "sequence contaminated": {
          "text": "sequence contaminated",
          "meaning": "GENEPIO:0100569"
        },
        "low average genome coverage": {
          "text": "low average genome coverage",
          "meaning": "GENEPIO:0100570"
        },
        "low percent genome captured": {
          "text": "low percent genome captured",
          "meaning": "GENEPIO:0100571"
        },
        "read lengths shorter than expected": {
          "text": "read lengths shorter than expected",
          "meaning": "GENEPIO:0100572"
        },
        "sequence amplification artifacts": {
          "text": "sequence amplification artifacts",
          "meaning": "GENEPIO:0100573"
        },
        "low signal to noise ratio": {
          "text": "low signal to noise ratio",
          "meaning": "GENEPIO:0100574"
        },
        "low coverage of characteristic mutations": {
          "text": "low coverage of characteristic mutations",
          "meaning": "GENEPIO:0100575"
        }
      }
    },
    "diagnostic target presence menu": {
      "name": "diagnostic target presence menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "present": {
          "text": "present",
          "meaning": "PATO:0000467"
        },
        "absent": {
          "text": "absent",
          "meaning": "PATO:0000462"
        }
      }
    },
    "diagnostic measurement unit menu": {
      "name": "diagnostic measurement unit menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "gene copies per liter (GC/L)": {
          "text": "gene copies per liter (GC/L)"
        },
        "cycle threshold (Ct) / quantification cycle (Cq)": {
          "text": "cycle threshold (Ct) / quantification cycle (Cq)",
          "meaning": "GENEPIO:0100657"
        },
        "colony forming units per milliliter (CFU/mL)": {
          "text": "colony forming units per milliliter (CFU/mL)",
          "meaning": "UO:0000213"
        },
        "colony forming units per 100 milliliter (CFU/100 mL)": {
          "text": "colony forming units per 100 milliliter (CFU/100 mL)"
        },
        "colony forming units per grams total solids (CFU/gTS)": {
          "text": "colony forming units per grams total solids (CFU/gTS)"
        },
        "most probable number per milliliter (MPN/mL)": {
          "text": "most probable number per milliliter (MPN/mL)"
        },
        "most probable number per 100 milliliter (MPN/100 mL)": {
          "text": "most probable number per 100 milliliter (MPN/100 mL)"
        }
      }
    },
    "diagnostic measurement method menu": {
      "name": "diagnostic measurement method menu",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "permissible_values": {
        "quantitative real time polymerase chain reaction (qPCR)": {
          "text": "quantitative real time polymerase chain reaction (qPCR)",
          "meaning": "OBI:0000893"
        },
        "digital real time polymerase chain reaction (dPCR)": {
          "text": "digital real time polymerase chain reaction (dPCR)"
        },
        "bacteria culture test": {
          "text": "bacteria culture test"
        },
        "CRISPR-based diagnostics": {
          "text": "CRISPR-based diagnostics"
        }
      }
    }
  },
  "slots": {
    "specimen collector sample ID": {
      "name": "specimen collector sample ID",
      "description": "The user-defined name for the sample.",
      "title": "specimen collector sample ID",
      "comments": [
        "Store the collector sample ID. If this number is considered identifiable information, provide an alternative ID. Be sure to store the key that maps between the original and alternative IDs for traceability and follow up if necessary. Every collector sample ID from a single submitter must be unique. It can have any format, but we suggest that you make it concise, unique and consistent within your lab."
      ],
      "examples": [
        {
          "value": "ASDFG123"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0001123",
      "identifier": true,
      "range": "WhitespaceMinimizedString",
      "required": true
    },
    "specimen collector subsample ID": {
      "name": "specimen collector subsample ID",
      "description": "The user-defined identifier assigned to a portion of the original sample.",
      "title": "specimen collector subsample ID",
      "comments": [
        "Store the ID for the subsample/aliquot."
      ],
      "examples": [
        {
          "value": "ASDFG123_12"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100752",
      "range": "WhitespaceMinimizedString"
    },
    "pooled sample ID": {
      "name": "pooled sample ID",
      "description": "The user-defined identifier assigned to a combined (pooled) set of samples.",
      "title": "pooled sample ID",
      "comments": [
        "If the sample being analyzed is the result of pooling individual samples, rename the pooled sample with a new identifier. Store the pooled sample ID."
      ],
      "examples": [
        {
          "value": "12345AYZ"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100996",
      "range": "WhitespaceMinimizedString"
    },
    "metagenome-assembled genome (MAG) ID": {
      "name": "metagenome-assembled genome (MAG) ID",
      "description": "The user-defined identifier assigned to a genome reconstructed from metagenomic data.",
      "title": "metagenome-assembled genome (MAG) ID",
      "comments": [
        "Store the MAG ID."
      ],
      "examples": [
        {
          "value": "XYZ1234.1"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100753",
      "range": "WhitespaceMinimizedString"
    },
    "specimen collector project ID": {
      "name": "specimen collector project ID",
      "description": "The user-defined project name assigned to a sequencing project.",
      "title": "specimen collector project ID",
      "comments": [
        "If the sample was collected or analyzed under the umbrella of a specific project, include the name of that project here."
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100918",
      "range": "WhitespaceMinimizedString"
    },
    "BioProject accession": {
      "name": "BioProject accession",
      "description": "The INSDC (i.e., ENA, NCBI, or DDBJ) accession number of the BioProject(s) to which the BioSample belongs.",
      "title": "BioProject accession",
      "comments": [
        "Store the BioProject accession number. BioProjects are an organizing tool that links together raw sequence data, assemblies, and their associated metadata. Each province will be assigned a different bioproject accession number by the National Microbiology Lab. A valid NCBI BioProject accession has prefix PRJN e.g., PRJNA12345, and is created once at the beginning of a new sequencing project."
      ],
      "examples": [
        {
          "value": "PRJNA608651"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0001136",
      "range": "WhitespaceMinimizedString",
      "pattern": "{UPPER_CASE}",
      "structured_pattern": {
        "syntax": "{UPPER_CASE}",
        "interpolated": true,
        "partial_match": false
      }
    },
    "BioSample accession": {
      "name": "BioSample accession",
      "description": "The identifier assigned to a BioSample in INSDC (i.e., ENA, NCBI, or DDBJ) archives.",
      "title": "BioSample accession",
      "comments": [
        "Store the accession returned from the BioSample submission. NCBI BioSamples will have the prefix SAMN."
      ],
      "examples": [
        {
          "value": "SAMN14180202"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0001139",
      "range": "WhitespaceMinimizedString",
      "recommended": true,
      "pattern": "{UPPER_CASE}",
      "structured_pattern": {
        "syntax": "{UPPER_CASE}",
        "interpolated": true,
        "partial_match": false
      }
    },
    "GenBank accession (versioned)": {
      "name": "GenBank accession (versioned)",
      "description": "The versioned identifier assigned to an assembly or consensus sequence in GenBank archives.",
      "title": "GenBank accession (versioned)",
      "comments": [
        "Store the versioned GenBank accession assigned to the submitted sequence."
      ],
      "examples": [
        {
          "value": "LZ986655.1"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100754",
      "range": "WhitespaceMinimizedString",
      "pattern": "{UPPER_CASE}",
      "structured_pattern": {
        "syntax": "{UPPER_CASE}",
        "interpolated": true,
        "partial_match": false
      }
    },
    "SRA accession": {
      "name": "SRA accession",
      "description": "The Sequence Read Archive (SRA) identifier linking raw read data, methodological metadata and quality control metrics submitted to the INSDC.",
      "title": "SRA accession",
      "comments": [
        "Store the accession assigned to the submitted sequence. NCBI-SRA accessions start with SRR."
      ],
      "examples": [
        {
          "value": "SRR11177792"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0001142",
      "range": "WhitespaceMinimizedString",
      "pattern": "{UPPER_CASE}",
      "structured_pattern": {
        "syntax": "{UPPER_CASE}",
        "interpolated": true,
        "partial_match": false
      }
    },
    "GISAID accession": {
      "name": "GISAID accession",
      "description": "The identifier assigned to a sequence in GISAID (the Global Initiative on Sharing All Influenza Data) archives.",
      "title": "GISAID accession",
      "comments": [
        "Store the accession assigned to the submitted sequence. GISAID accessions start with EPI."
      ],
      "examples": [
        {
          "value": "EPI_ISL_402131"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0001147",
      "range": "WhitespaceMinimizedString",
      "pattern": "{UPPER_CASE}",
      "structured_pattern": {
        "syntax": "{UPPER_CASE}",
        "interpolated": true,
        "partial_match": false
      }
    },
    "GISAID virus name": {
      "name": "GISAID virus name",
      "description": "The user-defined GISAID virus name assigned to the sequence.",
      "title": "GISAID virus name",
      "comments": [
        "GISAID virus names should be in the format \"hCoV-19/Country/Identifier/year\"."
      ],
      "examples": [
        {
          "value": "hCoV-19/Canada/prov_rona_99/2020"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100282",
      "range": "WhitespaceMinimizedString",
      "pattern": "{UPPER_CASE}",
      "structured_pattern": {
        "syntax": "{UPPER_CASE}",
        "interpolated": true,
        "partial_match": false
      }
    },
    "ENA accession": {
      "name": "ENA accession",
      "description": "The identifier assigned to a BioSample in ENA (European Nucleotide Archive) archives.",
      "title": "ENA accession",
      "comments": [
        "Store the accession assigned to the submitted sequence. ENA accessions start with SAMEA."
      ],
      "examples": [
        {
          "value": "SAMEA123456"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100755",
      "range": "WhitespaceMinimizedString",
      "pattern": "{UPPER_CASE}",
      "structured_pattern": {
        "syntax": "{UPPER_CASE}",
        "interpolated": true,
        "partial_match": false
      }
    },
    "DDBJ accession": {
      "name": "DDBJ accession",
      "description": "The identifier assigned to a sequence in DDBJ (DNA Data Bank of Japan) archives.",
      "title": "DDBJ accession",
      "comments": [
        "Store the accession assigned to the submitted sequence. DDBJ accessions start with SAMD."
      ],
      "examples": [
        {
          "value": "SAMD00000001"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100756",
      "range": "WhitespaceMinimizedString",
      "pattern": "{UPPER_CASE}",
      "structured_pattern": {
        "syntax": "{UPPER_CASE}",
        "interpolated": true,
        "partial_match": false
      }
    },
    "DRA accession": {
      "name": "DRA accession",
      "description": "The identifier assigned to a BioSample in DRA (DDBJ Sequence Read Archive) archives.",
      "title": "DRA accession",
      "comments": [
        "Store the accession assigned to the submitted sequence. DRA accessions start with DRA."
      ],
      "examples": [
        {
          "value": "DRA005914"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100757",
      "range": "WhitespaceMinimizedString",
      "pattern": "{UPPER_CASE}",
      "structured_pattern": {
        "syntax": "{UPPER_CASE}",
        "interpolated": true,
        "partial_match": false
      }
    },
    "GSA accession": {
      "name": "GSA accession",
      "description": "The identifier assigned to a BioSample in GSA (Genome Sequence Archive) archives.",
      "title": "GSA accession",
      "comments": [
        "Store the accession assigned to the submitted sequence. GSA accessions start with CRA."
      ],
      "examples": [
        {
          "value": "CRA010829"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100758",
      "range": "WhitespaceMinimizedString",
      "pattern": "{UPPER_CASE}",
      "structured_pattern": {
        "syntax": "{UPPER_CASE}",
        "interpolated": true,
        "partial_match": false
      }
    },
    "Enterobase accession": {
      "name": "Enterobase accession",
      "description": "The identifier assigned to a sequence in Enterobase archives.",
      "title": "Enterobase accession",
      "comments": [
        "Store the barcode assigned to the submitted sequence. Enterobase barcodes start with different 3 letter codes depending on the organism."
      ],
      "examples": [
        {
          "value": "SAL_AA0019AA_ST"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100759",
      "range": "WhitespaceMinimizedString",
      "pattern": "{UPPER_CASE}",
      "structured_pattern": {
        "syntax": "{UPPER_CASE}",
        "interpolated": true,
        "partial_match": false
      }
    },
    "sampling site ID": {
      "name": "sampling site ID",
      "description": "The user-defined identifier assigned to a specific location from which samples are taken.",
      "title": "sampling site ID",
      "comments": [
        "Store the ID for the site from which a sample was taken. The \"site\" is user defined (e.g. it may be a building and its environs, a specific entity within an environment). Please use the same site ID for all samples from a given site, regardless of when these samples were taken. Any important changes in site location, should be represented with a new site ID."
      ],
      "examples": [
        {
          "value": "Site 12A"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100760",
      "range": "WhitespaceMinimizedString",
      "recommended": true
    },
    "sampling event ID": {
      "name": "sampling event ID",
      "description": "The user-defined identifier assigned to a specific event during which one or more samples are taken, from one or more sites.",
      "title": "sampling event ID",
      "comments": [
        "Store the ID for the event during which a sample or samples were taken. For example, an event could be one person taking samples from multiple sites, or multiple people taking samples from one site."
      ],
      "examples": [
        {
          "value": "Event 120522.1"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100761",
      "range": "WhitespaceMinimizedString",
      "recommended": true
    },
    "sample collection data steward name": {
      "name": "sample collection data steward name",
      "description": "The name of the individual at the organization that collected the original sample that plays a data governance role and oversees how a sample and associated contextual data is used and distributed.",
      "title": "sample collection data steward name",
      "comments": [
        "Provide the name of the sample collection data steward."
      ],
      "examples": [
        {
          "value": "Joe Bloggs"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100762",
      "range": "WhitespaceMinimizedString"
    },
    "sample collected by": {
      "name": "sample collected by",
      "description": "The name of the organization with which the sample collector is affiliated.",
      "title": "sample collected by",
      "comments": [
        "The name of the agency should be written out in full, (with minor exceptions) and be consistent across multiple submissions."
      ],
      "examples": [
        {
          "value": "Public Health Agency of Canada"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0001153",
      "required": true,
      "any_of": [
        {
          "range": "WhitespaceMinimizedString"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "sample collector contact email": {
      "name": "sample collector contact email",
      "description": "The email address of the contact responsible for follow-up regarding the sample.",
      "title": "sample collector contact email",
      "comments": [
        "The email address can represent a specific individual or lab e.g. johnnyblogs@lab.ca, or RespLab@lab.ca"
      ],
      "examples": [
        {
          "value": "WaterTester@facility.ca"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0001156",
      "range": "WhitespaceMinimizedString",
      "pattern": "^\\S+@\\S+\\.\\S+$"
    },
    "geo_loc_name (country)": {
      "name": "geo_loc_name (country)",
      "description": "The country of origin of the sample.",
      "title": "geo_loc_name (country)",
      "comments": [
        "If known, select a value from the pick list."
      ],
      "examples": [
        {
          "value": "Canada"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0001181",
      "required": true,
      "any_of": [
        {
          "range": "geo_loc_name (country) menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "geo_loc_name (state/province/territory)": {
      "name": "geo_loc_name (state/province/territory)",
      "description": "The state/province/territory of origin of the sample.",
      "title": "geo_loc_name (state/province/territory)",
      "comments": [
        "Provide the state/province/territory name from the GAZ geography ontology. Search for geography terms here: https://www.ebi.ac.uk/ols/ontologies/ga"
      ],
      "examples": [
        {
          "value": "Western Cape"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0001185",
      "required": true,
      "any_of": [
        {
          "range": "geo_loc_name (state/province/territory) menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "geo_loc name (county/region)": {
      "name": "geo_loc name (county/region)",
      "description": "The county/region of origin of the sample.",
      "title": "geo_loc name (county/region)",
      "comments": [
        "Provide the county/region name from the GAZ geography ontology. Search for geography terms here: https://www.ebi.ac.uk/ols/ontologies/gaz"
      ],
      "examples": [
        {
          "value": "Derbyshire"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100280",
      "range": "WhitespaceMinimizedString"
    },
    "geo_loc_name (city)": {
      "name": "geo_loc_name (city)",
      "description": "The city of origin of the sample.",
      "title": "geo_loc_name (city)",
      "comments": [
        "Provide the city name from the GAZ geography ontology. Search for geography terms here: https://www.ebi.ac.uk/ols/ontologies/gaz"
      ],
      "examples": [
        {
          "value": "Vancouver"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0001189",
      "range": "WhitespaceMinimizedString"
    },
    "geo_loc name (site)": {
      "name": "geo_loc name (site)",
      "description": "The name of a specific geographical location e.g. Credit River (rather than river).",
      "title": "geo_loc name (site)",
      "comments": [
        "Provide the name of the specific geographical site using a specific noun (a word that names a certain place, thing)."
      ],
      "examples": [
        {
          "value": "Credit River"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100436",
      "range": "WhitespaceMinimizedString"
    },
    "geo_loc latitude": {
      "name": "geo_loc latitude",
      "description": "The latitude coordinates of the geographical location of sample collection.",
      "title": "geo_loc latitude",
      "comments": [
        "Provide latitude coordinates if available. Do not use the centre of the city/region/province/state/country or the location of your agency as a proxy, as this implicates a real location and is misleading. Specify as degrees latitude in format \"d[d.dddd] N|S\"."
      ],
      "examples": [
        {
          "value": "38.98 N"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100309",
      "range": "WhitespaceMinimizedString"
    },
    "geo_loc longitude": {
      "name": "geo_loc longitude",
      "description": "The longitude coordinates of the geographical location of sample collection.",
      "title": "geo_loc longitude",
      "comments": [
        "Provide longitude coordinates if available. Do not use the centre of the city/region/province/state/country or the location of your agency as a proxy, as this implicates a real location and is misleading. Specify as degrees longitude in format \"d[dd.dddd] W|E\"."
      ],
      "examples": [
        {
          "value": "77.11 W"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100310",
      "range": "WhitespaceMinimizedString"
    },
    "watershed shapefile availability": {
      "name": "watershed shapefile availability",
      "description": "The availability status of a shapefile descriping the catchment contributing to a watershed.",
      "title": "watershed shapefile availability",
      "comments": [
        "Select a value from the picklist to describe whether or not a watershed shapefile would be available upon request."
      ],
      "examples": [
        {
          "value": "watershed shapefile available"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100919",
      "any_of": [
        {
          "range": "watershed shapefile availability menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "watershed shapefile filename": {
      "name": "watershed shapefile filename",
      "description": "The name of the watershed shapefile.",
      "title": "watershed shapefile filename",
      "comments": [
        "Provide the shapefile filename corresponding to the watershed from which the sample was taken. If there are multiple files associated with the watershed, provide all names separated by commas."
      ],
      "examples": [
        {
          "value": "siteAD17.shp, siteAD17.kml"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100920",
      "range": "WhitespaceMinimizedString"
    },
    "organism": {
      "name": "organism",
      "title": "organism",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0001191",
      "any_of": [
        {
          "range": "organism menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "purpose of sampling": {
      "name": "purpose of sampling",
      "description": "The reason that the sample was collected.",
      "title": "purpose of sampling",
      "comments": [
        "The reason a sample was collected may provide information about potential biases in sampling strategy. Provide the purpose of sampling from the picklist in the template. Most likely, the sample was collected for Public health surveillance. The reason why a sample was originally collected may differ from the reason why it was selected for sequencing, which should be indicated in the \"purpose of sequencing\" field."
      ],
      "examples": [
        {
          "value": "Public health surveillance"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0001198",
      "required": true,
      "any_of": [
        {
          "range": "purpose of sampling menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "scope of sampling": {
      "name": "scope of sampling",
      "description": "The range of locations or entities sampled expressed in general terms.",
      "title": "scope of sampling",
      "comments": [
        "Provide the scale of wastewater sampling by selecting a value from the picklist."
      ],
      "examples": [
        {
          "value": "Community-level surveillance"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100877",
      "recommended": true,
      "any_of": [
        {
          "range": "scale of sampling menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "sample received date": {
      "name": "sample received date",
      "description": "The date on which the sample was received.",
      "title": "sample received date",
      "comments": [
        "Provide the sample received date in ISO 8601 format, i.e. \"YYYY-MM-DD\"."
      ],
      "examples": [
        {
          "value": "2020-03-28"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0001179",
      "any_of": [
        {
          "range": "date"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "sample collection date": {
      "name": "sample collection date",
      "description": "The date on which the sample was collected.",
      "title": "sample collection date",
      "comments": [
        "Sample collection date is critical for surveillance and many types of analyses. Required granularity includes year, month and day. If this date is considered identifiable information, it is acceptable to add \"jitter\" by adding or subtracting a calendar day (acceptable by GISAID). Alternatively, ”received date” may be used as a substitute. The date should be provided in ISO 8601 standard format \"YYYY-MM-DD\"."
      ],
      "examples": [
        {
          "value": "2020-03-16"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0001174",
      "required": true,
      "any_of": [
        {
          "range": "date"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "sample processing date": {
      "name": "sample processing date",
      "description": "The date on which the sample was processed.",
      "title": "sample processing date",
      "comments": [
        "Provide the sample processed date in ISO 8601 format, i.e. \"YYYY-MM-DD\". The sample may be collected and processed (e.g. filtered, extraction) on the same day, or on different dates."
      ],
      "examples": [
        {
          "value": "2020-03-16"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100763",
      "any_of": [
        {
          "range": "date"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "sample collection time": {
      "name": "sample collection time",
      "description": "The time at which the sample was collected.",
      "title": "sample collection time",
      "comments": [
        "If a sample was collected over a certain time period, provide the end time here and the duration of the collection in the field \"sample collection duration value\". Provide this time in ISO 8601 24hr format, in your local time."
      ],
      "examples": [
        {
          "value": "17:15 PST"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100764",
      "recommended": true,
      "any_of": [
        {
          "range": "time"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "sample collection time of day": {
      "name": "sample collection time of day",
      "description": "The descriptive time of day during which the sample was collected.",
      "title": "sample collection time of day",
      "comments": [
        "If known, select a value from the pick list. The time of sample processing matters especially for grab samples, as fecal concentration in wastewater fluctuates over the course of the day."
      ],
      "examples": [
        {
          "value": "Morning"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100765",
      "any_of": [
        {
          "range": "sample collection time of day menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "sample collection time duration value": {
      "name": "sample collection time duration value",
      "description": "The amount of time over which the sample was collected.",
      "title": "sample collection time duration value",
      "comments": [
        "Provide the numerical value of time."
      ],
      "examples": [
        {
          "value": "4"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100766",
      "recommended": true,
      "any_of": [
        {
          "range": "WhitespaceMinimizedString"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "sample collection time duration unit": {
      "name": "sample collection time duration unit",
      "description": "The units of the time duration measurement of sample collection.",
      "title": "sample collection time duration unit",
      "comments": [
        "Provide the units from the pick list."
      ],
      "examples": [
        {
          "value": "Hour"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100767",
      "recommended": true,
      "any_of": [
        {
          "range": "sample collection duration unit menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "presampling activity": {
      "name": "presampling activity",
      "description": "The activities or variables upstream of sample collection that may affect the sample.",
      "title": "presampling activity",
      "comments": [
        "If there was an activity that would affect the sample prior to collection (this is different than sample processing), provide the activities by selecting one or more values from the template pick list. If the information is unknown or cannot be provided, leave blank or provide a null value."
      ],
      "examples": [
        {
          "value": "Agricultural activity"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100433",
      "any_of": [
        {
          "range": "presampling activity menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "presampling activity details": {
      "name": "presampling activity details",
      "description": "The details of the activities or variables that affected the sample collected.",
      "title": "presampling activity details",
      "comments": [
        "Briefly describe the presampling activities using free text."
      ],
      "examples": [
        {
          "value": "Agricultural waste from large farm contributes waste to the site sampled."
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100434",
      "any_of": [
        {
          "range": "WhitespaceMinimizedString"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "sample volume measurement value": {
      "name": "sample volume measurement value",
      "description": "The numerical value of the volume measurement of the sample collected.",
      "title": "sample volume measurement value",
      "comments": [
        "Provide the numerical value of volume."
      ],
      "examples": [
        {
          "value": "5"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100768",
      "range": "WhitespaceMinimizedString"
    },
    "sample volume measurement unit": {
      "name": "sample volume measurement unit",
      "description": "The units of the volume measurement of the sample collected.",
      "title": "sample volume measurement unit",
      "comments": [
        "Provide the units from the pick list."
      ],
      "examples": [
        {
          "value": "mL"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100769",
      "any_of": [
        {
          "range": "sample volume measurement unit menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "sample storage method": {
      "name": "sample storage method",
      "description": "The process used to store the sample.",
      "title": "sample storage method",
      "comments": [
        "Provide details of how the sample was stored from time of collection until time of processing. If there were issues with the cold chain storage, note those here."
      ],
      "examples": [
        {
          "value": "The sample was placed in a tube in a cooler bag during transportation (~3 hours) to the lab site. At this point the sample was placed in storage medium and put in a -10C freezer until it was processed and extracted 5 days later."
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100448",
      "range": "WhitespaceMinimizedString"
    },
    "sample storage medium": {
      "name": "sample storage medium",
      "description": "The medium in which a sample is stored.",
      "title": "sample storage medium",
      "comments": [
        "Provide the name of the transport medium or storage medium used for this sample. If none was used, leave blank or write \"None\"."
      ],
      "examples": [
        {
          "value": "Cary-Blair transport medium"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100449",
      "range": "WhitespaceMinimizedString"
    },
    "sample storage duration value": {
      "name": "sample storage duration value",
      "description": "The numerical value of the time measurement during which a sample is in storage.",
      "title": "sample storage duration value",
      "comments": [
        "Provide the numerical value of time."
      ],
      "examples": [
        {
          "value": "5"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100768",
      "range": "WhitespaceMinimizedString"
    },
    "sample storage duration unit": {
      "name": "sample storage duration unit",
      "description": "The units of a measured sample storage duration.",
      "title": "sample storage duration unit",
      "comments": [
        "Provide the units from the pick list."
      ],
      "examples": [
        {
          "value": "Day"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100769",
      "any_of": [
        {
          "range": "sample storage duration unit menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "specimen processing": {
      "name": "specimen processing",
      "description": "Any processing applied to the sample during or after receiving the sample.",
      "title": "specimen processing",
      "comments": [
        "Select processes from the picklist that were applied to this sample."
      ],
      "examples": [
        {
          "value": "Centrifugation"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0001253",
      "any_of": [
        {
          "range": "specimen processing menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "specimen processing details": {
      "name": "specimen processing details",
      "description": "The details of the processing applied to the sample during or after receiving the sample.",
      "title": "specimen processing details",
      "comments": [
        "Briefly describe the processes applied to the sample."
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100311",
      "range": "WhitespaceMinimizedString"
    },
    "environmental site": {
      "name": "environmental site",
      "description": "An environmental location may describe a site in the natural or built environment e.g. contact surface, metal can, hospital, wet market, bat cave.",
      "title": "environmental site",
      "comments": [
        "Provide a descriptor of the environmental site sampled. Use the picklist provided in the template. If not applicable, choose a null value."
      ],
      "examples": [
        {
          "value": "Meat processing plant"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0001232",
      "recommended": true,
      "any_of": [
        {
          "range": "environmental site menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "environmental material": {
      "name": "environmental material",
      "description": "A substance obtained from the natural or man-made environment e.g. soil, water, sewage.",
      "title": "environmental material",
      "comments": [
        "Provide a descriptor of the environmental material sampled. Use the picklist provided in the template. If not applicable, choose a null value."
      ],
      "examples": [
        {
          "value": "Raw wastewater"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0001223",
      "recommended": true,
      "any_of": [
        {
          "range": "environmental material menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "environmental material properties": {
      "name": "environmental material properties",
      "description": "The properties, characteristics and qualities of a substance obtained from the natural or man-made environment.",
      "title": "environmental material properties",
      "comments": [
        "Provide the environmental material properties by selecting descriptors from the pick list."
      ],
      "examples": [
        {
          "value": "Stagnant"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100770",
      "recommended": true,
      "any_of": [
        {
          "range": "environmental material properties menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "wastewater system type": {
      "name": "wastewater system type",
      "description": "The type or classification of a wastewater system e.g. sanitary sewer, combined sewer",
      "title": "wastewater system type",
      "comments": [
        "Provide the classification of the wastewater system by selecting from the provided pick list."
      ],
      "examples": [
        {
          "value": "Sanitary sewer"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100771",
      "recommended": true,
      "any_of": [
        {
          "range": "wastewater system type menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "experimental control type": {
      "name": "experimental control type",
      "description": "The type of control used in the experiment.",
      "title": "experimental control type",
      "comments": [
        "This field is used to distinguish samples under study from controls. A sample may act as an experimental control if it is used to detect experimental errors or to ensure experimental methods are performing as expected. If the sample acted as an experimental control, select an experimental control type from the picklist. If the sample was not a control, leave blank or select \"Not Applicable\"."
      ],
      "examples": [
        {
          "value": "Positive experimental control"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100921",
      "any_of": [
        {
          "range": "experimental control type menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "experimental control details": {
      "name": "experimental control details",
      "description": "The details regarding the experimental control contained in the sample.",
      "title": "experimental control details",
      "comments": [
        "Provide details regarding the nature of the reference strain used as a control, or what is was used to monitor."
      ],
      "examples": [
        {
          "value": "Human coronavirus 229E (HCoV-229E) spiked in sample as process control"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100922",
      "range": "WhitespaceMinimizedString"
    },
    "collection device": {
      "name": "collection device",
      "description": "The instrument or container used to collect the sample e.g. grab sampler.",
      "title": "collection device",
      "comments": [
        "Provide a descriptor if a device was used for sampling. Use the picklist provided in the template. If not applicable, choose a null value."
      ],
      "examples": [
        {
          "value": "Automatic flow-proportional sampler"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0001234",
      "any_of": [
        {
          "range": "collection device menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "collection method": {
      "name": "collection method",
      "description": "The process used to collect the sample.",
      "title": "collection method",
      "comments": [
        "Provide a descriptor if a collection method was used for sampling. Use the picklist provided in the template. If not applicable, choose a null value."
      ],
      "examples": [
        {
          "value": "Automatic composite sampling"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0001241",
      "recommended": true,
      "any_of": [
        {
          "range": "collection method menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "nucleic acid extraction method": {
      "name": "nucleic acid extraction method",
      "description": "The process used to extract genomic material from a sample.",
      "title": "nucleic acid extraction method",
      "comments": [
        "Briefly describe the extraction method used."
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100939",
      "range": "WhitespaceMinimizedString"
    },
    "extraction kit": {
      "name": "extraction kit",
      "description": "The kit used to extract genomic material from a sample",
      "title": "extraction kit",
      "comments": [
        "Provide the name of the genomic extraction kit used."
      ],
      "examples": [
        {
          "value": "QIAamp PowerFecal Pro DNA Kit"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100772",
      "range": "WhitespaceMinimizedString"
    },
    "endogenous control details": {
      "name": "endogenous control details",
      "description": "The description of the endogenous controls included when extracting a sample.",
      "title": "endogenous control details",
      "comments": [
        "Provide the names of endogenous controls that were used as a reference during extraction. If relevant, include titers of these controls, as well as whether any controls were expected but not identified in the sample."
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100923",
      "range": "WhitespaceMinimizedString",
      "recommended": true
    },
    "extraction recovery efficiency measurement value": {
      "name": "extraction recovery efficiency measurement value",
      "description": "The recovery efficiency of an extraction, calculated as the amount of a synthetic or endogenous compound identified in the sample relative to the amount expected.",
      "title": "extraction recovery efficiency measurement value",
      "comments": [
        "Provide value as a percent."
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100924",
      "range": "WhitespaceMinimizedString"
    },
    "extraction recovery efficiency measurement method": {
      "name": "extraction recovery efficiency measurement method",
      "description": "The method by which recovery efficiency of an extraction was calculated.",
      "title": "extraction recovery efficiency measurement method",
      "comments": [
        "Provide a brief description of how extraction recovery efficiency was measured or estimated."
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100925",
      "range": "WhitespaceMinimizedString"
    },
    "water catchment area human population measurement value": {
      "name": "water catchment area human population measurement value",
      "description": "The numerical value of the human population measurement that contributes to the composition of water in a catchment area.",
      "title": "water catchment area human population measurement value",
      "comments": [
        "Where known, provide the numerical value of population size, i.e. the number of people."
      ],
      "examples": [
        {
          "value": "10,500"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100773",
      "recommended": true,
      "any_of": [
        {
          "range": "integer"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "water catchment area human population range": {
      "name": "water catchment area human population range",
      "description": "The human population range of the water catchment that contributes effluent to a wastewater site.",
      "title": "water catchment area human population range",
      "comments": [
        "Where catchment population is not well known, provide an estimation of population size by selecting a value from the picklist."
      ],
      "examples": [
        {
          "value": "1,000 - 10,000 people"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100774",
      "any_of": [
        {
          "range": "water catchment area human population range menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "water catchment area human population measurement method": {
      "name": "water catchment area human population measurement method",
      "description": "The method by which a water catchment 's human population size was measured or estimated",
      "title": "water catchment area human population measurement method",
      "comments": [
        "Provide a brief description of how catchment population size was measured or estimated."
      ],
      "examples": [
        {
          "value": "population of jurisdiction encompassing the wastewater service area"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100775",
      "range": "WhitespaceMinimizedString"
    },
    "water catchment area human population density value": {
      "name": "water catchment area human population density value",
      "description": "The numerical value describing the number of humans per geographical area in a water catchment.",
      "title": "water catchment area human population density value",
      "comments": [
        "Provide the numerical value of the population density in the catchement area."
      ],
      "examples": [
        {
          "value": "4"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100776",
      "range": "WhitespaceMinimizedString"
    },
    "water catchment area human population density unit": {
      "name": "water catchment area human population density unit",
      "description": "The unit describing the number of humans per geographical area in a water catchment.",
      "title": "water catchment area human population density unit",
      "comments": [
        "Provide the unit of the population density in the catchement area."
      ],
      "examples": [
        {
          "value": "persons per Km^2"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100777",
      "any_of": [
        {
          "range": "water catchment area human population density unit menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "populated area type": {
      "name": "populated area type",
      "description": "A type of area that is populated by humans to different degrees.",
      "title": "populated area type",
      "comments": [
        "Provide the populated area type from the pick list."
      ],
      "examples": [
        {
          "value": "Urban area"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100778",
      "any_of": [
        {
          "range": "populated area type menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "sampling weather conditions": {
      "name": "sampling weather conditions",
      "description": "The state of the atmosphere at a place and time as regards heat, dryness, sunshine, wind, rain, etc.",
      "title": "sampling weather conditions",
      "comments": [
        "Provide the weather conditions at the time of sample collection."
      ],
      "examples": [
        {
          "value": "Rain"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100779",
      "any_of": [
        {
          "range": "sampling weather conditions menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "presampling weather conditions": {
      "name": "presampling weather conditions",
      "description": "Weather conditions prior to collection that may affect the sample.",
      "title": "presampling weather conditions",
      "comments": [
        "Provide the weather conditions prior to sample collection."
      ],
      "examples": [
        {
          "value": "Drizzle"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100780",
      "any_of": [
        {
          "range": "presampling weather conditions menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "precipitation measurement value": {
      "name": "precipitation measurement value",
      "description": "The amount of water which has fallen during a precipitation process.",
      "title": "precipitation measurement value",
      "comments": [
        "Provide the quantity of precipitation in the area leading up to the time of sample collection."
      ],
      "examples": [
        {
          "value": "12"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100911",
      "recommended": true,
      "any_of": [
        {
          "range": "WhitespaceMinimizedString"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "precipitation measurement unit": {
      "name": "precipitation measurement unit",
      "description": "The units of measurement for the amount of water which has fallen during a precipitation process.",
      "title": "precipitation measurement unit",
      "comments": [
        "Provide the units of precipitation by selecting a value from the pick list."
      ],
      "examples": [
        {
          "value": "inch"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100912",
      "recommended": true,
      "any_of": [
        {
          "range": "precipitation measurement unit menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "precipitation measurement method": {
      "name": "precipitation measurement method",
      "description": "The process used to measure the amount of water which has fallen during a precipitation process.",
      "title": "precipitation measurement method",
      "comments": [
        "Provide the name of the procedure or method used to measure precipitation."
      ],
      "examples": [
        {
          "value": "Rain gauge over a 12 hour period prior to sample collection"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100913",
      "range": "WhitespaceMinimizedString"
    },
    "ambient temperature measurement value": {
      "name": "ambient temperature measurement value",
      "description": "The numerical value of a measurement of the ambient temperature.",
      "title": "ambient temperature measurement value",
      "comments": [
        "Provide the numerical value of the measured temperature."
      ],
      "examples": [
        {
          "value": "70"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100935",
      "range": "WhitespaceMinimizedString"
    },
    "ambient temperature measurement unit": {
      "name": "ambient temperature measurement unit",
      "description": "The units of a measurement of the ambient temperature.",
      "title": "ambient temperature measurement unit",
      "comments": [
        "Provide the units of the measured temperature."
      ],
      "examples": [
        {
          "value": "degree Celsius (C)"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100936",
      "any_of": [
        {
          "range": "ambient temperature measurement unit menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "pH measurement value": {
      "name": "pH measurement value",
      "description": "The measured pH value indicating the acidity or basicity(alkalinity) of an aqueous solution.",
      "title": "pH measurement value",
      "comments": [
        "Provide the numerical value of the measured pH."
      ],
      "examples": [
        {
          "value": "7.4"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0001736",
      "range": "WhitespaceMinimizedString"
    },
    "pH measurement method": {
      "name": "pH measurement method",
      "description": "The process used to measure pH value.",
      "title": "pH measurement method",
      "comments": [
        "Provide the name of the procedure or technology used to measure pH."
      ],
      "examples": [
        {
          "value": "pH test strip (litmus test)"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100781",
      "range": "WhitespaceMinimizedString"
    },
    "total daily flow rate measurement value": {
      "name": "total daily flow rate measurement value",
      "description": "The numerical value of a measured fluid flow rate over the course of a day.",
      "title": "total daily flow rate measurement value",
      "comments": [
        "Provide the numerical value of the measured flow rate."
      ],
      "examples": [
        {
          "value": "10"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100905",
      "range": "WhitespaceMinimizedString"
    },
    "total daily flow rate measurement unit": {
      "name": "total daily flow rate measurement unit",
      "description": "The units of a measured fluid flow rate over the course of a day.",
      "title": "total daily flow rate measurement unit",
      "comments": [
        "Provide the units of the measured flow rate by selecting a value from the pick list."
      ],
      "examples": [
        {
          "value": "million gallons per day (MGD)"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100906",
      "any_of": [
        {
          "range": "total daily flow rate measurement unit menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "total daily flow rate measurement method": {
      "name": "total daily flow rate measurement method",
      "description": "The process used to measure total daily fluid flow rate.",
      "title": "total daily flow rate measurement method",
      "comments": [
        "Provide the name of the procedure or technology used to measure flow rate."
      ],
      "examples": [
        {
          "value": "Flow meter"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100907",
      "range": "WhitespaceMinimizedString"
    },
    "instantaneous flow rate measurement value": {
      "name": "instantaneous flow rate measurement value",
      "description": "The numerical value of a measured instantaneous fluid flow rate.",
      "title": "instantaneous flow rate measurement value",
      "comments": [
        "Provide the numerical value of the measured flow rate."
      ],
      "examples": [
        {
          "value": "25"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100908",
      "range": "WhitespaceMinimizedString"
    },
    "instantaneous flow rate measurement unit": {
      "name": "instantaneous flow rate measurement unit",
      "description": "The units of a measured instantaneous fluid flow rate.",
      "title": "instantaneous flow rate measurement unit",
      "comments": [
        "Provide the units of the measured flow rate by selecting a value from the pick list."
      ],
      "examples": [
        {
          "value": "cubic meter per hour (m^3/h)"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100909",
      "any_of": [
        {
          "range": "instantaneous flow rate measurement unit menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "instantaneous flow rate measurement method": {
      "name": "instantaneous flow rate measurement method",
      "description": "The process used to measure instantaneous fluid flow rate.",
      "title": "instantaneous flow rate measurement method",
      "comments": [
        "Provide the name of the procedure or technology used to measure flow rate."
      ],
      "examples": [
        {
          "value": "Flow meter"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100910",
      "range": "WhitespaceMinimizedString"
    },
    "turbidity measurement value": {
      "name": "turbidity measurement value",
      "description": "The numerical value of a measurement of turbidity.",
      "title": "turbidity measurement value",
      "comments": [
        "Provide the numerical value of the measured turbidity."
      ],
      "examples": [
        {
          "value": "0.02"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100783",
      "range": "WhitespaceMinimizedString",
      "recommended": true
    },
    "turbidity measurement unit": {
      "name": "turbidity measurement unit",
      "description": "The units of a measurement of turbidity.",
      "title": "turbidity measurement unit",
      "comments": [
        "Provide the units of the measured turbidity by selecting a value from the pick list."
      ],
      "examples": [
        {
          "value": "nephelometric turbidity unit (NTU)"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100914",
      "recommended": true,
      "any_of": [
        {
          "range": "turbidity measurement unit menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "turbidity measurement method": {
      "name": "turbidity measurement method",
      "description": "The process used to measure turbidity.",
      "title": "turbidity measurement method",
      "comments": [
        "Provide the name of the procedure or technology used to measure turbidity."
      ],
      "examples": [
        {
          "value": "Nephelometric method"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100783",
      "range": "WhitespaceMinimizedString"
    },
    "dissolved oxygen measurement value": {
      "name": "dissolved oxygen measurement value",
      "description": "The numerical value of a measurement of dissolved oxygen.",
      "title": "dissolved oxygen measurement value",
      "comments": [
        "Provide the numerical value of the measured dissolved oxygen."
      ],
      "examples": [
        {
          "value": "5"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100915",
      "range": "WhitespaceMinimizedString"
    },
    "dissolved oxygen measurement unit": {
      "name": "dissolved oxygen measurement unit",
      "description": "The units of a measurement of dissolved oxygen.",
      "title": "dissolved oxygen measurement unit",
      "comments": [
        "Provide the units of the measured dissolved oxygen by selecting a value from the pick list."
      ],
      "examples": [
        {
          "value": "part per million (ppm)"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100784",
      "any_of": [
        {
          "range": "dissolved oxygen measurement unit menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "dissolved oxygen measurement method": {
      "name": "dissolved oxygen measurement method",
      "description": "The method used to measure dissolved oxygen.",
      "title": "dissolved oxygen measurement method",
      "comments": [
        "Provide the name of the procedure or technology used to measure dissolved oxygen."
      ],
      "examples": [
        {
          "value": "Dissolved oxygen meter in vertical direction"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100785",
      "range": "WhitespaceMinimizedString"
    },
    "oxygen reduction potential (ORP) measurement value": {
      "name": "oxygen reduction potential (ORP) measurement value",
      "description": "The numerical value of a measurement of oxygen reduction potential (ORP).",
      "title": "oxygen reduction potential (ORP) measurement value",
      "comments": [
        "Provide the numerical value of the measured oxygen reduction potential."
      ],
      "examples": [
        {
          "value": "-50"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100917",
      "range": "WhitespaceMinimizedString"
    },
    "oxygen reduction potential (ORP) measurement unit": {
      "name": "oxygen reduction potential (ORP) measurement unit",
      "description": "The units of a measurement of oxygen reduction potential (ORP).",
      "title": "oxygen reduction potential (ORP) measurement unit",
      "comments": [
        "Provide the units of the measured oxygen reduction potential by selecting a value from the pick list."
      ],
      "examples": [
        {
          "value": "milliVolt (mV)"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100786",
      "any_of": [
        {
          "range": "oxygen reduction potential (ORP) measurement unit menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "oxygen reduction potential (ORP) measurement method": {
      "name": "oxygen reduction potential (ORP) measurement method",
      "description": "The method used to measure oxygen reduction potential (ORP).",
      "title": "oxygen reduction potential (ORP) measurement method",
      "comments": [
        "Provide the name of the procedure or technology used to measure oxygen reduction potential."
      ],
      "examples": [
        {
          "value": "ORP sensor"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100787",
      "range": "WhitespaceMinimizedString"
    },
    "chemical oxygen demand (COD) measurement value": {
      "name": "chemical oxygen demand (COD) measurement value",
      "description": "The measured value from a chemical oxygen demand (COD) test.",
      "title": "chemical oxygen demand (COD) measurement value",
      "comments": [
        "Provide the numerical value of the COD test result."
      ],
      "examples": [
        {
          "value": "26"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100788",
      "range": "WhitespaceMinimizedString"
    },
    "chemical oxygen demand (COD) measurement unit": {
      "name": "chemical oxygen demand (COD) measurement unit",
      "description": "The units associated with a value from a chemical oxygen demand (COD) test.",
      "title": "chemical oxygen demand (COD) measurement unit",
      "comments": [
        "Provide the units of the COD test result."
      ],
      "examples": [
        {
          "value": "milligram per liter (mg/L)"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100789",
      "any_of": [
        {
          "range": "chemical oxygen demand (COD) measurement unit menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "chemical oxygen demand (COD) measurement method": {
      "name": "chemical oxygen demand (COD) measurement method",
      "description": "The method used to measure chemical oxygen demand (COD).",
      "title": "chemical oxygen demand (COD) measurement method",
      "comments": [
        "Provide the name of the procedure or technology used to measure COD."
      ],
      "examples": [
        {
          "value": "Hach LCK test kit"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100790",
      "range": "WhitespaceMinimizedString"
    },
    "carbonaceous biochemical oxygen demand (CBOD) measurement value": {
      "name": "carbonaceous biochemical oxygen demand (CBOD) measurement value",
      "description": "The numerical value of a measurement of carbonaceous biochemical oxygen demand (CBOD).",
      "title": "carbonaceous biochemical oxygen demand (CBOD) measurement value",
      "comments": [
        "Provide the numerical value of the measured CBOD."
      ],
      "examples": [
        {
          "value": "20"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100791",
      "range": "WhitespaceMinimizedString"
    },
    "carbonaceous biochemical oxygen demand (CBOD) measurement unit": {
      "name": "carbonaceous biochemical oxygen demand (CBOD) measurement unit",
      "description": "The units of a measurement of carbonaceous biochemical oxygen demand (CBOD).",
      "title": "carbonaceous biochemical oxygen demand (CBOD) measurement unit",
      "comments": [
        "Provide the units of the measured CBOD by selecting a value from the pick list."
      ],
      "examples": [
        {
          "value": "milligram per liter (mg/L)"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100792",
      "any_of": [
        {
          "range": "carbonaceous biochemical oxygen demand (CBOD) measurement unit menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "carbonaceous biochemical oxygen demand (CBOD) measurement method": {
      "name": "carbonaceous biochemical oxygen demand (CBOD) measurement method",
      "description": "The method used to measure carbonaceous biochemical oxygen demand (CBOD).",
      "title": "carbonaceous biochemical oxygen demand (CBOD) measurement method",
      "comments": [
        "Provide the name of the procedure or technology used to measure CBOD."
      ],
      "examples": [
        {
          "value": "CBOD measurement by optical probe"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100793",
      "range": "WhitespaceMinimizedString"
    },
    "total suspended solids (TSS) measurement value": {
      "name": "total suspended solids (TSS) measurement value",
      "description": "The numerical value from a total suspended solids (TSS) test.",
      "title": "total suspended solids (TSS) measurement value",
      "comments": [
        "Provide the numerical value of the measured TSS."
      ],
      "examples": [
        {
          "value": "8"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100794",
      "range": "WhitespaceMinimizedString"
    },
    "total suspended solids (TSS) measurement unit": {
      "name": "total suspended solids (TSS) measurement unit",
      "description": "The units associated with a value from a total suspended solids (TSS) test.",
      "title": "total suspended solids (TSS) measurement unit",
      "comments": [
        "Provide the units of the measured TSS."
      ],
      "examples": [
        {
          "value": "percent (%)"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100795",
      "any_of": [
        {
          "range": "total suspended solids (TSS) measurement unit menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "total suspended solids (TSS) measurement method": {
      "name": "total suspended solids (TSS) measurement method",
      "description": "The method used to measure total suspended solids (TSS).",
      "title": "total suspended solids (TSS) measurement method",
      "comments": [
        "Provide the name of the procedure or technology used to measure TSS."
      ],
      "examples": [
        {
          "value": "Vacuum filter through a 2-micron filter, then oven-dried and weighed sample"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100796",
      "range": "WhitespaceMinimizedString"
    },
    "total dissolved solids (TDS) measurement value": {
      "name": "total dissolved solids (TDS) measurement value",
      "description": "The numerical value from a total dissolved solids (TDS) test.",
      "title": "total dissolved solids (TDS) measurement value",
      "comments": [
        "Provide the numerical value of the measured TDS."
      ],
      "examples": [
        {
          "value": "2"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100797",
      "range": "WhitespaceMinimizedString"
    },
    "total dissolved solids (TDS) measurement unit": {
      "name": "total dissolved solids (TDS) measurement unit",
      "description": "The units associated with a value from a total dissolved solids (TDS) test.",
      "title": "total dissolved solids (TDS) measurement unit",
      "comments": [
        "Provide the units of the measured TDS."
      ],
      "examples": [
        {
          "value": "percent (%)"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100798",
      "any_of": [
        {
          "range": "total dissolved solids (TDS) measurement unit menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "total dissolved solids (TDS) measurement method": {
      "name": "total dissolved solids (TDS) measurement method",
      "description": "The method used to measure total dissolved solids (TDS).",
      "title": "total dissolved solids (TDS) measurement method",
      "comments": [
        "Provide the name of the procedure or technology used to measure TDS."
      ],
      "examples": [
        {
          "value": "Subtract calculated TSS from calculated TS"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100799",
      "range": "WhitespaceMinimizedString"
    },
    "total solids (TS) measurement value": {
      "name": "total solids (TS) measurement value",
      "description": "The numerical value from a total solids (TS) test.",
      "title": "total solids (TS) measurement value",
      "comments": [
        "Provide the numerical value of the measured TS."
      ],
      "examples": [
        {
          "value": "10"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100800",
      "range": "WhitespaceMinimizedString"
    },
    "total solids (TS) measurement unit": {
      "name": "total solids (TS) measurement unit",
      "description": "The units associated with a value from a total solids (TS) test.",
      "title": "total solids (TS) measurement unit",
      "comments": [
        "Provide the units of the measured TS."
      ],
      "examples": [
        {
          "value": "percent (%)"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100801",
      "any_of": [
        {
          "range": "total solids (TS) measurement unit menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "total solids (TS) measurement method": {
      "name": "total solids (TS) measurement method",
      "description": "The method used to measure total solids (TS).",
      "title": "total solids (TS) measurement method",
      "comments": [
        "Provide the name of the procedure or technology used to measure TS."
      ],
      "examples": [
        {
          "value": "Gravimetric method by oven drying, then weighing"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100802",
      "range": "WhitespaceMinimizedString"
    },
    "alkalinity measurement value": {
      "name": "alkalinity measurement value",
      "description": "The numerical value of a measurement of alkalinity.",
      "title": "alkalinity measurement value",
      "comments": [
        "Provide the numerical value of the measured alkalinity."
      ],
      "examples": [
        {
          "value": "3"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100878",
      "range": "WhitespaceMinimizedString"
    },
    "alkalinity measurement unit": {
      "name": "alkalinity measurement unit",
      "description": "The units of a measurement of alkalinity.",
      "title": "alkalinity measurement unit",
      "comments": [
        "Provide the units of the measured alkalinity."
      ],
      "examples": [
        {
          "value": "milligram per liter of calcium carbonate (mg/L CaCO3)"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100879",
      "any_of": [
        {
          "range": "alkalinity measurement unit menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "alkalinity measurement method": {
      "name": "alkalinity measurement method",
      "description": "The process used to measure alkalinity.",
      "title": "alkalinity measurement method",
      "comments": [
        "Provide the name of the procedure or technology used to measure alkalinity."
      ],
      "examples": [
        {
          "value": "Titration method"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100880",
      "range": "WhitespaceMinimizedString"
    },
    "conductivity measurement value": {
      "name": "conductivity measurement value",
      "description": "The numerical value of a measurement of conductivity.",
      "title": "conductivity measurement value",
      "comments": [
        "Provide the numerical value of the measured conductivity."
      ],
      "examples": [
        {
          "value": "1412"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100916",
      "range": "WhitespaceMinimizedString"
    },
    "conductivity measurement unit": {
      "name": "conductivity measurement unit",
      "description": "The units of a measurement of conductivity.",
      "title": "conductivity measurement unit",
      "comments": [
        "Provide the units of the measured conductivity."
      ],
      "examples": [
        {
          "value": "microSiemen per centimeter (μS/cm)"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100803",
      "any_of": [
        {
          "range": "conductivity measurement unit menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "conductivity measurement method": {
      "name": "conductivity measurement method",
      "description": "The method used to measure conductivity.",
      "title": "conductivity measurement method",
      "comments": [
        "Provide the name of the procedure or technology used to measure conductivity."
      ],
      "examples": [
        {
          "value": "Conductivity electrode and meter"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100804",
      "range": "WhitespaceMinimizedString"
    },
    "salinity measurement value": {
      "name": "salinity measurement value",
      "description": "The numerical value of a measurement of salinity.",
      "title": "salinity measurement value",
      "comments": [
        "Provide the numerical value of the measured salinity."
      ],
      "examples": [
        {
          "value": "35"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100805",
      "range": "WhitespaceMinimizedString"
    },
    "salinity measurement unit": {
      "name": "salinity measurement unit",
      "description": "The units of a measurement of salinity.",
      "title": "salinity measurement unit",
      "comments": [
        "Provide the units of the measured salinity."
      ],
      "examples": [
        {
          "value": "practical salinity unit (PSU)"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100806",
      "any_of": [
        {
          "range": "salinity measurement unit menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "salinity measurement method": {
      "name": "salinity measurement method",
      "description": "The method used to measure salinity.",
      "title": "salinity measurement method",
      "comments": [
        "Provide the name of the procedure or technology used to measure salinity."
      ],
      "examples": [
        {
          "value": "conductivity meter"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100807",
      "range": "WhitespaceMinimizedString"
    },
    "total nitrogen (TN) measurement value": {
      "name": "total nitrogen (TN) measurement value",
      "description": "The numerical value of a measurement of total nitrogen (TN).",
      "title": "total nitrogen (TN) measurement value",
      "comments": [
        "Provide the numerical value of the measured TN."
      ],
      "examples": [
        {
          "value": "120"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100808",
      "range": "WhitespaceMinimizedString"
    },
    "total nitrogen (TN) measurement unit": {
      "name": "total nitrogen (TN) measurement unit",
      "description": "The units of a measurement of total nitrogen (TN).",
      "title": "total nitrogen (TN) measurement unit",
      "comments": [
        "Provide the units of the measured TN."
      ],
      "examples": [
        {
          "value": "milligram per liter (mg/L)"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100809",
      "any_of": [
        {
          "range": "total nitrogen (TN) measurement unit menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "total nitrogen (TN) measurement method": {
      "name": "total nitrogen (TN) measurement method",
      "description": "The method used to measure total nitrogen (TN).",
      "title": "total nitrogen (TN) measurement method",
      "comments": [
        "Provide the name of the procedure or technology used to measure TN."
      ],
      "examples": [
        {
          "value": "Hach total nitrogen spectrophotometric test"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100810",
      "range": "WhitespaceMinimizedString"
    },
    "total phosphorus (TP) measurement value": {
      "name": "total phosphorus (TP) measurement value",
      "description": "The numerical value of a measurement of total phosphorus (TP).",
      "title": "total phosphorus (TP) measurement value",
      "comments": [
        "Provide the numerical value of the measured TP."
      ],
      "examples": [
        {
          "value": "2"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100811",
      "range": "WhitespaceMinimizedString"
    },
    "total phosphorus (TP) measurement unit": {
      "name": "total phosphorus (TP) measurement unit",
      "description": "The units of a measurement of total phosphorus (TP).",
      "title": "total phosphorus (TP) measurement unit",
      "comments": [
        "Provide the units of the measured TP."
      ],
      "examples": [
        {
          "value": "milligrams orthophosphate as phosphorus per liter (mg PO4-P/L)"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100812",
      "any_of": [
        {
          "range": "total phosphorus (TP) measurement unit menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "total phosphorus (TP) measurement method": {
      "name": "total phosphorus (TP) measurement method",
      "description": "The method used to measure total phosphorus (TP).",
      "title": "total phosphorus (TP) measurement method",
      "comments": [
        "Provide the name of the procedure or technology used to measure TP."
      ],
      "examples": [
        {
          "value": "Merck phosphate spectrophotometric test kit"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100813",
      "range": "WhitespaceMinimizedString"
    },
    "fecal contamination indicator": {
      "name": "fecal contamination indicator",
      "description": "A gene, virus, bacteria, or substance used to measure the sanitary quality of water in regards to fecal contamination.",
      "title": "fecal contamination indicator",
      "comments": [
        "If a fecal contamination indicator was measured, select it from the picklist."
      ],
      "examples": [
        {
          "value": "crAssphage"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100814",
      "recommended": true,
      "any_of": [
        {
          "range": "fecal contamination indicator  menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "fecal contamination value": {
      "name": "fecal contamination value",
      "description": "The numerical value of a measurement of fecal contamination.",
      "title": "fecal contamination value",
      "comments": [
        "Provide the numerical value of the measured fecal contamination."
      ],
      "examples": [
        {
          "value": "10"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100815",
      "range": "WhitespaceMinimizedString",
      "recommended": true
    },
    "fecal contamination unit": {
      "name": "fecal contamination unit",
      "description": "The units of a measurement of fecal contamination.",
      "title": "fecal contamination unit",
      "comments": [
        "Provide the units of the measured fecal contamination."
      ],
      "examples": [
        {
          "value": "cycle threshold (Ct) / quantification cycle (Cq)"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100816",
      "recommended": true,
      "any_of": [
        {
          "range": "fecal contamination unit menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "fecal contamination method": {
      "name": "fecal contamination method",
      "description": "The method used to measure fecal contamination.",
      "title": "fecal contamination method",
      "comments": [
        "Provide the name of the procedure or technology used to measure fecal contamination."
      ],
      "examples": [
        {
          "value": "quantitative PCR assay"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100817",
      "range": "WhitespaceMinimizedString"
    },
    "fecal coliform count value": {
      "name": "fecal coliform count value",
      "description": "The numerical value of a measurement of fecal coliforms within a sample.",
      "title": "fecal coliform count value",
      "comments": [
        "Provide the numerical value of the measured fecal coliforms."
      ],
      "examples": [
        {
          "value": "3"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100818",
      "range": "WhitespaceMinimizedString"
    },
    "fecal coliform count unit": {
      "name": "fecal coliform count unit",
      "description": "The units of a measurement of fecal coliforms.",
      "title": "fecal coliform count unit",
      "comments": [
        "Provide the units of the measured fecal coliforms."
      ],
      "examples": [
        {
          "value": "most probable number per milliliter (MPN/mL)"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100819",
      "any_of": [
        {
          "range": "fecal coliform count unit menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "fecal coliform count method": {
      "name": "fecal coliform count method",
      "description": "The method used to measure fecal coliforms.",
      "title": "fecal coliform count method",
      "comments": [
        "Provide the name of the procedure or technology used to measure fecal coliforms."
      ],
      "examples": [
        {
          "value": "MPN method via serial dilutions until lack of growth"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100820",
      "range": "WhitespaceMinimizedString"
    },
    "urinary contamination indicator": {
      "name": "urinary contamination indicator",
      "description": "A gene, virus, bacteria, or substance used to measure the sanitary quality of water in regards to urinary contamination.",
      "title": "urinary contamination indicator",
      "comments": [
        "If a urinary contamination indicator was measured, select it from the picklist."
      ],
      "examples": [
        {
          "value": "urobilin"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100837",
      "any_of": [
        {
          "range": "urinary contamination indicator menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "urinary contamination value": {
      "name": "urinary contamination value",
      "description": "The numerical value of a measurement of urinary contamination.",
      "title": "urinary contamination value",
      "comments": [
        "Provide the numerical value of the measured urinary contamination."
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100838",
      "range": "WhitespaceMinimizedString"
    },
    "urinary contamination unit": {
      "name": "urinary contamination unit",
      "description": "The units of a measurement of urinary contamination.",
      "title": "urinary contamination unit",
      "comments": [
        "Provide the units of the measured urinary contamination."
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100839",
      "any_of": [
        {
          "range": "urinary contamination unit menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "urinary contamination method": {
      "name": "urinary contamination method",
      "description": "The method used to measure urinary contamination.",
      "title": "urinary contamination method",
      "comments": [
        "Provide the name of the procedure or technology used to measure urinary contamination."
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100840",
      "range": "WhitespaceMinimizedString"
    },
    "sample temperature value (at collection)": {
      "name": "sample temperature value (at collection)",
      "description": "The numerical value of a measurement of temperature of a sample at collection.",
      "title": "sample temperature value (at collection)",
      "comments": [
        "Provide the numerical value of the measured temperature."
      ],
      "examples": [
        {
          "value": "20"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100821",
      "range": "WhitespaceMinimizedString"
    },
    "sample temperature unit (at collection)": {
      "name": "sample temperature unit (at collection)",
      "description": "The units of a measurement of temperature of a sample at the time of collection.",
      "title": "sample temperature unit (at collection)",
      "comments": [
        "Provide the units of the measured temperature."
      ],
      "examples": [
        {
          "value": "degree Celsius (C)"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100822",
      "any_of": [
        {
          "range": "sample temperature unit (at collection) menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "sample temperature value (when received)": {
      "name": "sample temperature value (when received)",
      "description": "The numerical value of a measurement of temperature of a sample upon receipt.",
      "title": "sample temperature value (when received)",
      "comments": [
        "Provide the numerical value of the measured temperature."
      ],
      "examples": [
        {
          "value": "22"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100823",
      "range": "WhitespaceMinimizedString"
    },
    "sample temperature unit (when received)": {
      "name": "sample temperature unit (when received)",
      "description": "The units of a measurement of temperature of a sample at the time upon receipt.",
      "title": "sample temperature unit (when received)",
      "comments": [
        "Provide the units of the measured temperature."
      ],
      "examples": [
        {
          "value": "degree Celsius (C)"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100824",
      "any_of": [
        {
          "range": "sample temperature unit (when received) menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "purpose of sequencing": {
      "name": "purpose of sequencing",
      "description": "The reason that the sample was sequenced.",
      "title": "purpose of sequencing",
      "comments": [
        "The reason why a sample was originally collected may differ from the reason why it was selected for sequencing. The reason a sample was sequenced may provide information about potential biases in sequencing strategy. Provide the purpose of sequencing from the picklist in the template. The reason for sample collection should be indicated in the \"purpose of sampling\" field."
      ],
      "examples": [
        {
          "value": "Travel-associated surveillance"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0001445",
      "required": true,
      "any_of": [
        {
          "range": "purpose of sequencing menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "purpose of sequencing details": {
      "name": "purpose of sequencing details",
      "description": "The description of why the sample was sequenced providing specific details.",
      "title": "purpose of sequencing details",
      "comments": [
        "Provide an expanded description of why the sample was sequenced using free text. The description may include the importance of the sequences for a particular public health investigation/surveillance activity/research question. Suggested standardized descriptions include: Assessing public health control measures, Determining early introductions and spread, Investigating airline-related exposures, Investigating remote regions, Investigating health care workers, Investigating schools/universities."
      ],
      "examples": [
        {
          "value": "Investigating schools/universities"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0001446",
      "range": "WhitespaceMinimizedString"
    },
    "sequence submitted by": {
      "name": "sequence submitted by",
      "description": "The name of the agency that submitted the sequence to a database.",
      "title": "sequence submitted by",
      "comments": [
        "The name of the agency should be written out in full, (with minor exceptions) and be consistent across multiple submissions. If submitting specimens rather than sequencing data, please put the \"National Microbiology Laboratory (NML)\"."
      ],
      "examples": [
        {
          "value": "Public Health Ontario (PHO)"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0001159",
      "required": true,
      "any_of": [
        {
          "range": "WhitespaceMinimizedString"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "sequence submitter contact email": {
      "name": "sequence submitter contact email",
      "description": "The email address of the contact responsible for follow-up regarding the sequence.",
      "title": "sequence submitter contact email",
      "comments": [
        "The email address can represent a specific individual or laboratory."
      ],
      "examples": [
        {
          "value": "RespLab@lab.ca"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0001165",
      "recommended": true,
      "pattern": "^\\S+@\\S+\\.\\S+$",
      "any_of": [
        {
          "range": "WhitespaceMinimizedString"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "sequencing date": {
      "name": "sequencing date",
      "description": "The date the sample was sequenced.",
      "title": "sequencing date",
      "todos": [
        ">={sample collection date}"
      ],
      "comments": [
        "ISO 8601 standard \"YYYY-MM-DD\"."
      ],
      "examples": [
        {
          "value": "2020-06-22"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0001447",
      "range": "date"
    },
    "library ID": {
      "name": "library ID",
      "description": "The user-specified identifier for the library prepared for sequencing.",
      "title": "library ID",
      "comments": [
        "The library name should be unique, and can be an autogenerated ID from your LIMS, or modification of the isolate ID."
      ],
      "examples": [
        {
          "value": "XYZ_123345"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0001448",
      "range": "WhitespaceMinimizedString"
    },
    "sequencing platform": {
      "name": "sequencing platform",
      "description": "The platform technology used to perform the sequencing.",
      "title": "sequencing platform",
      "comments": [
        "Provide the name of the company that created the sequencing instrument by selecting a value from the template pick list. If the information is unknown or cannot be provided, leave blank or provide a null value."
      ],
      "examples": [
        {
          "value": "Illumina [GENEPIO:0001923]"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100473",
      "any_of": [
        {
          "range": "sequencing platform menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "sequencing instrument": {
      "name": "sequencing instrument",
      "description": "The model of the sequencing instrument used.",
      "title": "sequencing instrument",
      "comments": [
        "Provide the model sequencing instrument by selecting a value from the template pick list. If the information is unknown or cannot be provided, leave blank or provide a null value."
      ],
      "examples": [
        {
          "value": "Illumina HiSeq 2500 [GENEPIO:0100117]"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0001452",
      "required": true,
      "any_of": [
        {
          "range": "sequencing instrument menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "sequencing method type": {
      "name": "sequencing method type",
      "title": "sequencing method type",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "recommended": true,
      "any_of": [
        {
          "range": "sequencing method type menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "library preparation kit": {
      "name": "library preparation kit",
      "description": "The name of the DNA library preparation kit used to generate the library being sequenced.",
      "title": "library preparation kit",
      "comments": [
        "Provide the name of the library preparation kit used."
      ],
      "examples": [
        {
          "value": "Nextera XT"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0001450",
      "range": "WhitespaceMinimizedString"
    },
    "sequencing protocol": {
      "name": "sequencing protocol",
      "description": "The protocol or method used for sequencing.",
      "title": "sequencing protocol",
      "comments": [
        "Provide the name and version of the procedure or protocol used for sequencing. You can also provide a link to a protocol online."
      ],
      "examples": [
        {
          "value": "https://www.protocols.io/view/ncov-2019-sequencing-protocol-bbmuik6w?version_warning=no"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0001454",
      "range": "WhitespaceMinimizedString",
      "recommended": true
    },
    "DNA fragment length": {
      "name": "DNA fragment length",
      "description": "The length of the DNA fragment generated by mechanical shearing or enzymatic digestion for the purposes of library preparation.",
      "title": "DNA fragment length",
      "comments": [
        "Provide the fragment length in base pairs (do not include the units)."
      ],
      "examples": [
        {
          "value": "400"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100843",
      "range": "WhitespaceMinimizedString"
    },
    "genomic target enrichment method": {
      "name": "genomic target enrichment method",
      "title": "genomic target enrichment method",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100966",
      "recommended": true,
      "any_of": [
        {
          "range": "genomic target enrichment method menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "genomic target enrichment method details": {
      "name": "genomic target enrichment method details",
      "title": "genomic target enrichment method details",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100967",
      "range": "WhitespaceMinimizedString"
    },
    "amplicon pcr primer scheme": {
      "name": "amplicon pcr primer scheme",
      "description": "The specifications of the primers (primer sequences, binding positions, fragment size generated etc) used to generate the amplicons to be sequenced.",
      "title": "amplicon pcr primer scheme",
      "comments": [
        "Provide the name and version of the primer scheme used to generate the amplicons for sequencing."
      ],
      "examples": [
        {
          "value": "https://github.com/joshquick/artic-ncov2019/blob/master/primer_schemes/nCoV-2019/V3/nCoV-2019.tsv"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0001456",
      "recommended": true,
      "any_of": [
        {
          "range": "amplicon pcr primer scheme menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "amplicon size": {
      "name": "amplicon size",
      "description": "The length of the amplicon generated by PCR amplification.",
      "title": "amplicon size",
      "comments": [
        "Provide the amplicon size, including the units."
      ],
      "examples": [
        {
          "value": "300bp"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0001449",
      "range": "integer"
    },
    "quality control method name": {
      "name": "quality control method name",
      "description": "The name of the method used to assess whether a sequence passed a predetermined quality control threshold.",
      "title": "quality control method name",
      "comments": [
        "Providing the name of the method used for quality control is very important for interpreting the rest of the QC information. Method names can be provided as the name of a pipeline or a link to a GitHub repository. Multiple methods should be listed and separated by a semi-colon. Do not include QC tags in other fields if no method name is provided."
      ],
      "examples": [
        {
          "value": "ncov-tools"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100557",
      "range": "WhitespaceMinimizedString"
    },
    "quality control method version": {
      "name": "quality control method version",
      "description": "The version number of the method used to assess whether a sequence passed a predetermined quality control threshold.",
      "title": "quality control method version",
      "comments": [
        "Methods updates can make big differences to their outputs. Provide the version of the method used for quality control. The version can be expressed using whatever convention the developer implements (e.g. date, semantic versioning). If multiple methods were used, record the version numbers in the same order as the method names. Separate the version numbers using a semi-colon."
      ],
      "examples": [
        {
          "value": "1.2.3"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100558",
      "range": "WhitespaceMinimizedString"
    },
    "quality control determination": {
      "name": "quality control determination",
      "description": "The determination of a quality control assessment.",
      "title": "quality control determination",
      "comments": [
        "Select a value from the pick list provided. If a desired value is missing, submit a new term request to the PHA4GE QC Tag GitHub issuetracker using the New Term Request form."
      ],
      "examples": [
        {
          "value": "sequence failed quality control"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100559",
      "any_of": [
        {
          "range": "quality control determination menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "quality control issues": {
      "name": "quality control issues",
      "description": "The reason contributing to, or causing, a low quality determination in a quality control assessment.",
      "title": "quality control issues",
      "comments": [
        "Select a value from the pick list provided. If a desired value is missing, submit a new term request to the PHA4GE QC Tag GitHub issuetracker using the New Term Request form."
      ],
      "examples": [
        {
          "value": "low average genome coverage"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100560",
      "any_of": [
        {
          "range": "quality control issues menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "quality control details": {
      "name": "quality control details",
      "description": "The details surrounding a low quality determination in a quality control assessment.",
      "title": "quality control details",
      "comments": [
        "Provide notes or details regarding QC results using free text."
      ],
      "examples": [
        {
          "value": "CT value of 39. Low viral load. Low DNA concentration after amplification."
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100561",
      "range": "WhitespaceMinimizedString"
    },
    "raw sequence data processing method": {
      "name": "raw sequence data processing method",
      "description": "The names of the software and version number used for raw data processing such as removing barcodes, adapter trimming, filtering etc.",
      "title": "raw sequence data processing method",
      "comments": [
        "Provide the software name followed by the version e.g. Trimmomatic v. 0.38, Porechop v. 0.2.3"
      ],
      "examples": [
        {
          "value": "Porechop 0.2.3"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0001458",
      "recommended": true,
      "any_of": [
        {
          "range": "WhitespaceMinimizedString"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "dehosting method": {
      "name": "dehosting method",
      "description": "The method used to remove host reads from the pathogen sequence.",
      "title": "dehosting method",
      "comments": [
        "Provide the name and version number of the software used to remove host reads."
      ],
      "examples": [
        {
          "value": "Nanostripper"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0001459",
      "recommended": true,
      "any_of": [
        {
          "range": "WhitespaceMinimizedString"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "sequence assembly software name": {
      "name": "sequence assembly software name",
      "description": "The name of the software used to assemble a sequence.",
      "title": "sequence assembly software name",
      "comments": [
        "Provide the name of the software used to assemble the sequence."
      ],
      "examples": [
        {
          "value": "SPAdes Genome Assembler, Canu, wtdbg2, velvet"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100825",
      "required": true,
      "any_of": [
        {
          "range": "WhitespaceMinimizedString"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "sequence assembly software version": {
      "name": "sequence assembly software version",
      "description": "The version of the software used to assemble a sequence.",
      "title": "sequence assembly software version",
      "comments": [
        "Provide the version of the software used to assemble the sequence."
      ],
      "examples": [
        {
          "value": "3.15.5"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100826",
      "required": true,
      "any_of": [
        {
          "range": "WhitespaceMinimizedString"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "consensus sequence software name": {
      "name": "consensus sequence software name",
      "description": "The name of the software used to generate the consensus sequence.",
      "title": "consensus sequence software name",
      "comments": [
        "Provide the name of the software used to generate the consensus sequence."
      ],
      "examples": [
        {
          "value": "iVar"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0001463",
      "required": true,
      "any_of": [
        {
          "range": "WhitespaceMinimizedString"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "consensus sequence software version": {
      "name": "consensus sequence software version",
      "description": "The version of the software used to generate the consensus sequence.",
      "title": "consensus sequence software version",
      "comments": [
        "Provide the version of the software used to generate the consensus sequence."
      ],
      "examples": [
        {
          "value": "1.3"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0001469",
      "required": true,
      "any_of": [
        {
          "range": "WhitespaceMinimizedString"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "breadth of coverage value": {
      "name": "breadth of coverage value",
      "description": "The percentage of the reference genome covered by the sequenced data, to a prescribed depth.",
      "title": "breadth of coverage value",
      "comments": [
        "Provide value as a percent."
      ],
      "examples": [
        {
          "value": "95%"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0001472",
      "range": "WhitespaceMinimizedString"
    },
    "depth of coverage value": {
      "name": "depth of coverage value",
      "description": "The average number of reads representing a given nucleotide in the reconstructed sequence.",
      "title": "depth of coverage value",
      "comments": [
        "Provide value as a fold of coverage."
      ],
      "examples": [
        {
          "value": "400x"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0001474",
      "range": "WhitespaceMinimizedString"
    },
    "depth of coverage threshold": {
      "name": "depth of coverage threshold",
      "description": "The threshold used as a cut-off for the depth of coverage.",
      "title": "depth of coverage threshold",
      "comments": [
        "Provide the threshold fold coverage."
      ],
      "examples": [
        {
          "value": "100x"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0001475",
      "range": "WhitespaceMinimizedString"
    },
    "genome completeness": {
      "name": "genome completeness",
      "description": "The percentage of expected genes identified in the genome being sequenced. Missing genes indicate missing genomic regions (incompleteness) in the data.",
      "title": "genome completeness",
      "comments": [
        "Provide the genome completeness as a percent (no need to include units)."
      ],
      "examples": [
        {
          "value": "85"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100844",
      "range": "WhitespaceMinimizedString"
    },
    "number of base pairs sequenced": {
      "name": "number of base pairs sequenced",
      "description": "The number of total base pairs generated by the sequencing process.",
      "title": "number of base pairs sequenced",
      "comments": [
        "Provide a numerical value (no need to include units)."
      ],
      "examples": [
        {
          "value": "387566"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0001482",
      "range": "integer"
    },
    "number of total reads": {
      "name": "number of total reads",
      "description": "The total number of non-unique reads generated by the sequencing process.",
      "title": "number of total reads",
      "comments": [
        "Provide a numerical value (no need to include units)."
      ],
      "examples": [
        {
          "value": "423867"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100827",
      "range": "integer"
    },
    "number of unique reads": {
      "name": "number of unique reads",
      "description": "The number of unique reads generated by the sequencing process.",
      "title": "number of unique reads",
      "comments": [
        "Provide a numerical value (no need to include units)."
      ],
      "examples": [
        {
          "value": "248236"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100828",
      "range": "integer"
    },
    "minimum post-trimming read length": {
      "name": "minimum post-trimming read length",
      "description": "The threshold used as a cut-off for the minimum length of a read after trimming.",
      "title": "minimum post-trimming read length",
      "comments": [
        "Provide a numerical value (no need to include units)."
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100829",
      "range": "integer"
    },
    "number of contigs": {
      "name": "number of contigs",
      "description": "The number of contigs (contiguous sequences) in a sequence assembly.",
      "title": "number of contigs",
      "comments": [
        "Provide a numerical value."
      ],
      "examples": [
        {
          "value": "10"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100937",
      "range": "integer"
    },
    "percent Ns across total genome length": {
      "name": "percent Ns across total genome length",
      "description": "The percentage of the assembly that consists of ambiguous bases (Ns).",
      "title": "percent Ns across total genome length",
      "comments": [
        "Provide a numerical value (no need to include units)."
      ],
      "examples": [
        {
          "value": "2"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100830",
      "range": "integer"
    },
    "Ns per 100 kbp": {
      "name": "Ns per 100 kbp",
      "description": "The number of ambiguous bases (Ns) normalized per 100 kilobasepairs (kbp).",
      "title": "Ns per 100 kbp",
      "comments": [
        "Provide a numerical value (no need to include units)."
      ],
      "examples": [
        {
          "value": "342"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0001484",
      "range": "integer"
    },
    "N50": {
      "name": "N50",
      "description": "The length of the shortest read that, together with other reads, represents at least 50% of the nucleotides in a set of sequences.",
      "title": "N50",
      "comments": [
        "Provide the N50 value in Mb."
      ],
      "examples": [
        {
          "value": "150"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100938",
      "range": "integer"
    },
    "percent read contamination": {
      "name": "percent read contamination",
      "description": "The percent of the total number of reads identified as contamination (not belonging to the target organism) in a sequence dataset.",
      "title": "percent read contamination",
      "comments": [
        "Provide the percent contamination value (no need to include units)."
      ],
      "examples": [
        {
          "value": "2"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100845",
      "range": "integer"
    },
    "sequence assembly length": {
      "name": "sequence assembly length",
      "description": "The length of the genome generated by assembling reads using a scaffold or by reference-based mapping.",
      "title": "sequence assembly length",
      "comments": [
        "Provide a numerical value (no need to include units)."
      ],
      "examples": [
        {
          "value": "34272"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100846",
      "range": "integer"
    },
    "consensus genome length": {
      "name": "consensus genome length",
      "description": "The length of the genome defined by the most common nucleotides at each position.",
      "title": "consensus genome length",
      "comments": [
        "Provide a numerical value (no need to include units)."
      ],
      "examples": [
        {
          "value": "38677"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0001483",
      "range": "integer"
    },
    "reference genome accession": {
      "name": "reference genome accession",
      "description": "A persistent, unique identifier of a genome database entry.",
      "title": "reference genome accession",
      "comments": [
        "Provide the accession number of the reference genome."
      ],
      "examples": [
        {
          "value": "NC_045512.2"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0001485",
      "range": "WhitespaceMinimizedString"
    },
    "deduplication method": {
      "name": "deduplication method",
      "description": "The method used to remove duplicated reads in a sequence read dataset.",
      "title": "deduplication method",
      "comments": [
        "Provide the deduplication software name followed by the version, or a link to a tool or method."
      ],
      "examples": [
        {
          "value": "DeDup 0.12.8"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100831",
      "range": "WhitespaceMinimizedString"
    },
    "read mapping software name": {
      "name": "read mapping software name",
      "description": "The name of the software used to map sequence reads to a reference genome or set of reference genes.",
      "title": "read mapping software name",
      "comments": [
        "Provide the name of the read mapping software."
      ],
      "examples": [
        {
          "value": "Bowtie2, BWA-MEM, TopHat"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100832",
      "range": "WhitespaceMinimizedString"
    },
    "read mapping software version": {
      "name": "read mapping software version",
      "description": "The version of the software used to map sequence reads to a reference genome or set of reference genes.",
      "title": "read mapping software version",
      "comments": [
        "Provide the version number of the read mapping software."
      ],
      "examples": [
        {
          "value": "2.5.1"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100833",
      "range": "WhitespaceMinimizedString"
    },
    "taxonomic reference database name": {
      "name": "taxonomic reference database name",
      "description": "The name of the taxonomic reference database used to identify the organism.",
      "title": "taxonomic reference database name",
      "comments": [
        "Provide the name of the taxonomic reference database."
      ],
      "examples": [
        {
          "value": "NCBITaxon"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100834",
      "range": "WhitespaceMinimizedString"
    },
    "taxonomic reference database version": {
      "name": "taxonomic reference database version",
      "description": "The version of the taxonomic reference database used to identify the organism.",
      "title": "taxonomic reference database version",
      "comments": [
        "Provide the version number of the taxonomic reference database."
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100835",
      "range": "WhitespaceMinimizedString"
    },
    "read mapping criteria": {
      "name": "read mapping criteria",
      "description": "A description of the criteria used to map reads to a reference sequence.",
      "title": "read mapping criteria",
      "comments": [
        "Provide a description of the read mapping criteria."
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100836",
      "range": "WhitespaceMinimizedString"
    },
    "bioinformatics protocol": {
      "name": "bioinformatics protocol",
      "description": "A description of the overall bioinformatics strategy used.",
      "title": "bioinformatics protocol",
      "comments": [
        "Further details regarding the methods used to process raw data, and/or generate assemblies, and/or generate consensus sequences can. This information can be provided in an SOP or protocol or pipeline/workflow. Provide the name and version number of the protocol, or a GitHub link to a pipeline or workflow."
      ],
      "examples": [
        {
          "value": "https://github.com/phac-nml/ncov2019-artic-nf"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0001489",
      "range": "WhitespaceMinimizedString"
    },
    "gene name": {
      "name": "gene name",
      "description": "The binary value of the result from a diagnostic test.",
      "title": "gene name",
      "comments": [
        "Select a value from the pick list provided, to describe whether a target was determined to be present or absent within a sample."
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100655",
      "any_of": [
        {
          "range": "gene name menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "diagnostic target presence": {
      "name": "diagnostic target presence",
      "description": "The value of the result from a diagnostic test.",
      "title": "diagnostic target presence",
      "comments": [
        "Provide the numerical result of a diagnostic test (no need to include units)."
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100962",
      "any_of": [
        {
          "range": "diagnostic target presence menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "diagnostic measurement value": {
      "name": "diagnostic measurement value",
      "description": "The unit of the result from a diagnostic test.",
      "title": "diagnostic measurement value",
      "comments": [
        "Select a value from the pick list provided, to describe the units of the given diagnostic test."
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100963",
      "range": "WhitespaceMinimizedString"
    },
    "diagnostic measurement unit": {
      "name": "diagnostic measurement unit",
      "description": "The method by which a diagnostic result was received.",
      "title": "diagnostic measurement unit",
      "comments": [
        "Select a value from the pick list provided to describe the method used for a given diagnostic test."
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100964",
      "any_of": [
        {
          "range": "diagnostic measurement unit menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "diagnostic measurement method": {
      "name": "diagnostic measurement method",
      "title": "diagnostic measurement method",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "slot_uri": "GENEPIO:0100965",
      "any_of": [
        {
          "range": "diagnostic measurement method menu"
        },
        {
          "range": "null value menu"
        }
      ]
    },
    "authors": {
      "name": "authors",
      "description": "Names of individuals contributing to the processes of sample collection, sequence generation, analysis, and data submission.",
      "title": "authors",
      "comments": [
        "Include the first and last names of all individuals that should be attributed, separated by a comma."
      ],
      "examples": [
        {
          "value": "Tejinder Singh, Fei Hu, Joe Blogs"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "exact_mappings": [
        "GISAID:Authors",
        "CNPHI:Authors",
        "NML_LIMS:PH_CANCOGEN_AUTHORS"
      ],
      "slot_uri": "GENEPIO:0001517",
      "range": "WhitespaceMinimizedString",
      "recommended": true
    },
    "DataHarmonizer provenance": {
      "name": "DataHarmonizer provenance",
      "description": "The DataHarmonizer software and template version provenance.",
      "title": "DataHarmonizer provenance",
      "comments": [
        "The current software and template version information will be automatically generated in this field after the user utilizes the \"validate\" function. This information will be generated regardless as to whether the row is valid of not."
      ],
      "examples": [
        {
          "value": "DataHarmonizer v3.3.3, Influenza v1.0.0"
        }
      ],
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "exact_mappings": [
        "GISAID:DataHarmonizer provenance",
        "CNPHI:Additional Comments",
        "NML_LIMS:HC_COMMENTS"
      ],
      "slot_uri": "GENEPIO:0001518",
      "range": "Provenance"
    }
  },
  "classes": {
    "dh_interface": {
      "name": "dh_interface",
      "description": "A DataHarmonizer interface",
      "from_schema": "https://example.com/CanCOGeN_Covid-19"
    },
    "WastewaterAMR": {
      "name": "WastewaterAMR",
      "description": "A public health microbial genomic surveillance specification for standardizing AMR metagenomics sequencing contextual data from wastewater. Developed in collaboration by CIDGOH, PHA4GE, PHAC-NML, The Broad Institute, and the Bill & Melinda Gates Foundation.",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "see_also": [
        "templates/wastewater/SOP.pdf"
      ],
      "is_a": "dh_interface",
      "slot_usage": {
        "specimen collector sample ID": {
          "name": "specimen collector sample ID",
          "rank": 1,
          "slot_group": "Database identifiers"
        },
        "specimen collector subsample ID": {
          "name": "specimen collector subsample ID",
          "rank": 1,
          "slot_group": "Database identifiers"
        },
        "pooled sample ID": {
          "name": "pooled sample ID",
          "rank": 3,
          "slot_group": "Database identifiers"
        },
        "metagenome-assembled genome (MAG) ID": {
          "name": "metagenome-assembled genome (MAG) ID",
          "rank": 4,
          "slot_group": "Database identifiers"
        },
        "specimen collector project ID": {
          "name": "specimen collector project ID",
          "rank": 5,
          "slot_group": "Database identifiers"
        },
        "BioProject accession": {
          "name": "BioProject accession",
          "rank": 6,
          "slot_group": "Database identifiers"
        },
        "BioSample accession": {
          "name": "BioSample accession",
          "rank": 7,
          "slot_group": "Database identifiers"
        },
        "GenBank accession (versioned)": {
          "name": "GenBank accession (versioned)",
          "rank": 8,
          "slot_group": "Database identifiers"
        },
        "SRA accession": {
          "name": "SRA accession",
          "rank": 9,
          "slot_group": "Database identifiers"
        },
        "GISAID accession": {
          "name": "GISAID accession",
          "rank": 10,
          "slot_group": "Database identifiers"
        },
        "GISAID virus name": {
          "name": "GISAID virus name",
          "rank": 11,
          "slot_group": "Database identifiers"
        },
        "ENA accession": {
          "name": "ENA accession",
          "rank": 12,
          "slot_group": "Database identifiers"
        },
        "DDBJ accession": {
          "name": "DDBJ accession",
          "rank": 13,
          "slot_group": "Database identifiers"
        },
        "DRA accession": {
          "name": "DRA accession",
          "rank": 14,
          "slot_group": "Database identifiers"
        },
        "GSA accession": {
          "name": "GSA accession",
          "rank": 15,
          "slot_group": "Database identifiers"
        },
        "Enterobase accession": {
          "name": "Enterobase accession",
          "rank": 16,
          "slot_group": "Database identifiers"
        },
        "sampling site ID": {
          "name": "sampling site ID",
          "rank": 17,
          "slot_group": "Database identifiers"
        },
        "sampling event ID": {
          "name": "sampling event ID",
          "rank": 18,
          "slot_group": "Database identifiers"
        },
        "sample collection data steward name": {
          "name": "sample collection data steward name",
          "rank": 19,
          "slot_group": "Sample collection and processing"
        },
        "sample collected by": {
          "name": "sample collected by",
          "rank": 20,
          "slot_group": "Sample collection and processing"
        },
        "sample collector contact email": {
          "name": "sample collector contact email",
          "rank": 21,
          "slot_group": "Sample collection and processing"
        },
        "geo_loc_name (country)": {
          "name": "geo_loc_name (country)",
          "rank": 22,
          "slot_group": "Sample collection and processing"
        },
        "geo_loc_name (state/province/territory)": {
          "name": "geo_loc_name (state/province/territory)",
          "rank": 23,
          "slot_group": "Sample collection and processing"
        },
        "geo_loc name (county/region)": {
          "name": "geo_loc name (county/region)",
          "rank": 24,
          "slot_group": "Sample collection and processing"
        },
        "geo_loc_name (city)": {
          "name": "geo_loc_name (city)",
          "rank": 25,
          "slot_group": "Sample collection and processing"
        },
        "geo_loc name (site)": {
          "name": "geo_loc name (site)",
          "rank": 26,
          "slot_group": "Sample collection and processing"
        },
        "geo_loc latitude": {
          "name": "geo_loc latitude",
          "rank": 27,
          "slot_group": "Sample collection and processing"
        },
        "geo_loc longitude": {
          "name": "geo_loc longitude",
          "rank": 28,
          "slot_group": "Sample collection and processing"
        },
        "watershed shapefile availability": {
          "name": "watershed shapefile availability",
          "rank": 29,
          "slot_group": "Sample collection and processing"
        },
        "watershed shapefile filename": {
          "name": "watershed shapefile filename",
          "rank": 30,
          "slot_group": "Sample collection and processing"
        },
        "purpose of sampling": {
          "name": "purpose of sampling",
          "rank": 31,
          "slot_group": "Sample collection and processing"
        },
        "scope of sampling": {
          "name": "scope of sampling",
          "rank": 32,
          "slot_group": "Sample collection and processing"
        },
        "sample received date": {
          "name": "sample received date",
          "rank": 33,
          "slot_group": "Sample collection and processing"
        },
        "sample collection date": {
          "name": "sample collection date",
          "rank": 34,
          "slot_group": "Sample collection and processing"
        },
        "sample processing date": {
          "name": "sample processing date",
          "rank": 35,
          "slot_group": "Sample collection and processing"
        },
        "sample collection time": {
          "name": "sample collection time",
          "rank": 36,
          "slot_group": "Sample collection and processing"
        },
        "sample collection time of day": {
          "name": "sample collection time of day",
          "rank": 37,
          "slot_group": "Sample collection and processing"
        },
        "sample collection time duration value": {
          "name": "sample collection time duration value",
          "rank": 38,
          "slot_group": "Sample collection and processing"
        },
        "sample collection time duration unit": {
          "name": "sample collection time duration unit",
          "rank": 39,
          "slot_group": "Sample collection and processing"
        },
        "presampling activity": {
          "name": "presampling activity",
          "rank": 40,
          "slot_group": "Sample collection and processing"
        },
        "presampling activity details": {
          "name": "presampling activity details",
          "rank": 41,
          "slot_group": "Sample collection and processing"
        },
        "sample volume measurement value": {
          "name": "sample volume measurement value",
          "rank": 42,
          "slot_group": "Sample collection and processing"
        },
        "sample volume measurement unit": {
          "name": "sample volume measurement unit",
          "rank": 43,
          "slot_group": "Sample collection and processing"
        },
        "sample storage method": {
          "name": "sample storage method",
          "rank": 44,
          "slot_group": "Sample collection and processing"
        },
        "sample storage medium": {
          "name": "sample storage medium",
          "rank": 45,
          "slot_group": "Sample collection and processing"
        },
        "sample storage duration value": {
          "name": "sample storage duration value",
          "rank": 46,
          "slot_group": "Sample collection and processing"
        },
        "sample storage duration unit": {
          "name": "sample storage duration unit",
          "rank": 47,
          "slot_group": "Sample collection and processing"
        },
        "specimen processing": {
          "name": "specimen processing",
          "rank": 48,
          "slot_group": "Sample collection and processing"
        },
        "specimen processing details": {
          "name": "specimen processing details",
          "rank": 49,
          "slot_group": "Sample collection and processing"
        },
        "environmental site": {
          "name": "environmental site",
          "rank": 50,
          "slot_group": "Sample collection and processing"
        },
        "environmental material": {
          "name": "environmental material",
          "rank": 51,
          "slot_group": "Sample collection and processing"
        },
        "environmental material properties": {
          "name": "environmental material properties",
          "rank": 52,
          "slot_group": "Sample collection and processing"
        },
        "wastewater system type": {
          "name": "wastewater system type",
          "rank": 53,
          "slot_group": "Sample collection and processing"
        },
        "experimental control type": {
          "name": "experimental control type",
          "rank": 54,
          "slot_group": "Sample collection and processing"
        },
        "experimental control details": {
          "name": "experimental control details",
          "rank": 55,
          "slot_group": "Sample collection and processing"
        },
        "collection device": {
          "name": "collection device",
          "rank": 56,
          "slot_group": "Sample collection and processing"
        },
        "collection method": {
          "name": "collection method",
          "rank": 57,
          "slot_group": "Sample collection and processing"
        },
        "nucleic acid extraction method": {
          "name": "nucleic acid extraction method",
          "rank": 58,
          "slot_group": "Sample collection and processing"
        },
        "extraction kit": {
          "name": "extraction kit",
          "rank": 59,
          "slot_group": "Sample collection and processing"
        },
        "endogenous control details": {
          "name": "endogenous control details",
          "rank": 60,
          "slot_group": "Sample collection and processing"
        },
        "extraction recovery efficiency measurement value": {
          "name": "extraction recovery efficiency measurement value",
          "rank": 61,
          "slot_group": "Sample collection and processing"
        },
        "extraction recovery efficiency measurement method": {
          "name": "extraction recovery efficiency measurement method",
          "rank": 62,
          "slot_group": "Sample collection and processing"
        },
        "water catchment area human population measurement value": {
          "name": "water catchment area human population measurement value",
          "rank": 63,
          "slot_group": "Environmental conditions and measurements"
        },
        "water catchment area human population range": {
          "name": "water catchment area human population range",
          "rank": 64,
          "slot_group": "Environmental conditions and measurements"
        },
        "water catchment area human population measurement method": {
          "name": "water catchment area human population measurement method",
          "rank": 65,
          "slot_group": "Environmental conditions and measurements"
        },
        "water catchment area human population density value": {
          "name": "water catchment area human population density value",
          "rank": 66,
          "slot_group": "Environmental conditions and measurements"
        },
        "water catchment area human population density unit": {
          "name": "water catchment area human population density unit",
          "rank": 67,
          "slot_group": "Environmental conditions and measurements"
        },
        "populated area type": {
          "name": "populated area type",
          "rank": 68,
          "slot_group": "Environmental conditions and measurements"
        },
        "sampling weather conditions": {
          "name": "sampling weather conditions",
          "rank": 69,
          "slot_group": "Environmental conditions and measurements"
        },
        "presampling weather conditions": {
          "name": "presampling weather conditions",
          "rank": 70,
          "slot_group": "Environmental conditions and measurements"
        },
        "precipitation measurement value": {
          "name": "precipitation measurement value",
          "rank": 71,
          "slot_group": "Environmental conditions and measurements"
        },
        "precipitation measurement unit": {
          "name": "precipitation measurement unit",
          "rank": 72,
          "slot_group": "Environmental conditions and measurements"
        },
        "precipitation measurement method": {
          "name": "precipitation measurement method",
          "rank": 73,
          "slot_group": "Environmental conditions and measurements"
        },
        "ambient temperature measurement value": {
          "name": "ambient temperature measurement value",
          "rank": 74,
          "slot_group": "Environmental conditions and measurements"
        },
        "ambient temperature measurement unit": {
          "name": "ambient temperature measurement unit",
          "rank": 75,
          "slot_group": "Environmental conditions and measurements"
        },
        "pH measurement value": {
          "name": "pH measurement value",
          "rank": 76,
          "slot_group": "Environmental conditions and measurements"
        },
        "pH measurement method": {
          "name": "pH measurement method",
          "rank": 77,
          "slot_group": "Environmental conditions and measurements"
        },
        "total daily flow rate measurement value": {
          "name": "total daily flow rate measurement value",
          "rank": 78,
          "slot_group": "Environmental conditions and measurements"
        },
        "total daily flow rate measurement unit": {
          "name": "total daily flow rate measurement unit",
          "rank": 79,
          "slot_group": "Environmental conditions and measurements"
        },
        "total daily flow rate measurement method": {
          "name": "total daily flow rate measurement method",
          "rank": 80,
          "slot_group": "Environmental conditions and measurements"
        },
        "instantaneous flow rate measurement value": {
          "name": "instantaneous flow rate measurement value",
          "rank": 81,
          "slot_group": "Environmental conditions and measurements"
        },
        "instantaneous flow rate measurement unit": {
          "name": "instantaneous flow rate measurement unit",
          "rank": 82,
          "slot_group": "Environmental conditions and measurements"
        },
        "instantaneous flow rate measurement method": {
          "name": "instantaneous flow rate measurement method",
          "rank": 83,
          "slot_group": "Environmental conditions and measurements"
        },
        "turbidity measurement value": {
          "name": "turbidity measurement value",
          "rank": 84,
          "slot_group": "Environmental conditions and measurements"
        },
        "turbidity measurement unit": {
          "name": "turbidity measurement unit",
          "rank": 85,
          "slot_group": "Environmental conditions and measurements"
        },
        "turbidity measurement method": {
          "name": "turbidity measurement method",
          "rank": 86,
          "slot_group": "Environmental conditions and measurements"
        },
        "dissolved oxygen measurement value": {
          "name": "dissolved oxygen measurement value",
          "rank": 87,
          "slot_group": "Environmental conditions and measurements"
        },
        "dissolved oxygen measurement unit": {
          "name": "dissolved oxygen measurement unit",
          "rank": 88,
          "slot_group": "Environmental conditions and measurements"
        },
        "dissolved oxygen measurement method": {
          "name": "dissolved oxygen measurement method",
          "rank": 89,
          "slot_group": "Environmental conditions and measurements"
        },
        "oxygen reduction potential (ORP) measurement value": {
          "name": "oxygen reduction potential (ORP) measurement value",
          "rank": 90,
          "slot_group": "Environmental conditions and measurements"
        },
        "oxygen reduction potential (ORP) measurement unit": {
          "name": "oxygen reduction potential (ORP) measurement unit",
          "rank": 91,
          "slot_group": "Environmental conditions and measurements"
        },
        "oxygen reduction potential (ORP) measurement method": {
          "name": "oxygen reduction potential (ORP) measurement method",
          "rank": 92,
          "slot_group": "Environmental conditions and measurements"
        },
        "chemical oxygen demand (COD) measurement value": {
          "name": "chemical oxygen demand (COD) measurement value",
          "rank": 93,
          "slot_group": "Environmental conditions and measurements"
        },
        "chemical oxygen demand (COD) measurement unit": {
          "name": "chemical oxygen demand (COD) measurement unit",
          "rank": 94,
          "slot_group": "Environmental conditions and measurements"
        },
        "chemical oxygen demand (COD) measurement method": {
          "name": "chemical oxygen demand (COD) measurement method",
          "rank": 95,
          "slot_group": "Environmental conditions and measurements"
        },
        "carbonaceous biochemical oxygen demand (CBOD) measurement value": {
          "name": "carbonaceous biochemical oxygen demand (CBOD) measurement value",
          "rank": 96,
          "slot_group": "Environmental conditions and measurements"
        },
        "carbonaceous biochemical oxygen demand (CBOD) measurement unit": {
          "name": "carbonaceous biochemical oxygen demand (CBOD) measurement unit",
          "rank": 97,
          "slot_group": "Environmental conditions and measurements"
        },
        "carbonaceous biochemical oxygen demand (CBOD) measurement method": {
          "name": "carbonaceous biochemical oxygen demand (CBOD) measurement method",
          "rank": 98,
          "slot_group": "Environmental conditions and measurements"
        },
        "total suspended solids (TSS) measurement value": {
          "name": "total suspended solids (TSS) measurement value",
          "rank": 99,
          "slot_group": "Environmental conditions and measurements"
        },
        "total suspended solids (TSS) measurement unit": {
          "name": "total suspended solids (TSS) measurement unit",
          "rank": 100,
          "slot_group": "Environmental conditions and measurements"
        },
        "total suspended solids (TSS) measurement method": {
          "name": "total suspended solids (TSS) measurement method",
          "rank": 101,
          "slot_group": "Environmental conditions and measurements"
        },
        "total dissolved solids (TDS) measurement value": {
          "name": "total dissolved solids (TDS) measurement value",
          "rank": 102,
          "slot_group": "Environmental conditions and measurements"
        },
        "total dissolved solids (TDS) measurement unit": {
          "name": "total dissolved solids (TDS) measurement unit",
          "rank": 103,
          "slot_group": "Environmental conditions and measurements"
        },
        "total dissolved solids (TDS) measurement method": {
          "name": "total dissolved solids (TDS) measurement method",
          "rank": 104,
          "slot_group": "Environmental conditions and measurements"
        },
        "total solids (TS) measurement value": {
          "name": "total solids (TS) measurement value",
          "rank": 105,
          "slot_group": "Environmental conditions and measurements"
        },
        "total solids (TS) measurement unit": {
          "name": "total solids (TS) measurement unit",
          "rank": 106,
          "slot_group": "Environmental conditions and measurements"
        },
        "total solids (TS) measurement method": {
          "name": "total solids (TS) measurement method",
          "rank": 107,
          "slot_group": "Environmental conditions and measurements"
        },
        "alkalinity measurement value": {
          "name": "alkalinity measurement value",
          "rank": 108,
          "slot_group": "Environmental conditions and measurements"
        },
        "alkalinity measurement unit": {
          "name": "alkalinity measurement unit",
          "rank": 109,
          "slot_group": "Environmental conditions and measurements"
        },
        "alkalinity measurement method": {
          "name": "alkalinity measurement method",
          "rank": 110,
          "slot_group": "Environmental conditions and measurements"
        },
        "conductivity measurement value": {
          "name": "conductivity measurement value",
          "rank": 111,
          "slot_group": "Environmental conditions and measurements"
        },
        "conductivity measurement unit": {
          "name": "conductivity measurement unit",
          "rank": 112,
          "slot_group": "Environmental conditions and measurements"
        },
        "conductivity measurement method": {
          "name": "conductivity measurement method",
          "rank": 113,
          "slot_group": "Environmental conditions and measurements"
        },
        "salinity measurement value": {
          "name": "salinity measurement value",
          "rank": 114,
          "slot_group": "Environmental conditions and measurements"
        },
        "salinity measurement unit": {
          "name": "salinity measurement unit",
          "rank": 115,
          "slot_group": "Environmental conditions and measurements"
        },
        "salinity measurement method": {
          "name": "salinity measurement method",
          "rank": 116,
          "slot_group": "Environmental conditions and measurements"
        },
        "total nitrogen (TN) measurement value": {
          "name": "total nitrogen (TN) measurement value",
          "rank": 117,
          "slot_group": "Environmental conditions and measurements"
        },
        "total nitrogen (TN) measurement unit": {
          "name": "total nitrogen (TN) measurement unit",
          "rank": 118,
          "slot_group": "Environmental conditions and measurements"
        },
        "total nitrogen (TN) measurement method": {
          "name": "total nitrogen (TN) measurement method",
          "rank": 119,
          "slot_group": "Environmental conditions and measurements"
        },
        "total phosphorus (TP) measurement value": {
          "name": "total phosphorus (TP) measurement value",
          "rank": 120,
          "slot_group": "Environmental conditions and measurements"
        },
        "total phosphorus (TP) measurement unit": {
          "name": "total phosphorus (TP) measurement unit",
          "rank": 121,
          "slot_group": "Environmental conditions and measurements"
        },
        "total phosphorus (TP) measurement method": {
          "name": "total phosphorus (TP) measurement method",
          "rank": 122,
          "slot_group": "Environmental conditions and measurements"
        },
        "fecal contamination indicator": {
          "name": "fecal contamination indicator",
          "rank": 123,
          "slot_group": "Environmental conditions and measurements"
        },
        "fecal contamination value": {
          "name": "fecal contamination value",
          "rank": 124,
          "slot_group": "Environmental conditions and measurements"
        },
        "fecal contamination unit": {
          "name": "fecal contamination unit",
          "rank": 125,
          "slot_group": "Environmental conditions and measurements"
        },
        "fecal contamination method": {
          "name": "fecal contamination method",
          "rank": 126,
          "slot_group": "Environmental conditions and measurements"
        },
        "fecal coliform count value": {
          "name": "fecal coliform count value",
          "rank": 127,
          "slot_group": "Environmental conditions and measurements"
        },
        "fecal coliform count unit": {
          "name": "fecal coliform count unit",
          "rank": 128,
          "slot_group": "Environmental conditions and measurements"
        },
        "fecal coliform count method": {
          "name": "fecal coliform count method",
          "rank": 129,
          "slot_group": "Environmental conditions and measurements"
        },
        "urinary contamination indicator": {
          "name": "urinary contamination indicator",
          "rank": 130,
          "slot_group": "Environmental conditions and measurements"
        },
        "urinary contamination value": {
          "name": "urinary contamination value",
          "rank": 131,
          "slot_group": "Environmental conditions and measurements"
        },
        "urinary contamination unit": {
          "name": "urinary contamination unit",
          "rank": 132,
          "slot_group": "Environmental conditions and measurements"
        },
        "urinary contamination method": {
          "name": "urinary contamination method",
          "rank": 133,
          "slot_group": "Environmental conditions and measurements"
        },
        "sample temperature value (at collection)": {
          "name": "sample temperature value (at collection)",
          "rank": 134,
          "slot_group": "Environmental conditions and measurements"
        },
        "sample temperature unit (at collection)": {
          "name": "sample temperature unit (at collection)",
          "rank": 135,
          "slot_group": "Environmental conditions and measurements"
        },
        "sample temperature value (when received)": {
          "name": "sample temperature value (when received)",
          "rank": 136,
          "slot_group": "Environmental conditions and measurements"
        },
        "sample temperature unit (when received)": {
          "name": "sample temperature unit (when received)",
          "rank": 137,
          "slot_group": "Environmental conditions and measurements"
        },
        "purpose of sequencing": {
          "name": "purpose of sequencing",
          "rank": 138,
          "slot_group": "Sequence information"
        },
        "purpose of sequencing details": {
          "name": "purpose of sequencing details",
          "rank": 139,
          "slot_group": "Sequence information"
        },
        "sequence submitted by": {
          "name": "sequence submitted by",
          "rank": 140,
          "slot_group": "Sequence information"
        },
        "sequence submitter contact email": {
          "name": "sequence submitter contact email",
          "rank": 141,
          "slot_group": "Sequence information"
        },
        "sequencing date": {
          "name": "sequencing date",
          "rank": 142,
          "slot_group": "Sequence information"
        },
        "library ID": {
          "name": "library ID",
          "rank": 143,
          "slot_group": "Sequence information"
        },
        "sequencing platform": {
          "name": "sequencing platform",
          "rank": 144,
          "slot_group": "Sequence information"
        },
        "sequencing instrument": {
          "name": "sequencing instrument",
          "rank": 145,
          "slot_group": "Sequence information"
        },
        "sequencing method type": {
          "name": "sequencing method type",
          "rank": 146,
          "slot_group": "Sequence information"
        },
        "library preparation kit": {
          "name": "library preparation kit",
          "rank": 147,
          "slot_group": "Sequence information"
        },
        "sequencing protocol": {
          "name": "sequencing protocol",
          "rank": 148,
          "slot_group": "Sequence information"
        },
        "DNA fragment length": {
          "name": "DNA fragment length",
          "rank": 149,
          "slot_group": "Sequence information"
        },
        "genomic target enrichment method": {
          "name": "genomic target enrichment method",
          "rank": 150,
          "slot_group": "Sequence information"
        },
        "genomic target enrichment method details": {
          "name": "genomic target enrichment method details",
          "rank": 151,
          "slot_group": "Sequence information"
        },
        "quality control method name": {
          "name": "quality control method name",
          "rank": 152,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "quality control method version": {
          "name": "quality control method version",
          "rank": 153,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "quality control determination": {
          "name": "quality control determination",
          "rank": 154,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "quality control issues": {
          "name": "quality control issues",
          "rank": 155,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "quality control details": {
          "name": "quality control details",
          "rank": 156,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "raw sequence data processing method": {
          "name": "raw sequence data processing method",
          "rank": 157,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "dehosting method": {
          "name": "dehosting method",
          "rank": 158,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "sequence assembly software name": {
          "name": "sequence assembly software name",
          "rank": 159,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "sequence assembly software version": {
          "name": "sequence assembly software version",
          "rank": 160,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "read mapping software name": {
          "name": "read mapping software name",
          "rank": 161,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "read mapping software version": {
          "name": "read mapping software version",
          "rank": 162,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "taxonomic reference database name": {
          "name": "taxonomic reference database name",
          "rank": 163,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "taxonomic reference database version": {
          "name": "taxonomic reference database version",
          "rank": 164,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "read mapping criteria": {
          "name": "read mapping criteria",
          "rank": 165,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "bioinformatics protocol": {
          "name": "bioinformatics protocol",
          "rank": 166,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "organism": {
          "name": "organism",
          "description": "The name of the gene used in the diagnostic RT-PCR test.",
          "comments": [
            "Provide the full name of the gene used in the test. The gene symbol (short form of gene name) can also be provided. Standardized gene names and symbols can be found in the Gene Ontology using this look-up service: https://bit.ly/2Sq1LbI"
          ],
          "examples": [
            {
              "value": "E gene (orf4)"
            }
          ],
          "rank": 167,
          "slot_group": "Pathogen diagnostic testing"
        },
        "gene name": {
          "name": "gene name",
          "rank": 168,
          "slot_group": "Pathogen diagnostic testing"
        },
        "diagnostic target presence": {
          "name": "diagnostic target presence",
          "rank": 169,
          "slot_group": "Pathogen diagnostic testing"
        },
        "diagnostic measurement value": {
          "name": "diagnostic measurement value",
          "rank": 170,
          "slot_group": "Pathogen diagnostic testing"
        },
        "diagnostic measurement unit": {
          "name": "diagnostic measurement unit",
          "rank": 171,
          "slot_group": "Pathogen diagnostic testing"
        },
        "diagnostic measurement method": {
          "name": "diagnostic measurement method",
          "rank": 172,
          "slot_group": "Pathogen diagnostic testing"
        },
        "authors": {
          "name": "authors",
          "rank": 173,
          "slot_group": "Contributor acknowledgement"
        },
        "DataHarmonizer provenance": {
          "name": "DataHarmonizer provenance",
          "rank": 174,
          "slot_group": "Contributor acknowledgement"
        }
      },
      "attributes": {
        "specimen collector sample ID": {
          "name": "specimen collector sample ID",
          "description": "The user-defined name for the sample.",
          "title": "specimen collector sample ID",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 1,
          "slot_uri": "GENEPIO:0001123",
          "identifier": true,
          "alias": "specimen_collector_sample_ID",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString",
          "required": true
        },
        "specimen collector subsample ID": {
          "name": "specimen collector subsample ID",
          "description": "The user-defined identifier assigned to a portion of the original sample.",
          "title": "specimen collector subsample ID",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 1,
          "slot_uri": "GENEPIO:0100752",
          "alias": "specimen_collector_subsample_ID",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString"
        },
        "pooled sample ID": {
          "name": "pooled sample ID",
          "description": "The user-defined identifier assigned to a combined (pooled) set of samples.",
          "title": "pooled sample ID",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 3,
          "slot_uri": "GENEPIO:0100996",
          "alias": "pooled_sample_ID",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString"
        },
        "metagenome-assembled genome (MAG) ID": {
          "name": "metagenome-assembled genome (MAG) ID",
          "description": "The user-defined identifier assigned to a genome reconstructed from metagenomic data.",
          "title": "metagenome-assembled genome (MAG) ID",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 4,
          "slot_uri": "GENEPIO:0100753",
          "alias": "metagenome_assembled_genome_(MAG)_ID",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString"
        },
        "specimen collector project ID": {
          "name": "specimen collector project ID",
          "description": "The user-defined project name assigned to a sequencing project.",
          "title": "specimen collector project ID",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 5,
          "slot_uri": "GENEPIO:0100918",
          "alias": "specimen_collector_project_ID",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString"
        },
        "BioProject accession": {
          "name": "BioProject accession",
          "description": "The INSDC (i.e., ENA, NCBI, or DDBJ) accession number of the BioProject(s) to which the BioSample belongs.",
          "title": "BioProject accession",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 6,
          "slot_uri": "GENEPIO:0001136",
          "alias": "BioProject_accession",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString",
          "pattern": "{UPPER_CASE}",
          "structured_pattern": {
            "syntax": "{UPPER_CASE}",
            "interpolated": true,
            "partial_match": false
          }
        },
        "BioSample accession": {
          "name": "BioSample accession",
          "description": "The identifier assigned to a BioSample in INSDC (i.e., ENA, NCBI, or DDBJ) archives.",
          "title": "BioSample accession",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 7,
          "slot_uri": "GENEPIO:0001139",
          "alias": "BioSample_accession",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString",
          "recommended": true,
          "pattern": "{UPPER_CASE}",
          "structured_pattern": {
            "syntax": "{UPPER_CASE}",
            "interpolated": true,
            "partial_match": false
          }
        },
        "GenBank accession (versioned)": {
          "name": "GenBank accession (versioned)",
          "description": "The versioned identifier assigned to an assembly or consensus sequence in GenBank archives.",
          "title": "GenBank accession (versioned)",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 8,
          "slot_uri": "GENEPIO:0100754",
          "alias": "GenBank_accession_(versioned)",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString",
          "pattern": "{UPPER_CASE}",
          "structured_pattern": {
            "syntax": "{UPPER_CASE}",
            "interpolated": true,
            "partial_match": false
          }
        },
        "SRA accession": {
          "name": "SRA accession",
          "description": "The Sequence Read Archive (SRA) identifier linking raw read data, methodological metadata and quality control metrics submitted to the INSDC.",
          "title": "SRA accession",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 9,
          "slot_uri": "GENEPIO:0001142",
          "alias": "SRA_accession",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString",
          "pattern": "{UPPER_CASE}",
          "structured_pattern": {
            "syntax": "{UPPER_CASE}",
            "interpolated": true,
            "partial_match": false
          }
        },
        "GISAID accession": {
          "name": "GISAID accession",
          "description": "The identifier assigned to a sequence in GISAID (the Global Initiative on Sharing All Influenza Data) archives.",
          "title": "GISAID accession",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 10,
          "slot_uri": "GENEPIO:0001147",
          "alias": "GISAID_accession",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString",
          "pattern": "{UPPER_CASE}",
          "structured_pattern": {
            "syntax": "{UPPER_CASE}",
            "interpolated": true,
            "partial_match": false
          }
        },
        "GISAID virus name": {
          "name": "GISAID virus name",
          "description": "The user-defined GISAID virus name assigned to the sequence.",
          "title": "GISAID virus name",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 11,
          "slot_uri": "GENEPIO:0100282",
          "alias": "GISAID_virus_name",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString",
          "pattern": "{UPPER_CASE}",
          "structured_pattern": {
            "syntax": "{UPPER_CASE}",
            "interpolated": true,
            "partial_match": false
          }
        },
        "ENA accession": {
          "name": "ENA accession",
          "description": "The identifier assigned to a BioSample in ENA (European Nucleotide Archive) archives.",
          "title": "ENA accession",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 12,
          "slot_uri": "GENEPIO:0100755",
          "alias": "ENA_accession",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString",
          "pattern": "{UPPER_CASE}",
          "structured_pattern": {
            "syntax": "{UPPER_CASE}",
            "interpolated": true,
            "partial_match": false
          }
        },
        "DDBJ accession": {
          "name": "DDBJ accession",
          "description": "The identifier assigned to a sequence in DDBJ (DNA Data Bank of Japan) archives.",
          "title": "DDBJ accession",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 13,
          "slot_uri": "GENEPIO:0100756",
          "alias": "DDBJ_accession",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString",
          "pattern": "{UPPER_CASE}",
          "structured_pattern": {
            "syntax": "{UPPER_CASE}",
            "interpolated": true,
            "partial_match": false
          }
        },
        "DRA accession": {
          "name": "DRA accession",
          "description": "The identifier assigned to a BioSample in DRA (DDBJ Sequence Read Archive) archives.",
          "title": "DRA accession",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 14,
          "slot_uri": "GENEPIO:0100757",
          "alias": "DRA_accession",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString",
          "pattern": "{UPPER_CASE}",
          "structured_pattern": {
            "syntax": "{UPPER_CASE}",
            "interpolated": true,
            "partial_match": false
          }
        },
        "GSA accession": {
          "name": "GSA accession",
          "description": "The identifier assigned to a BioSample in GSA (Genome Sequence Archive) archives.",
          "title": "GSA accession",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 15,
          "slot_uri": "GENEPIO:0100758",
          "alias": "GSA_accession",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString",
          "pattern": "{UPPER_CASE}",
          "structured_pattern": {
            "syntax": "{UPPER_CASE}",
            "interpolated": true,
            "partial_match": false
          }
        },
        "Enterobase accession": {
          "name": "Enterobase accession",
          "description": "The identifier assigned to a sequence in Enterobase archives.",
          "title": "Enterobase accession",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 16,
          "slot_uri": "GENEPIO:0100759",
          "alias": "Enterobase_accession",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString",
          "pattern": "{UPPER_CASE}",
          "structured_pattern": {
            "syntax": "{UPPER_CASE}",
            "interpolated": true,
            "partial_match": false
          }
        },
        "sampling site ID": {
          "name": "sampling site ID",
          "description": "The user-defined identifier assigned to a specific location from which samples are taken.",
          "title": "sampling site ID",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 17,
          "slot_uri": "GENEPIO:0100760",
          "alias": "sampling_site_ID",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString",
          "recommended": true
        },
        "sampling event ID": {
          "name": "sampling event ID",
          "description": "The user-defined identifier assigned to a specific event during which one or more samples are taken, from one or more sites.",
          "title": "sampling event ID",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 18,
          "slot_uri": "GENEPIO:0100761",
          "alias": "sampling_event_ID",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString",
          "recommended": true
        },
        "sample collection data steward name": {
          "name": "sample collection data steward name",
          "description": "The name of the individual at the organization that collected the original sample that plays a data governance role and oversees how a sample and associated contextual data is used and distributed.",
          "title": "sample collection data steward name",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 19,
          "slot_uri": "GENEPIO:0100762",
          "alias": "sample_collection_data_steward_name",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "sample collected by": {
          "name": "sample collected by",
          "description": "The name of the organization with which the sample collector is affiliated.",
          "title": "sample collected by",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 20,
          "slot_uri": "GENEPIO:0001153",
          "alias": "sample_collected_by",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "required": true
        },
        "sample collector contact email": {
          "name": "sample collector contact email",
          "description": "The email address of the contact responsible for follow-up regarding the sample.",
          "title": "sample collector contact email",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 21,
          "slot_uri": "GENEPIO:0001156",
          "alias": "sample_collector_contact_email",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString",
          "pattern": "^\\S+@\\S+\\.\\S+$"
        },
        "geo_loc_name (country)": {
          "name": "geo_loc_name (country)",
          "description": "The country of origin of the sample.",
          "title": "geo_loc_name (country)",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 22,
          "slot_uri": "GENEPIO:0001181",
          "alias": "geo_loc_name_(country)",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "required": true
        },
        "geo_loc_name (state/province/territory)": {
          "name": "geo_loc_name (state/province/territory)",
          "description": "The state/province/territory of origin of the sample.",
          "title": "geo_loc_name (state/province/territory)",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 23,
          "slot_uri": "GENEPIO:0001185",
          "alias": "geo_loc_name_(state/province/territory)",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "required": true
        },
        "geo_loc name (county/region)": {
          "name": "geo_loc name (county/region)",
          "description": "The county/region of origin of the sample.",
          "title": "geo_loc name (county/region)",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 24,
          "slot_uri": "GENEPIO:0100280",
          "alias": "geo_loc_name_(county/region)",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "geo_loc_name (city)": {
          "name": "geo_loc_name (city)",
          "description": "The city of origin of the sample.",
          "title": "geo_loc_name (city)",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 25,
          "slot_uri": "GENEPIO:0001189",
          "alias": "geo_loc_name_(city)",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "geo_loc name (site)": {
          "name": "geo_loc name (site)",
          "description": "The name of a specific geographical location e.g. Credit River (rather than river).",
          "title": "geo_loc name (site)",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 26,
          "slot_uri": "GENEPIO:0100436",
          "alias": "geo_loc_name_(site)",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "geo_loc latitude": {
          "name": "geo_loc latitude",
          "description": "The latitude coordinates of the geographical location of sample collection.",
          "title": "geo_loc latitude",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 27,
          "slot_uri": "GENEPIO:0100309",
          "alias": "geo_loc_latitude",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "geo_loc longitude": {
          "name": "geo_loc longitude",
          "description": "The longitude coordinates of the geographical location of sample collection.",
          "title": "geo_loc longitude",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 28,
          "slot_uri": "GENEPIO:0100310",
          "alias": "geo_loc_longitude",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "watershed shapefile availability": {
          "name": "watershed shapefile availability",
          "description": "The availability status of a shapefile descriping the catchment contributing to a watershed.",
          "title": "watershed shapefile availability",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 29,
          "slot_uri": "GENEPIO:0100919",
          "alias": "watershed_shapefile_availability",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing"
        },
        "watershed shapefile filename": {
          "name": "watershed shapefile filename",
          "description": "The name of the watershed shapefile.",
          "title": "watershed shapefile filename",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 30,
          "slot_uri": "GENEPIO:0100920",
          "alias": "watershed_shapefile_filename",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "purpose of sampling": {
          "name": "purpose of sampling",
          "description": "The reason that the sample was collected.",
          "title": "purpose of sampling",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 31,
          "slot_uri": "GENEPIO:0001198",
          "alias": "purpose_of_sampling",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "required": true
        },
        "scope of sampling": {
          "name": "scope of sampling",
          "description": "The range of locations or entities sampled expressed in general terms.",
          "title": "scope of sampling",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 32,
          "slot_uri": "GENEPIO:0100877",
          "alias": "scope_of_sampling",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "recommended": true
        },
        "sample received date": {
          "name": "sample received date",
          "description": "The date on which the sample was received.",
          "title": "sample received date",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 33,
          "slot_uri": "GENEPIO:0001179",
          "alias": "sample_received_date",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing"
        },
        "sample collection date": {
          "name": "sample collection date",
          "description": "The date on which the sample was collected.",
          "title": "sample collection date",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 34,
          "slot_uri": "GENEPIO:0001174",
          "alias": "sample_collection_date",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "required": true
        },
        "sample processing date": {
          "name": "sample processing date",
          "description": "The date on which the sample was processed.",
          "title": "sample processing date",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 35,
          "slot_uri": "GENEPIO:0100763",
          "alias": "sample_processing_date",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing"
        },
        "sample collection time": {
          "name": "sample collection time",
          "description": "The time at which the sample was collected.",
          "title": "sample collection time",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 36,
          "slot_uri": "GENEPIO:0100764",
          "alias": "sample_collection_time",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "recommended": true
        },
        "sample collection time of day": {
          "name": "sample collection time of day",
          "description": "The descriptive time of day during which the sample was collected.",
          "title": "sample collection time of day",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 37,
          "slot_uri": "GENEPIO:0100765",
          "alias": "sample_collection_time_of_day",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing"
        },
        "sample collection time duration value": {
          "name": "sample collection time duration value",
          "description": "The amount of time over which the sample was collected.",
          "title": "sample collection time duration value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 38,
          "slot_uri": "GENEPIO:0100766",
          "alias": "sample_collection_time_duration_value",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "recommended": true
        },
        "sample collection time duration unit": {
          "name": "sample collection time duration unit",
          "description": "The units of the time duration measurement of sample collection.",
          "title": "sample collection time duration unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 39,
          "slot_uri": "GENEPIO:0100767",
          "alias": "sample_collection_time_duration_unit",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "recommended": true
        },
        "presampling activity": {
          "name": "presampling activity",
          "description": "The activities or variables upstream of sample collection that may affect the sample.",
          "title": "presampling activity",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 40,
          "slot_uri": "GENEPIO:0100433",
          "alias": "presampling_activity",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing"
        },
        "presampling activity details": {
          "name": "presampling activity details",
          "description": "The details of the activities or variables that affected the sample collected.",
          "title": "presampling activity details",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 41,
          "slot_uri": "GENEPIO:0100434",
          "alias": "presampling_activity_details",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing"
        },
        "sample volume measurement value": {
          "name": "sample volume measurement value",
          "description": "The numerical value of the volume measurement of the sample collected.",
          "title": "sample volume measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 42,
          "slot_uri": "GENEPIO:0100768",
          "alias": "sample_volume_measurement_value",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "sample volume measurement unit": {
          "name": "sample volume measurement unit",
          "description": "The units of the volume measurement of the sample collected.",
          "title": "sample volume measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 43,
          "slot_uri": "GENEPIO:0100769",
          "alias": "sample_volume_measurement_unit",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing"
        },
        "sample storage method": {
          "name": "sample storage method",
          "description": "The process used to store the sample.",
          "title": "sample storage method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 44,
          "slot_uri": "GENEPIO:0100448",
          "alias": "sample_storage_method",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "sample storage medium": {
          "name": "sample storage medium",
          "description": "The medium in which a sample is stored.",
          "title": "sample storage medium",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 45,
          "slot_uri": "GENEPIO:0100449",
          "alias": "sample_storage_medium",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "sample storage duration value": {
          "name": "sample storage duration value",
          "description": "The numerical value of the time measurement during which a sample is in storage.",
          "title": "sample storage duration value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 46,
          "slot_uri": "GENEPIO:0100768",
          "alias": "sample_storage_duration_value",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "sample storage duration unit": {
          "name": "sample storage duration unit",
          "description": "The units of a measured sample storage duration.",
          "title": "sample storage duration unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 47,
          "slot_uri": "GENEPIO:0100769",
          "alias": "sample_storage_duration_unit",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing"
        },
        "specimen processing": {
          "name": "specimen processing",
          "description": "Any processing applied to the sample during or after receiving the sample.",
          "title": "specimen processing",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 48,
          "slot_uri": "GENEPIO:0001253",
          "alias": "specimen_processing",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing"
        },
        "specimen processing details": {
          "name": "specimen processing details",
          "description": "The details of the processing applied to the sample during or after receiving the sample.",
          "title": "specimen processing details",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 49,
          "slot_uri": "GENEPIO:0100311",
          "alias": "specimen_processing_details",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "environmental site": {
          "name": "environmental site",
          "description": "An environmental location may describe a site in the natural or built environment e.g. contact surface, metal can, hospital, wet market, bat cave.",
          "title": "environmental site",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 50,
          "slot_uri": "GENEPIO:0001232",
          "alias": "environmental_site",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "recommended": true
        },
        "environmental material": {
          "name": "environmental material",
          "description": "A substance obtained from the natural or man-made environment e.g. soil, water, sewage.",
          "title": "environmental material",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 51,
          "slot_uri": "GENEPIO:0001223",
          "alias": "environmental_material",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "recommended": true
        },
        "environmental material properties": {
          "name": "environmental material properties",
          "description": "The properties, characteristics and qualities of a substance obtained from the natural or man-made environment.",
          "title": "environmental material properties",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 52,
          "slot_uri": "GENEPIO:0100770",
          "alias": "environmental_material_properties",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "recommended": true
        },
        "wastewater system type": {
          "name": "wastewater system type",
          "description": "The type or classification of a wastewater system e.g. sanitary sewer, combined sewer",
          "title": "wastewater system type",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 53,
          "slot_uri": "GENEPIO:0100771",
          "alias": "wastewater_system_type",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "recommended": true
        },
        "experimental control type": {
          "name": "experimental control type",
          "description": "The type of control used in the experiment.",
          "title": "experimental control type",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 54,
          "slot_uri": "GENEPIO:0100921",
          "alias": "experimental_control_type",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing"
        },
        "experimental control details": {
          "name": "experimental control details",
          "description": "The details regarding the experimental control contained in the sample.",
          "title": "experimental control details",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 55,
          "slot_uri": "GENEPIO:0100922",
          "alias": "experimental_control_details",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "collection device": {
          "name": "collection device",
          "description": "The instrument or container used to collect the sample e.g. grab sampler.",
          "title": "collection device",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 56,
          "slot_uri": "GENEPIO:0001234",
          "alias": "collection_device",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing"
        },
        "collection method": {
          "name": "collection method",
          "description": "The process used to collect the sample.",
          "title": "collection method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 57,
          "slot_uri": "GENEPIO:0001241",
          "alias": "collection_method",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "recommended": true
        },
        "nucleic acid extraction method": {
          "name": "nucleic acid extraction method",
          "description": "The process used to extract genomic material from a sample.",
          "title": "nucleic acid extraction method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 58,
          "slot_uri": "GENEPIO:0100939",
          "alias": "nucleic_acid_extraction_method",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "extraction kit": {
          "name": "extraction kit",
          "description": "The kit used to extract genomic material from a sample",
          "title": "extraction kit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 59,
          "slot_uri": "GENEPIO:0100772",
          "alias": "extraction_kit",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "endogenous control details": {
          "name": "endogenous control details",
          "description": "The description of the endogenous controls included when extracting a sample.",
          "title": "endogenous control details",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 60,
          "slot_uri": "GENEPIO:0100923",
          "alias": "endogenous_control_details",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString",
          "recommended": true
        },
        "extraction recovery efficiency measurement value": {
          "name": "extraction recovery efficiency measurement value",
          "description": "The recovery efficiency of an extraction, calculated as the amount of a synthetic or endogenous compound identified in the sample relative to the amount expected.",
          "title": "extraction recovery efficiency measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 61,
          "slot_uri": "GENEPIO:0100924",
          "alias": "extraction_recovery_efficiency_measurement_value",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "extraction recovery efficiency measurement method": {
          "name": "extraction recovery efficiency measurement method",
          "description": "The method by which recovery efficiency of an extraction was calculated.",
          "title": "extraction recovery efficiency measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 62,
          "slot_uri": "GENEPIO:0100925",
          "alias": "extraction_recovery_efficiency_measurement_method",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "water catchment area human population measurement value": {
          "name": "water catchment area human population measurement value",
          "description": "The numerical value of the human population measurement that contributes to the composition of water in a catchment area.",
          "title": "water catchment area human population measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 63,
          "slot_uri": "GENEPIO:0100773",
          "alias": "water_catchment_area_human_population_measurement_value",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "recommended": true
        },
        "water catchment area human population range": {
          "name": "water catchment area human population range",
          "description": "The human population range of the water catchment that contributes effluent to a wastewater site.",
          "title": "water catchment area human population range",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 64,
          "slot_uri": "GENEPIO:0100774",
          "alias": "water_catchment_area_human_population_range",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "water catchment area human population measurement method": {
          "name": "water catchment area human population measurement method",
          "description": "The method by which a water catchment 's human population size was measured or estimated",
          "title": "water catchment area human population measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 65,
          "slot_uri": "GENEPIO:0100775",
          "alias": "water_catchment_area_human_population_measurement_method",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "water catchment area human population density value": {
          "name": "water catchment area human population density value",
          "description": "The numerical value describing the number of humans per geographical area in a water catchment.",
          "title": "water catchment area human population density value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 66,
          "slot_uri": "GENEPIO:0100776",
          "alias": "water_catchment_area_human_population_density_value",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "water catchment area human population density unit": {
          "name": "water catchment area human population density unit",
          "description": "The unit describing the number of humans per geographical area in a water catchment.",
          "title": "water catchment area human population density unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 67,
          "slot_uri": "GENEPIO:0100777",
          "alias": "water_catchment_area_human_population_density_unit",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "populated area type": {
          "name": "populated area type",
          "description": "A type of area that is populated by humans to different degrees.",
          "title": "populated area type",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 68,
          "slot_uri": "GENEPIO:0100778",
          "alias": "populated_area_type",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "sampling weather conditions": {
          "name": "sampling weather conditions",
          "description": "The state of the atmosphere at a place and time as regards heat, dryness, sunshine, wind, rain, etc.",
          "title": "sampling weather conditions",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 69,
          "slot_uri": "GENEPIO:0100779",
          "alias": "sampling_weather_conditions",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "presampling weather conditions": {
          "name": "presampling weather conditions",
          "description": "Weather conditions prior to collection that may affect the sample.",
          "title": "presampling weather conditions",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 70,
          "slot_uri": "GENEPIO:0100780",
          "alias": "presampling_weather_conditions",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "precipitation measurement value": {
          "name": "precipitation measurement value",
          "description": "The amount of water which has fallen during a precipitation process.",
          "title": "precipitation measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 71,
          "slot_uri": "GENEPIO:0100911",
          "alias": "precipitation_measurement_value",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "recommended": true
        },
        "precipitation measurement unit": {
          "name": "precipitation measurement unit",
          "description": "The units of measurement for the amount of water which has fallen during a precipitation process.",
          "title": "precipitation measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 72,
          "slot_uri": "GENEPIO:0100912",
          "alias": "precipitation_measurement_unit",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "recommended": true
        },
        "precipitation measurement method": {
          "name": "precipitation measurement method",
          "description": "The process used to measure the amount of water which has fallen during a precipitation process.",
          "title": "precipitation measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 73,
          "slot_uri": "GENEPIO:0100913",
          "alias": "precipitation_measurement_method",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "ambient temperature measurement value": {
          "name": "ambient temperature measurement value",
          "description": "The numerical value of a measurement of the ambient temperature.",
          "title": "ambient temperature measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 74,
          "slot_uri": "GENEPIO:0100935",
          "alias": "ambient_temperature_measurement_value",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "ambient temperature measurement unit": {
          "name": "ambient temperature measurement unit",
          "description": "The units of a measurement of the ambient temperature.",
          "title": "ambient temperature measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 75,
          "slot_uri": "GENEPIO:0100936",
          "alias": "ambient_temperature_measurement_unit",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "pH measurement value": {
          "name": "pH measurement value",
          "description": "The measured pH value indicating the acidity or basicity(alkalinity) of an aqueous solution.",
          "title": "pH measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 76,
          "slot_uri": "GENEPIO:0001736",
          "alias": "pH_measurement_value",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "pH measurement method": {
          "name": "pH measurement method",
          "description": "The process used to measure pH value.",
          "title": "pH measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 77,
          "slot_uri": "GENEPIO:0100781",
          "alias": "pH_measurement_method",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "total daily flow rate measurement value": {
          "name": "total daily flow rate measurement value",
          "description": "The numerical value of a measured fluid flow rate over the course of a day.",
          "title": "total daily flow rate measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 78,
          "slot_uri": "GENEPIO:0100905",
          "alias": "total_daily_flow_rate_measurement_value",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "total daily flow rate measurement unit": {
          "name": "total daily flow rate measurement unit",
          "description": "The units of a measured fluid flow rate over the course of a day.",
          "title": "total daily flow rate measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 79,
          "slot_uri": "GENEPIO:0100906",
          "alias": "total_daily_flow_rate_measurement_unit",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "total daily flow rate measurement method": {
          "name": "total daily flow rate measurement method",
          "description": "The process used to measure total daily fluid flow rate.",
          "title": "total daily flow rate measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 80,
          "slot_uri": "GENEPIO:0100907",
          "alias": "total_daily_flow_rate_measurement_method",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "instantaneous flow rate measurement value": {
          "name": "instantaneous flow rate measurement value",
          "description": "The numerical value of a measured instantaneous fluid flow rate.",
          "title": "instantaneous flow rate measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 81,
          "slot_uri": "GENEPIO:0100908",
          "alias": "instantaneous_flow_rate_measurement_value",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "instantaneous flow rate measurement unit": {
          "name": "instantaneous flow rate measurement unit",
          "description": "The units of a measured instantaneous fluid flow rate.",
          "title": "instantaneous flow rate measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 82,
          "slot_uri": "GENEPIO:0100909",
          "alias": "instantaneous_flow_rate_measurement_unit",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "instantaneous flow rate measurement method": {
          "name": "instantaneous flow rate measurement method",
          "description": "The process used to measure instantaneous fluid flow rate.",
          "title": "instantaneous flow rate measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 83,
          "slot_uri": "GENEPIO:0100910",
          "alias": "instantaneous_flow_rate_measurement_method",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "turbidity measurement value": {
          "name": "turbidity measurement value",
          "description": "The numerical value of a measurement of turbidity.",
          "title": "turbidity measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 84,
          "slot_uri": "GENEPIO:0100783",
          "alias": "turbidity_measurement_value",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString",
          "recommended": true
        },
        "turbidity measurement unit": {
          "name": "turbidity measurement unit",
          "description": "The units of a measurement of turbidity.",
          "title": "turbidity measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 85,
          "slot_uri": "GENEPIO:0100914",
          "alias": "turbidity_measurement_unit",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "recommended": true
        },
        "turbidity measurement method": {
          "name": "turbidity measurement method",
          "description": "The process used to measure turbidity.",
          "title": "turbidity measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 86,
          "slot_uri": "GENEPIO:0100783",
          "alias": "turbidity_measurement_method",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "dissolved oxygen measurement value": {
          "name": "dissolved oxygen measurement value",
          "description": "The numerical value of a measurement of dissolved oxygen.",
          "title": "dissolved oxygen measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 87,
          "slot_uri": "GENEPIO:0100915",
          "alias": "dissolved_oxygen_measurement_value",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "dissolved oxygen measurement unit": {
          "name": "dissolved oxygen measurement unit",
          "description": "The units of a measurement of dissolved oxygen.",
          "title": "dissolved oxygen measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 88,
          "slot_uri": "GENEPIO:0100784",
          "alias": "dissolved_oxygen_measurement_unit",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "dissolved oxygen measurement method": {
          "name": "dissolved oxygen measurement method",
          "description": "The method used to measure dissolved oxygen.",
          "title": "dissolved oxygen measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 89,
          "slot_uri": "GENEPIO:0100785",
          "alias": "dissolved_oxygen_measurement_method",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "oxygen reduction potential (ORP) measurement value": {
          "name": "oxygen reduction potential (ORP) measurement value",
          "description": "The numerical value of a measurement of oxygen reduction potential (ORP).",
          "title": "oxygen reduction potential (ORP) measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 90,
          "slot_uri": "GENEPIO:0100917",
          "alias": "oxygen_reduction_potential_(ORP)_measurement_value",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "oxygen reduction potential (ORP) measurement unit": {
          "name": "oxygen reduction potential (ORP) measurement unit",
          "description": "The units of a measurement of oxygen reduction potential (ORP).",
          "title": "oxygen reduction potential (ORP) measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 91,
          "slot_uri": "GENEPIO:0100786",
          "alias": "oxygen_reduction_potential_(ORP)_measurement_unit",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "oxygen reduction potential (ORP) measurement method": {
          "name": "oxygen reduction potential (ORP) measurement method",
          "description": "The method used to measure oxygen reduction potential (ORP).",
          "title": "oxygen reduction potential (ORP) measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 92,
          "slot_uri": "GENEPIO:0100787",
          "alias": "oxygen_reduction_potential_(ORP)_measurement_method",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "chemical oxygen demand (COD) measurement value": {
          "name": "chemical oxygen demand (COD) measurement value",
          "description": "The measured value from a chemical oxygen demand (COD) test.",
          "title": "chemical oxygen demand (COD) measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 93,
          "slot_uri": "GENEPIO:0100788",
          "alias": "chemical_oxygen_demand_(COD)_measurement_value",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "chemical oxygen demand (COD) measurement unit": {
          "name": "chemical oxygen demand (COD) measurement unit",
          "description": "The units associated with a value from a chemical oxygen demand (COD) test.",
          "title": "chemical oxygen demand (COD) measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 94,
          "slot_uri": "GENEPIO:0100789",
          "alias": "chemical_oxygen_demand_(COD)_measurement_unit",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "chemical oxygen demand (COD) measurement method": {
          "name": "chemical oxygen demand (COD) measurement method",
          "description": "The method used to measure chemical oxygen demand (COD).",
          "title": "chemical oxygen demand (COD) measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 95,
          "slot_uri": "GENEPIO:0100790",
          "alias": "chemical_oxygen_demand_(COD)_measurement_method",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "carbonaceous biochemical oxygen demand (CBOD) measurement value": {
          "name": "carbonaceous biochemical oxygen demand (CBOD) measurement value",
          "description": "The numerical value of a measurement of carbonaceous biochemical oxygen demand (CBOD).",
          "title": "carbonaceous biochemical oxygen demand (CBOD) measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 96,
          "slot_uri": "GENEPIO:0100791",
          "alias": "carbonaceous_biochemical_oxygen_demand_(CBOD)_measurement_value",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "carbonaceous biochemical oxygen demand (CBOD) measurement unit": {
          "name": "carbonaceous biochemical oxygen demand (CBOD) measurement unit",
          "description": "The units of a measurement of carbonaceous biochemical oxygen demand (CBOD).",
          "title": "carbonaceous biochemical oxygen demand (CBOD) measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 97,
          "slot_uri": "GENEPIO:0100792",
          "alias": "carbonaceous_biochemical_oxygen_demand_(CBOD)_measurement_unit",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "carbonaceous biochemical oxygen demand (CBOD) measurement method": {
          "name": "carbonaceous biochemical oxygen demand (CBOD) measurement method",
          "description": "The method used to measure carbonaceous biochemical oxygen demand (CBOD).",
          "title": "carbonaceous biochemical oxygen demand (CBOD) measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 98,
          "slot_uri": "GENEPIO:0100793",
          "alias": "carbonaceous_biochemical_oxygen_demand_(CBOD)_measurement_method",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "total suspended solids (TSS) measurement value": {
          "name": "total suspended solids (TSS) measurement value",
          "description": "The numerical value from a total suspended solids (TSS) test.",
          "title": "total suspended solids (TSS) measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 99,
          "slot_uri": "GENEPIO:0100794",
          "alias": "total_suspended_solids_(TSS)_measurement_value",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "total suspended solids (TSS) measurement unit": {
          "name": "total suspended solids (TSS) measurement unit",
          "description": "The units associated with a value from a total suspended solids (TSS) test.",
          "title": "total suspended solids (TSS) measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 100,
          "slot_uri": "GENEPIO:0100795",
          "alias": "total_suspended_solids_(TSS)_measurement_unit",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "total suspended solids (TSS) measurement method": {
          "name": "total suspended solids (TSS) measurement method",
          "description": "The method used to measure total suspended solids (TSS).",
          "title": "total suspended solids (TSS) measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 101,
          "slot_uri": "GENEPIO:0100796",
          "alias": "total_suspended_solids_(TSS)_measurement_method",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "total dissolved solids (TDS) measurement value": {
          "name": "total dissolved solids (TDS) measurement value",
          "description": "The numerical value from a total dissolved solids (TDS) test.",
          "title": "total dissolved solids (TDS) measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 102,
          "slot_uri": "GENEPIO:0100797",
          "alias": "total_dissolved_solids_(TDS)_measurement_value",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "total dissolved solids (TDS) measurement unit": {
          "name": "total dissolved solids (TDS) measurement unit",
          "description": "The units associated with a value from a total dissolved solids (TDS) test.",
          "title": "total dissolved solids (TDS) measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 103,
          "slot_uri": "GENEPIO:0100798",
          "alias": "total_dissolved_solids_(TDS)_measurement_unit",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "total dissolved solids (TDS) measurement method": {
          "name": "total dissolved solids (TDS) measurement method",
          "description": "The method used to measure total dissolved solids (TDS).",
          "title": "total dissolved solids (TDS) measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 104,
          "slot_uri": "GENEPIO:0100799",
          "alias": "total_dissolved_solids_(TDS)_measurement_method",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "total solids (TS) measurement value": {
          "name": "total solids (TS) measurement value",
          "description": "The numerical value from a total solids (TS) test.",
          "title": "total solids (TS) measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 105,
          "slot_uri": "GENEPIO:0100800",
          "alias": "total_solids_(TS)_measurement_value",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "total solids (TS) measurement unit": {
          "name": "total solids (TS) measurement unit",
          "description": "The units associated with a value from a total solids (TS) test.",
          "title": "total solids (TS) measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 106,
          "slot_uri": "GENEPIO:0100801",
          "alias": "total_solids_(TS)_measurement_unit",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "total solids (TS) measurement method": {
          "name": "total solids (TS) measurement method",
          "description": "The method used to measure total solids (TS).",
          "title": "total solids (TS) measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 107,
          "slot_uri": "GENEPIO:0100802",
          "alias": "total_solids_(TS)_measurement_method",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "alkalinity measurement value": {
          "name": "alkalinity measurement value",
          "description": "The numerical value of a measurement of alkalinity.",
          "title": "alkalinity measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 108,
          "slot_uri": "GENEPIO:0100878",
          "alias": "alkalinity_measurement_value",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "alkalinity measurement unit": {
          "name": "alkalinity measurement unit",
          "description": "The units of a measurement of alkalinity.",
          "title": "alkalinity measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 109,
          "slot_uri": "GENEPIO:0100879",
          "alias": "alkalinity_measurement_unit",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "alkalinity measurement method": {
          "name": "alkalinity measurement method",
          "description": "The process used to measure alkalinity.",
          "title": "alkalinity measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 110,
          "slot_uri": "GENEPIO:0100880",
          "alias": "alkalinity_measurement_method",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "conductivity measurement value": {
          "name": "conductivity measurement value",
          "description": "The numerical value of a measurement of conductivity.",
          "title": "conductivity measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 111,
          "slot_uri": "GENEPIO:0100916",
          "alias": "conductivity_measurement_value",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "conductivity measurement unit": {
          "name": "conductivity measurement unit",
          "description": "The units of a measurement of conductivity.",
          "title": "conductivity measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 112,
          "slot_uri": "GENEPIO:0100803",
          "alias": "conductivity_measurement_unit",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "conductivity measurement method": {
          "name": "conductivity measurement method",
          "description": "The method used to measure conductivity.",
          "title": "conductivity measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 113,
          "slot_uri": "GENEPIO:0100804",
          "alias": "conductivity_measurement_method",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "salinity measurement value": {
          "name": "salinity measurement value",
          "description": "The numerical value of a measurement of salinity.",
          "title": "salinity measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 114,
          "slot_uri": "GENEPIO:0100805",
          "alias": "salinity_measurement_value",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "salinity measurement unit": {
          "name": "salinity measurement unit",
          "description": "The units of a measurement of salinity.",
          "title": "salinity measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 115,
          "slot_uri": "GENEPIO:0100806",
          "alias": "salinity_measurement_unit",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "salinity measurement method": {
          "name": "salinity measurement method",
          "description": "The method used to measure salinity.",
          "title": "salinity measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 116,
          "slot_uri": "GENEPIO:0100807",
          "alias": "salinity_measurement_method",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "total nitrogen (TN) measurement value": {
          "name": "total nitrogen (TN) measurement value",
          "description": "The numerical value of a measurement of total nitrogen (TN).",
          "title": "total nitrogen (TN) measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 117,
          "slot_uri": "GENEPIO:0100808",
          "alias": "total_nitrogen_(TN)_measurement_value",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "total nitrogen (TN) measurement unit": {
          "name": "total nitrogen (TN) measurement unit",
          "description": "The units of a measurement of total nitrogen (TN).",
          "title": "total nitrogen (TN) measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 118,
          "slot_uri": "GENEPIO:0100809",
          "alias": "total_nitrogen_(TN)_measurement_unit",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "total nitrogen (TN) measurement method": {
          "name": "total nitrogen (TN) measurement method",
          "description": "The method used to measure total nitrogen (TN).",
          "title": "total nitrogen (TN) measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 119,
          "slot_uri": "GENEPIO:0100810",
          "alias": "total_nitrogen_(TN)_measurement_method",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "total phosphorus (TP) measurement value": {
          "name": "total phosphorus (TP) measurement value",
          "description": "The numerical value of a measurement of total phosphorus (TP).",
          "title": "total phosphorus (TP) measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 120,
          "slot_uri": "GENEPIO:0100811",
          "alias": "total_phosphorus_(TP)_measurement_value",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "total phosphorus (TP) measurement unit": {
          "name": "total phosphorus (TP) measurement unit",
          "description": "The units of a measurement of total phosphorus (TP).",
          "title": "total phosphorus (TP) measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 121,
          "slot_uri": "GENEPIO:0100812",
          "alias": "total_phosphorus_(TP)_measurement_unit",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "total phosphorus (TP) measurement method": {
          "name": "total phosphorus (TP) measurement method",
          "description": "The method used to measure total phosphorus (TP).",
          "title": "total phosphorus (TP) measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 122,
          "slot_uri": "GENEPIO:0100813",
          "alias": "total_phosphorus_(TP)_measurement_method",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "fecal contamination indicator": {
          "name": "fecal contamination indicator",
          "description": "A gene, virus, bacteria, or substance used to measure the sanitary quality of water in regards to fecal contamination.",
          "title": "fecal contamination indicator",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 123,
          "slot_uri": "GENEPIO:0100814",
          "alias": "fecal_contamination_indicator",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "recommended": true
        },
        "fecal contamination value": {
          "name": "fecal contamination value",
          "description": "The numerical value of a measurement of fecal contamination.",
          "title": "fecal contamination value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 124,
          "slot_uri": "GENEPIO:0100815",
          "alias": "fecal_contamination_value",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString",
          "recommended": true
        },
        "fecal contamination unit": {
          "name": "fecal contamination unit",
          "description": "The units of a measurement of fecal contamination.",
          "title": "fecal contamination unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 125,
          "slot_uri": "GENEPIO:0100816",
          "alias": "fecal_contamination_unit",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "recommended": true
        },
        "fecal contamination method": {
          "name": "fecal contamination method",
          "description": "The method used to measure fecal contamination.",
          "title": "fecal contamination method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 126,
          "slot_uri": "GENEPIO:0100817",
          "alias": "fecal_contamination_method",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "fecal coliform count value": {
          "name": "fecal coliform count value",
          "description": "The numerical value of a measurement of fecal coliforms within a sample.",
          "title": "fecal coliform count value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 127,
          "slot_uri": "GENEPIO:0100818",
          "alias": "fecal_coliform_count_value",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "fecal coliform count unit": {
          "name": "fecal coliform count unit",
          "description": "The units of a measurement of fecal coliforms.",
          "title": "fecal coliform count unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 128,
          "slot_uri": "GENEPIO:0100819",
          "alias": "fecal_coliform_count_unit",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "fecal coliform count method": {
          "name": "fecal coliform count method",
          "description": "The method used to measure fecal coliforms.",
          "title": "fecal coliform count method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 129,
          "slot_uri": "GENEPIO:0100820",
          "alias": "fecal_coliform_count_method",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "urinary contamination indicator": {
          "name": "urinary contamination indicator",
          "description": "A gene, virus, bacteria, or substance used to measure the sanitary quality of water in regards to urinary contamination.",
          "title": "urinary contamination indicator",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 130,
          "slot_uri": "GENEPIO:0100837",
          "alias": "urinary_contamination_indicator",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "urinary contamination value": {
          "name": "urinary contamination value",
          "description": "The numerical value of a measurement of urinary contamination.",
          "title": "urinary contamination value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 131,
          "slot_uri": "GENEPIO:0100838",
          "alias": "urinary_contamination_value",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "urinary contamination unit": {
          "name": "urinary contamination unit",
          "description": "The units of a measurement of urinary contamination.",
          "title": "urinary contamination unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 132,
          "slot_uri": "GENEPIO:0100839",
          "alias": "urinary_contamination_unit",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "urinary contamination method": {
          "name": "urinary contamination method",
          "description": "The method used to measure urinary contamination.",
          "title": "urinary contamination method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 133,
          "slot_uri": "GENEPIO:0100840",
          "alias": "urinary_contamination_method",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "sample temperature value (at collection)": {
          "name": "sample temperature value (at collection)",
          "description": "The numerical value of a measurement of temperature of a sample at collection.",
          "title": "sample temperature value (at collection)",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 134,
          "slot_uri": "GENEPIO:0100821",
          "alias": "sample_temperature_value_(at_collection)",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "sample temperature unit (at collection)": {
          "name": "sample temperature unit (at collection)",
          "description": "The units of a measurement of temperature of a sample at the time of collection.",
          "title": "sample temperature unit (at collection)",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 135,
          "slot_uri": "GENEPIO:0100822",
          "alias": "sample_temperature_unit_(at_collection)",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "sample temperature value (when received)": {
          "name": "sample temperature value (when received)",
          "description": "The numerical value of a measurement of temperature of a sample upon receipt.",
          "title": "sample temperature value (when received)",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 136,
          "slot_uri": "GENEPIO:0100823",
          "alias": "sample_temperature_value_(when_received)",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "sample temperature unit (when received)": {
          "name": "sample temperature unit (when received)",
          "description": "The units of a measurement of temperature of a sample at the time upon receipt.",
          "title": "sample temperature unit (when received)",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 137,
          "slot_uri": "GENEPIO:0100824",
          "alias": "sample_temperature_unit_(when_received)",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "purpose of sequencing": {
          "name": "purpose of sequencing",
          "description": "The reason that the sample was sequenced.",
          "title": "purpose of sequencing",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 138,
          "slot_uri": "GENEPIO:0001445",
          "alias": "purpose_of_sequencing",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sequence information",
          "required": true
        },
        "purpose of sequencing details": {
          "name": "purpose of sequencing details",
          "description": "The description of why the sample was sequenced providing specific details.",
          "title": "purpose of sequencing details",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 139,
          "slot_uri": "GENEPIO:0001446",
          "alias": "purpose_of_sequencing_details",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sequence information",
          "range": "WhitespaceMinimizedString"
        },
        "sequence submitted by": {
          "name": "sequence submitted by",
          "description": "The name of the agency that submitted the sequence to a database.",
          "title": "sequence submitted by",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 140,
          "slot_uri": "GENEPIO:0001159",
          "alias": "sequence_submitted_by",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sequence information",
          "required": true
        },
        "sequence submitter contact email": {
          "name": "sequence submitter contact email",
          "description": "The email address of the contact responsible for follow-up regarding the sequence.",
          "title": "sequence submitter contact email",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 141,
          "slot_uri": "GENEPIO:0001165",
          "alias": "sequence_submitter_contact_email",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sequence information",
          "recommended": true,
          "pattern": "^\\S+@\\S+\\.\\S+$"
        },
        "sequencing date": {
          "name": "sequencing date",
          "description": "The date the sample was sequenced.",
          "title": "sequencing date",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 142,
          "slot_uri": "GENEPIO:0001447",
          "alias": "sequencing_date",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sequence information",
          "range": "date"
        },
        "library ID": {
          "name": "library ID",
          "description": "The user-specified identifier for the library prepared for sequencing.",
          "title": "library ID",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 143,
          "slot_uri": "GENEPIO:0001448",
          "alias": "library_ID",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sequence information",
          "range": "WhitespaceMinimizedString"
        },
        "sequencing platform": {
          "name": "sequencing platform",
          "description": "The platform technology used to perform the sequencing.",
          "title": "sequencing platform",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 144,
          "slot_uri": "GENEPIO:0100473",
          "alias": "sequencing_platform",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sequence information"
        },
        "sequencing instrument": {
          "name": "sequencing instrument",
          "description": "The model of the sequencing instrument used.",
          "title": "sequencing instrument",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 145,
          "slot_uri": "GENEPIO:0001452",
          "alias": "sequencing_instrument",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sequence information",
          "required": true
        },
        "sequencing method type": {
          "name": "sequencing method type",
          "title": "sequencing method type",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 146,
          "alias": "sequencing_method_type",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sequence information",
          "recommended": true
        },
        "library preparation kit": {
          "name": "library preparation kit",
          "description": "The name of the DNA library preparation kit used to generate the library being sequenced.",
          "title": "library preparation kit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 147,
          "slot_uri": "GENEPIO:0001450",
          "alias": "library_preparation_kit",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sequence information",
          "range": "WhitespaceMinimizedString"
        },
        "sequencing protocol": {
          "name": "sequencing protocol",
          "description": "The protocol or method used for sequencing.",
          "title": "sequencing protocol",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 148,
          "slot_uri": "GENEPIO:0001454",
          "alias": "sequencing_protocol",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sequence information",
          "range": "WhitespaceMinimizedString",
          "recommended": true
        },
        "DNA fragment length": {
          "name": "DNA fragment length",
          "description": "The length of the DNA fragment generated by mechanical shearing or enzymatic digestion for the purposes of library preparation.",
          "title": "DNA fragment length",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 149,
          "slot_uri": "GENEPIO:0100843",
          "alias": "DNA_fragment_length",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sequence information",
          "range": "WhitespaceMinimizedString"
        },
        "genomic target enrichment method": {
          "name": "genomic target enrichment method",
          "title": "genomic target enrichment method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 150,
          "slot_uri": "GENEPIO:0100966",
          "alias": "genomic_target_enrichment_method",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sequence information",
          "recommended": true
        },
        "genomic target enrichment method details": {
          "name": "genomic target enrichment method details",
          "title": "genomic target enrichment method details",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 151,
          "slot_uri": "GENEPIO:0100967",
          "alias": "genomic_target_enrichment_method_details",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sequence information",
          "range": "WhitespaceMinimizedString"
        },
        "quality control method name": {
          "name": "quality control method name",
          "description": "The name of the method used to assess whether a sequence passed a predetermined quality control threshold.",
          "title": "quality control method name",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 152,
          "slot_uri": "GENEPIO:0100557",
          "alias": "quality_control_method_name",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "WhitespaceMinimizedString"
        },
        "quality control method version": {
          "name": "quality control method version",
          "description": "The version number of the method used to assess whether a sequence passed a predetermined quality control threshold.",
          "title": "quality control method version",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 153,
          "slot_uri": "GENEPIO:0100558",
          "alias": "quality_control_method_version",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "WhitespaceMinimizedString"
        },
        "quality control determination": {
          "name": "quality control determination",
          "description": "The determination of a quality control assessment.",
          "title": "quality control determination",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 154,
          "slot_uri": "GENEPIO:0100559",
          "alias": "quality_control_determination",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Bioinformatics and QC metrics"
        },
        "quality control issues": {
          "name": "quality control issues",
          "description": "The reason contributing to, or causing, a low quality determination in a quality control assessment.",
          "title": "quality control issues",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 155,
          "slot_uri": "GENEPIO:0100560",
          "alias": "quality_control_issues",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Bioinformatics and QC metrics"
        },
        "quality control details": {
          "name": "quality control details",
          "description": "The details surrounding a low quality determination in a quality control assessment.",
          "title": "quality control details",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 156,
          "slot_uri": "GENEPIO:0100561",
          "alias": "quality_control_details",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "WhitespaceMinimizedString"
        },
        "raw sequence data processing method": {
          "name": "raw sequence data processing method",
          "description": "The names of the software and version number used for raw data processing such as removing barcodes, adapter trimming, filtering etc.",
          "title": "raw sequence data processing method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 157,
          "slot_uri": "GENEPIO:0001458",
          "alias": "raw_sequence_data_processing_method",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "recommended": true
        },
        "dehosting method": {
          "name": "dehosting method",
          "description": "The method used to remove host reads from the pathogen sequence.",
          "title": "dehosting method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 158,
          "slot_uri": "GENEPIO:0001459",
          "alias": "dehosting_method",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "recommended": true
        },
        "sequence assembly software name": {
          "name": "sequence assembly software name",
          "description": "The name of the software used to assemble a sequence.",
          "title": "sequence assembly software name",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 159,
          "slot_uri": "GENEPIO:0100825",
          "alias": "sequence_assembly_software_name",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "required": true
        },
        "sequence assembly software version": {
          "name": "sequence assembly software version",
          "description": "The version of the software used to assemble a sequence.",
          "title": "sequence assembly software version",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 160,
          "slot_uri": "GENEPIO:0100826",
          "alias": "sequence_assembly_software_version",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "required": true
        },
        "read mapping software name": {
          "name": "read mapping software name",
          "description": "The name of the software used to map sequence reads to a reference genome or set of reference genes.",
          "title": "read mapping software name",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 161,
          "slot_uri": "GENEPIO:0100832",
          "alias": "read_mapping_software_name",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "WhitespaceMinimizedString"
        },
        "read mapping software version": {
          "name": "read mapping software version",
          "description": "The version of the software used to map sequence reads to a reference genome or set of reference genes.",
          "title": "read mapping software version",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 162,
          "slot_uri": "GENEPIO:0100833",
          "alias": "read_mapping_software_version",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "WhitespaceMinimizedString"
        },
        "taxonomic reference database name": {
          "name": "taxonomic reference database name",
          "description": "The name of the taxonomic reference database used to identify the organism.",
          "title": "taxonomic reference database name",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 163,
          "slot_uri": "GENEPIO:0100834",
          "alias": "taxonomic_reference_database_name",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "WhitespaceMinimizedString"
        },
        "taxonomic reference database version": {
          "name": "taxonomic reference database version",
          "description": "The version of the taxonomic reference database used to identify the organism.",
          "title": "taxonomic reference database version",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 164,
          "slot_uri": "GENEPIO:0100835",
          "alias": "taxonomic_reference_database_version",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "WhitespaceMinimizedString"
        },
        "read mapping criteria": {
          "name": "read mapping criteria",
          "description": "A description of the criteria used to map reads to a reference sequence.",
          "title": "read mapping criteria",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 165,
          "slot_uri": "GENEPIO:0100836",
          "alias": "read_mapping_criteria",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "WhitespaceMinimizedString"
        },
        "bioinformatics protocol": {
          "name": "bioinformatics protocol",
          "description": "A description of the overall bioinformatics strategy used.",
          "title": "bioinformatics protocol",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 166,
          "slot_uri": "GENEPIO:0001489",
          "alias": "bioinformatics_protocol",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "WhitespaceMinimizedString"
        },
        "organism": {
          "name": "organism",
          "description": "The name of the gene used in the diagnostic RT-PCR test.",
          "title": "organism",
          "comments": [
            "Provide the full name of the gene used in the test. The gene symbol (short form of gene name) can also be provided. Standardized gene names and symbols can be found in the Gene Ontology using this look-up service: https://bit.ly/2Sq1LbI"
          ],
          "examples": [
            {
              "value": "E gene (orf4)"
            }
          ],
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 167,
          "slot_uri": "GENEPIO:0001191",
          "alias": "organism",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Pathogen diagnostic testing"
        },
        "gene name": {
          "name": "gene name",
          "description": "The binary value of the result from a diagnostic test.",
          "title": "gene name",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 168,
          "slot_uri": "GENEPIO:0100655",
          "alias": "gene_name",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Pathogen diagnostic testing"
        },
        "diagnostic target presence": {
          "name": "diagnostic target presence",
          "description": "The value of the result from a diagnostic test.",
          "title": "diagnostic target presence",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 169,
          "slot_uri": "GENEPIO:0100962",
          "alias": "diagnostic_target_presence",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Pathogen diagnostic testing"
        },
        "diagnostic measurement value": {
          "name": "diagnostic measurement value",
          "description": "The unit of the result from a diagnostic test.",
          "title": "diagnostic measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 170,
          "slot_uri": "GENEPIO:0100963",
          "alias": "diagnostic_measurement_value",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Pathogen diagnostic testing",
          "range": "WhitespaceMinimizedString"
        },
        "diagnostic measurement unit": {
          "name": "diagnostic measurement unit",
          "description": "The method by which a diagnostic result was received.",
          "title": "diagnostic measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 171,
          "slot_uri": "GENEPIO:0100964",
          "alias": "diagnostic_measurement_unit",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Pathogen diagnostic testing"
        },
        "diagnostic measurement method": {
          "name": "diagnostic measurement method",
          "title": "diagnostic measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 172,
          "slot_uri": "GENEPIO:0100965",
          "alias": "diagnostic_measurement_method",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Pathogen diagnostic testing"
        },
        "authors": {
          "name": "authors",
          "description": "Names of individuals contributing to the processes of sample collection, sequence generation, analysis, and data submission.",
          "title": "authors",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 173,
          "slot_uri": "GENEPIO:0001517",
          "alias": "authors",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Contributor acknowledgement",
          "range": "WhitespaceMinimizedString",
          "recommended": true
        },
        "DataHarmonizer provenance": {
          "name": "DataHarmonizer provenance",
          "description": "The DataHarmonizer software and template version provenance.",
          "title": "DataHarmonizer provenance",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 174,
          "slot_uri": "GENEPIO:0001518",
          "alias": "DataHarmonizer_provenance",
          "owner": "WastewaterAMR",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Contributor acknowledgement",
          "range": "Provenance"
        }
      }
    },
    "WastewaterSARS-CoV-2": {
      "name": "WastewaterSARS-CoV-2",
      "description": "A public health microbial genomic surveillance specification for standardizing SARS-CoV-2 amplicon sequencing contextual data from wastewater. Developed in collaboration by CIDGOH, PHA4GE, PHAC-NML, The Broad Institute, and the Bill & Melinda Gates Foundation.",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "see_also": [
        "templates/wastewater/SOP.pdf"
      ],
      "is_a": "dh_interface",
      "slot_usage": {
        "specimen collector sample ID": {
          "name": "specimen collector sample ID",
          "rank": 1,
          "slot_group": "Database identifiers"
        },
        "specimen collector subsample ID": {
          "name": "specimen collector subsample ID",
          "rank": 2,
          "slot_group": "Database identifiers"
        },
        "pooled sample ID": {
          "name": "pooled sample ID",
          "rank": 3,
          "slot_group": "Database identifiers"
        },
        "specimen collector project ID": {
          "name": "specimen collector project ID",
          "rank": 4,
          "slot_group": "Database identifiers"
        },
        "BioProject accession": {
          "name": "BioProject accession",
          "rank": 5,
          "slot_group": "Database identifiers"
        },
        "BioSample accession": {
          "name": "BioSample accession",
          "rank": 6,
          "slot_group": "Database identifiers"
        },
        "GenBank accession (versioned)": {
          "name": "GenBank accession (versioned)",
          "rank": 7,
          "slot_group": "Database identifiers"
        },
        "SRA accession": {
          "name": "SRA accession",
          "rank": 8,
          "slot_group": "Database identifiers"
        },
        "GISAID accession": {
          "name": "GISAID accession",
          "rank": 9,
          "slot_group": "Database identifiers"
        },
        "GISAID virus name": {
          "name": "GISAID virus name",
          "rank": 10,
          "slot_group": "Database identifiers"
        },
        "ENA accession": {
          "name": "ENA accession",
          "rank": 11,
          "slot_group": "Database identifiers"
        },
        "DDBJ accession": {
          "name": "DDBJ accession",
          "rank": 12,
          "slot_group": "Database identifiers"
        },
        "DRA accession": {
          "name": "DRA accession",
          "rank": 13,
          "slot_group": "Database identifiers"
        },
        "GSA accession": {
          "name": "GSA accession",
          "rank": 14,
          "slot_group": "Database identifiers"
        },
        "Enterobase accession": {
          "name": "Enterobase accession",
          "rank": 15,
          "slot_group": "Database identifiers"
        },
        "sampling site ID": {
          "name": "sampling site ID",
          "rank": 16,
          "slot_group": "Database identifiers"
        },
        "sampling event ID": {
          "name": "sampling event ID",
          "rank": 17,
          "slot_group": "Database identifiers"
        },
        "sample collection data steward name": {
          "name": "sample collection data steward name",
          "rank": 18,
          "slot_group": "Sample collection and processing"
        },
        "sample collected by": {
          "name": "sample collected by",
          "rank": 19,
          "slot_group": "Sample collection and processing"
        },
        "sample collector contact email": {
          "name": "sample collector contact email",
          "rank": 20,
          "slot_group": "Sample collection and processing"
        },
        "geo_loc_name (country)": {
          "name": "geo_loc_name (country)",
          "rank": 21,
          "slot_group": "Sample collection and processing"
        },
        "geo_loc_name (state/province/territory)": {
          "name": "geo_loc_name (state/province/territory)",
          "rank": 22,
          "slot_group": "Sample collection and processing"
        },
        "geo_loc name (county/region)": {
          "name": "geo_loc name (county/region)",
          "rank": 23,
          "slot_group": "Sample collection and processing"
        },
        "geo_loc_name (city)": {
          "name": "geo_loc_name (city)",
          "rank": 24,
          "slot_group": "Sample collection and processing"
        },
        "geo_loc name (site)": {
          "name": "geo_loc name (site)",
          "rank": 25,
          "slot_group": "Sample collection and processing"
        },
        "geo_loc latitude": {
          "name": "geo_loc latitude",
          "rank": 26,
          "slot_group": "Sample collection and processing"
        },
        "geo_loc longitude": {
          "name": "geo_loc longitude",
          "rank": 27,
          "slot_group": "Sample collection and processing"
        },
        "watershed shapefile availability": {
          "name": "watershed shapefile availability",
          "rank": 28,
          "slot_group": "Sample collection and processing"
        },
        "watershed shapefile filename": {
          "name": "watershed shapefile filename",
          "rank": 29,
          "slot_group": "Sample collection and processing"
        },
        "organism": {
          "name": "organism",
          "description": "The name of the gene used in the diagnostic RT-PCR test.",
          "comments": [
            "Provide the full name of the gene used in the test. The gene symbol (short form of gene name) can also be provided. Standardized gene names and symbols can be found in the Gene Ontology using this look-up service: https://bit.ly/2Sq1LbI"
          ],
          "examples": [
            {
              "value": "E gene (orf4)"
            }
          ],
          "rank": 177,
          "slot_group": "Pathogen diagnostic testing"
        },
        "purpose of sampling": {
          "name": "purpose of sampling",
          "rank": 31,
          "slot_group": "Sample collection and processing"
        },
        "scope of sampling": {
          "name": "scope of sampling",
          "rank": 32,
          "slot_group": "Sample collection and processing"
        },
        "sample received date": {
          "name": "sample received date",
          "rank": 33,
          "slot_group": "Sample collection and processing"
        },
        "sample collection date": {
          "name": "sample collection date",
          "rank": 34,
          "slot_group": "Sample collection and processing"
        },
        "sample processing date": {
          "name": "sample processing date",
          "rank": 35,
          "slot_group": "Sample collection and processing"
        },
        "sample collection time": {
          "name": "sample collection time",
          "rank": 36,
          "slot_group": "Sample collection and processing"
        },
        "sample collection time of day": {
          "name": "sample collection time of day",
          "rank": 37,
          "slot_group": "Sample collection and processing"
        },
        "sample collection time duration value": {
          "name": "sample collection time duration value",
          "rank": 38,
          "slot_group": "Sample collection and processing"
        },
        "sample collection time duration unit": {
          "name": "sample collection time duration unit",
          "rank": 39,
          "slot_group": "Sample collection and processing"
        },
        "presampling activity": {
          "name": "presampling activity",
          "rank": 40,
          "slot_group": "Sample collection and processing"
        },
        "presampling activity details": {
          "name": "presampling activity details",
          "rank": 41,
          "slot_group": "Sample collection and processing"
        },
        "sample volume measurement value": {
          "name": "sample volume measurement value",
          "rank": 42,
          "slot_group": "Sample collection and processing"
        },
        "sample volume measurement unit": {
          "name": "sample volume measurement unit",
          "rank": 43,
          "slot_group": "Sample collection and processing"
        },
        "sample storage method": {
          "name": "sample storage method",
          "rank": 44,
          "slot_group": "Sample collection and processing"
        },
        "sample storage medium": {
          "name": "sample storage medium",
          "rank": 45,
          "slot_group": "Sample collection and processing"
        },
        "sample storage duration value": {
          "name": "sample storage duration value",
          "rank": 46,
          "slot_group": "Sample collection and processing"
        },
        "sample storage duration unit": {
          "name": "sample storage duration unit",
          "rank": 47,
          "slot_group": "Sample collection and processing"
        },
        "specimen processing": {
          "name": "specimen processing",
          "rank": 48,
          "slot_group": "Sample collection and processing"
        },
        "specimen processing details": {
          "name": "specimen processing details",
          "rank": 49,
          "slot_group": "Sample collection and processing"
        },
        "environmental site": {
          "name": "environmental site",
          "rank": 50,
          "slot_group": "Sample collection and processing"
        },
        "environmental material": {
          "name": "environmental material",
          "rank": 51,
          "slot_group": "Sample collection and processing"
        },
        "environmental material properties": {
          "name": "environmental material properties",
          "rank": 52,
          "slot_group": "Sample collection and processing"
        },
        "wastewater system type": {
          "name": "wastewater system type",
          "rank": 53,
          "slot_group": "Sample collection and processing"
        },
        "experimental control type": {
          "name": "experimental control type",
          "rank": 54,
          "slot_group": "Sample collection and processing"
        },
        "experimental control details": {
          "name": "experimental control details",
          "rank": 55,
          "slot_group": "Sample collection and processing"
        },
        "collection device": {
          "name": "collection device",
          "rank": 56,
          "slot_group": "Sample collection and processing"
        },
        "collection method": {
          "name": "collection method",
          "rank": 57,
          "slot_group": "Sample collection and processing"
        },
        "nucleic acid extraction method": {
          "name": "nucleic acid extraction method",
          "rank": 58,
          "slot_group": "Sample collection and processing"
        },
        "extraction kit": {
          "name": "extraction kit",
          "rank": 59,
          "slot_group": "Sample collection and processing"
        },
        "endogenous control details": {
          "name": "endogenous control details",
          "rank": 60,
          "slot_group": "Sample collection and processing"
        },
        "extraction recovery efficiency measurement value": {
          "name": "extraction recovery efficiency measurement value",
          "rank": 61,
          "slot_group": "Sample collection and processing"
        },
        "extraction recovery efficiency measurement method": {
          "name": "extraction recovery efficiency measurement method",
          "rank": 62,
          "slot_group": "Sample collection and processing"
        },
        "water catchment area human population measurement value": {
          "name": "water catchment area human population measurement value",
          "rank": 63,
          "slot_group": "Environmental conditions and measurements"
        },
        "water catchment area human population range": {
          "name": "water catchment area human population range",
          "rank": 64,
          "slot_group": "Environmental conditions and measurements"
        },
        "water catchment area human population measurement method": {
          "name": "water catchment area human population measurement method",
          "rank": 65,
          "slot_group": "Environmental conditions and measurements"
        },
        "water catchment area human population density value": {
          "name": "water catchment area human population density value",
          "rank": 66,
          "slot_group": "Environmental conditions and measurements"
        },
        "water catchment area human population density unit": {
          "name": "water catchment area human population density unit",
          "rank": 67,
          "slot_group": "Environmental conditions and measurements"
        },
        "populated area type": {
          "name": "populated area type",
          "rank": 68,
          "slot_group": "Environmental conditions and measurements"
        },
        "sampling weather conditions": {
          "name": "sampling weather conditions",
          "rank": 69,
          "slot_group": "Environmental conditions and measurements"
        },
        "presampling weather conditions": {
          "name": "presampling weather conditions",
          "rank": 70,
          "slot_group": "Environmental conditions and measurements"
        },
        "precipitation measurement value": {
          "name": "precipitation measurement value",
          "rank": 71,
          "slot_group": "Environmental conditions and measurements"
        },
        "precipitation measurement unit": {
          "name": "precipitation measurement unit",
          "rank": 72,
          "slot_group": "Environmental conditions and measurements"
        },
        "precipitation measurement method": {
          "name": "precipitation measurement method",
          "rank": 73,
          "slot_group": "Environmental conditions and measurements"
        },
        "ambient temperature measurement value": {
          "name": "ambient temperature measurement value",
          "rank": 74,
          "slot_group": "Environmental conditions and measurements"
        },
        "ambient temperature measurement unit": {
          "name": "ambient temperature measurement unit",
          "rank": 75,
          "slot_group": "Environmental conditions and measurements"
        },
        "pH measurement value": {
          "name": "pH measurement value",
          "rank": 76,
          "slot_group": "Environmental conditions and measurements"
        },
        "pH measurement method": {
          "name": "pH measurement method",
          "rank": 77,
          "slot_group": "Environmental conditions and measurements"
        },
        "total daily flow rate measurement value": {
          "name": "total daily flow rate measurement value",
          "rank": 78,
          "slot_group": "Environmental conditions and measurements"
        },
        "total daily flow rate measurement unit": {
          "name": "total daily flow rate measurement unit",
          "rank": 79,
          "slot_group": "Environmental conditions and measurements"
        },
        "total daily flow rate measurement method": {
          "name": "total daily flow rate measurement method",
          "rank": 80,
          "slot_group": "Environmental conditions and measurements"
        },
        "instantaneous flow rate measurement value": {
          "name": "instantaneous flow rate measurement value",
          "rank": 81,
          "slot_group": "Environmental conditions and measurements"
        },
        "instantaneous flow rate measurement unit": {
          "name": "instantaneous flow rate measurement unit",
          "rank": 82,
          "slot_group": "Environmental conditions and measurements"
        },
        "instantaneous flow rate measurement method": {
          "name": "instantaneous flow rate measurement method",
          "rank": 83,
          "slot_group": "Environmental conditions and measurements"
        },
        "turbidity measurement value": {
          "name": "turbidity measurement value",
          "rank": 84,
          "slot_group": "Environmental conditions and measurements"
        },
        "turbidity measurement unit": {
          "name": "turbidity measurement unit",
          "rank": 85,
          "slot_group": "Environmental conditions and measurements"
        },
        "turbidity measurement method": {
          "name": "turbidity measurement method",
          "rank": 86,
          "slot_group": "Environmental conditions and measurements"
        },
        "dissolved oxygen measurement value": {
          "name": "dissolved oxygen measurement value",
          "rank": 87,
          "slot_group": "Environmental conditions and measurements"
        },
        "dissolved oxygen measurement unit": {
          "name": "dissolved oxygen measurement unit",
          "rank": 88,
          "slot_group": "Environmental conditions and measurements"
        },
        "dissolved oxygen measurement method": {
          "name": "dissolved oxygen measurement method",
          "rank": 89,
          "slot_group": "Environmental conditions and measurements"
        },
        "oxygen reduction potential (ORP) measurement value": {
          "name": "oxygen reduction potential (ORP) measurement value",
          "rank": 90,
          "slot_group": "Environmental conditions and measurements"
        },
        "oxygen reduction potential (ORP) measurement unit": {
          "name": "oxygen reduction potential (ORP) measurement unit",
          "rank": 91,
          "slot_group": "Environmental conditions and measurements"
        },
        "oxygen reduction potential (ORP) measurement method": {
          "name": "oxygen reduction potential (ORP) measurement method",
          "rank": 92,
          "slot_group": "Environmental conditions and measurements"
        },
        "chemical oxygen demand (COD) measurement value": {
          "name": "chemical oxygen demand (COD) measurement value",
          "rank": 93,
          "slot_group": "Environmental conditions and measurements"
        },
        "chemical oxygen demand (COD) measurement unit": {
          "name": "chemical oxygen demand (COD) measurement unit",
          "rank": 94,
          "slot_group": "Environmental conditions and measurements"
        },
        "chemical oxygen demand (COD) measurement method": {
          "name": "chemical oxygen demand (COD) measurement method",
          "rank": 95,
          "slot_group": "Environmental conditions and measurements"
        },
        "carbonaceous biochemical oxygen demand (CBOD) measurement value": {
          "name": "carbonaceous biochemical oxygen demand (CBOD) measurement value",
          "rank": 96,
          "slot_group": "Environmental conditions and measurements"
        },
        "carbonaceous biochemical oxygen demand (CBOD) measurement unit": {
          "name": "carbonaceous biochemical oxygen demand (CBOD) measurement unit",
          "rank": 97,
          "slot_group": "Environmental conditions and measurements"
        },
        "carbonaceous biochemical oxygen demand (CBOD) measurement method": {
          "name": "carbonaceous biochemical oxygen demand (CBOD) measurement method",
          "rank": 98,
          "slot_group": "Environmental conditions and measurements"
        },
        "total suspended solids (TSS) measurement value": {
          "name": "total suspended solids (TSS) measurement value",
          "rank": 99,
          "slot_group": "Environmental conditions and measurements"
        },
        "total suspended solids (TSS) measurement unit": {
          "name": "total suspended solids (TSS) measurement unit",
          "rank": 100,
          "slot_group": "Environmental conditions and measurements"
        },
        "total suspended solids (TSS) measurement method": {
          "name": "total suspended solids (TSS) measurement method",
          "rank": 101,
          "slot_group": "Environmental conditions and measurements"
        },
        "total dissolved solids (TDS) measurement value": {
          "name": "total dissolved solids (TDS) measurement value",
          "rank": 102,
          "slot_group": "Environmental conditions and measurements"
        },
        "total dissolved solids (TDS) measurement unit": {
          "name": "total dissolved solids (TDS) measurement unit",
          "rank": 103,
          "slot_group": "Environmental conditions and measurements"
        },
        "total dissolved solids (TDS) measurement method": {
          "name": "total dissolved solids (TDS) measurement method",
          "rank": 104,
          "slot_group": "Environmental conditions and measurements"
        },
        "total solids (TS) measurement value": {
          "name": "total solids (TS) measurement value",
          "rank": 105,
          "slot_group": "Environmental conditions and measurements"
        },
        "total solids (TS) measurement unit": {
          "name": "total solids (TS) measurement unit",
          "rank": 106,
          "slot_group": "Environmental conditions and measurements"
        },
        "total solids (TS) measurement method": {
          "name": "total solids (TS) measurement method",
          "rank": 107,
          "slot_group": "Environmental conditions and measurements"
        },
        "alkalinity measurement value": {
          "name": "alkalinity measurement value",
          "rank": 108,
          "slot_group": "Environmental conditions and measurements"
        },
        "alkalinity measurement unit": {
          "name": "alkalinity measurement unit",
          "rank": 109,
          "slot_group": "Environmental conditions and measurements"
        },
        "alkalinity measurement method": {
          "name": "alkalinity measurement method",
          "rank": 110,
          "slot_group": "Environmental conditions and measurements"
        },
        "conductivity measurement value": {
          "name": "conductivity measurement value",
          "rank": 111,
          "slot_group": "Environmental conditions and measurements"
        },
        "conductivity measurement unit": {
          "name": "conductivity measurement unit",
          "rank": 112,
          "slot_group": "Environmental conditions and measurements"
        },
        "conductivity measurement method": {
          "name": "conductivity measurement method",
          "rank": 113,
          "slot_group": "Environmental conditions and measurements"
        },
        "salinity measurement value": {
          "name": "salinity measurement value",
          "rank": 114,
          "slot_group": "Environmental conditions and measurements"
        },
        "salinity measurement unit": {
          "name": "salinity measurement unit",
          "rank": 115,
          "slot_group": "Environmental conditions and measurements"
        },
        "salinity measurement method": {
          "name": "salinity measurement method",
          "rank": 116,
          "slot_group": "Environmental conditions and measurements"
        },
        "total nitrogen (TN) measurement value": {
          "name": "total nitrogen (TN) measurement value",
          "rank": 117,
          "slot_group": "Environmental conditions and measurements"
        },
        "total nitrogen (TN) measurement unit": {
          "name": "total nitrogen (TN) measurement unit",
          "rank": 118,
          "slot_group": "Environmental conditions and measurements"
        },
        "total nitrogen (TN) measurement method": {
          "name": "total nitrogen (TN) measurement method",
          "rank": 119,
          "slot_group": "Environmental conditions and measurements"
        },
        "total phosphorus (TP) measurement value": {
          "name": "total phosphorus (TP) measurement value",
          "rank": 120,
          "slot_group": "Environmental conditions and measurements"
        },
        "total phosphorus (TP) measurement unit": {
          "name": "total phosphorus (TP) measurement unit",
          "rank": 121,
          "slot_group": "Environmental conditions and measurements"
        },
        "total phosphorus (TP) measurement method": {
          "name": "total phosphorus (TP) measurement method",
          "rank": 122,
          "slot_group": "Environmental conditions and measurements"
        },
        "fecal contamination indicator": {
          "name": "fecal contamination indicator",
          "rank": 123,
          "slot_group": "Environmental conditions and measurements"
        },
        "fecal contamination value": {
          "name": "fecal contamination value",
          "rank": 124,
          "slot_group": "Environmental conditions and measurements"
        },
        "fecal contamination unit": {
          "name": "fecal contamination unit",
          "rank": 125,
          "slot_group": "Environmental conditions and measurements"
        },
        "fecal contamination method": {
          "name": "fecal contamination method",
          "rank": 126,
          "slot_group": "Environmental conditions and measurements"
        },
        "fecal coliform count value": {
          "name": "fecal coliform count value",
          "rank": 127,
          "slot_group": "Environmental conditions and measurements"
        },
        "fecal coliform count unit": {
          "name": "fecal coliform count unit",
          "rank": 128,
          "slot_group": "Environmental conditions and measurements"
        },
        "fecal coliform count method": {
          "name": "fecal coliform count method",
          "rank": 129,
          "slot_group": "Environmental conditions and measurements"
        },
        "urinary contamination indicator": {
          "name": "urinary contamination indicator",
          "rank": 130,
          "slot_group": "Environmental conditions and measurements"
        },
        "urinary contamination value": {
          "name": "urinary contamination value",
          "rank": 131,
          "slot_group": "Environmental conditions and measurements"
        },
        "urinary contamination unit": {
          "name": "urinary contamination unit",
          "rank": 132,
          "slot_group": "Environmental conditions and measurements"
        },
        "urinary contamination method": {
          "name": "urinary contamination method",
          "rank": 133,
          "slot_group": "Environmental conditions and measurements"
        },
        "sample temperature value (at collection)": {
          "name": "sample temperature value (at collection)",
          "rank": 134,
          "slot_group": "Environmental conditions and measurements"
        },
        "sample temperature unit (at collection)": {
          "name": "sample temperature unit (at collection)",
          "rank": 135,
          "slot_group": "Environmental conditions and measurements"
        },
        "sample temperature value (when received)": {
          "name": "sample temperature value (when received)",
          "rank": 136,
          "slot_group": "Environmental conditions and measurements"
        },
        "sample temperature unit (when received)": {
          "name": "sample temperature unit (when received)",
          "rank": 137,
          "slot_group": "Environmental conditions and measurements"
        },
        "purpose of sequencing": {
          "name": "purpose of sequencing",
          "rank": 138,
          "slot_group": "Sequence information"
        },
        "purpose of sequencing details": {
          "name": "purpose of sequencing details",
          "rank": 139,
          "slot_group": "Sequence information"
        },
        "sequence submitted by": {
          "name": "sequence submitted by",
          "rank": 140,
          "slot_group": "Sequence information"
        },
        "sequence submitter contact email": {
          "name": "sequence submitter contact email",
          "rank": 141,
          "slot_group": "Sequence information"
        },
        "sequencing date": {
          "name": "sequencing date",
          "rank": 142,
          "slot_group": "Sequence information"
        },
        "library ID": {
          "name": "library ID",
          "rank": 143,
          "slot_group": "Sequence information"
        },
        "sequencing platform": {
          "name": "sequencing platform",
          "rank": 144,
          "slot_group": "Sequence information"
        },
        "sequencing instrument": {
          "name": "sequencing instrument",
          "rank": 145,
          "slot_group": "Sequence information"
        },
        "sequencing method type": {
          "name": "sequencing method type",
          "rank": 146,
          "slot_group": "Sequence information"
        },
        "library preparation kit": {
          "name": "library preparation kit",
          "rank": 147,
          "slot_group": "Sequence information"
        },
        "sequencing protocol": {
          "name": "sequencing protocol",
          "rank": 148,
          "slot_group": "Sequence information"
        },
        "amplicon pcr primer scheme": {
          "name": "amplicon pcr primer scheme",
          "rank": 149,
          "slot_group": "Sequence information"
        },
        "amplicon size": {
          "name": "amplicon size",
          "rank": 150,
          "slot_group": "Sequence information"
        },
        "quality control method name": {
          "name": "quality control method name",
          "rank": 151,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "quality control method version": {
          "name": "quality control method version",
          "rank": 152,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "quality control determination": {
          "name": "quality control determination",
          "rank": 153,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "quality control issues": {
          "name": "quality control issues",
          "rank": 154,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "quality control details": {
          "name": "quality control details",
          "rank": 155,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "raw sequence data processing method": {
          "name": "raw sequence data processing method",
          "rank": 156,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "dehosting method": {
          "name": "dehosting method",
          "rank": 157,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "consensus sequence software name": {
          "name": "consensus sequence software name",
          "rank": 2,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "consensus sequence software version": {
          "name": "consensus sequence software version",
          "rank": 3,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "breadth of coverage value": {
          "name": "breadth of coverage value",
          "rank": 160,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "depth of coverage value": {
          "name": "depth of coverage value",
          "rank": 161,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "depth of coverage threshold": {
          "name": "depth of coverage threshold",
          "rank": 162,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "genome completeness": {
          "name": "genome completeness",
          "rank": 163,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "number of base pairs sequenced": {
          "name": "number of base pairs sequenced",
          "rank": 4,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "number of total reads": {
          "name": "number of total reads",
          "rank": 5,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "number of unique reads": {
          "name": "number of unique reads",
          "rank": 6,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "minimum post-trimming read length": {
          "name": "minimum post-trimming read length",
          "rank": 7,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "number of contigs": {
          "name": "number of contigs",
          "rank": 8,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "percent Ns across total genome length": {
          "name": "percent Ns across total genome length",
          "rank": 9,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "Ns per 100 kbp": {
          "name": "Ns per 100 kbp",
          "rank": 10,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "N50": {
          "name": "N50",
          "rank": 11,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "percent read contamination": {
          "name": "percent read contamination",
          "rank": 12,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "consensus genome length": {
          "name": "consensus genome length",
          "rank": 13,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "reference genome accession": {
          "name": "reference genome accession",
          "rank": 14,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "deduplication method": {
          "name": "deduplication method",
          "rank": 15,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "bioinformatics protocol": {
          "name": "bioinformatics protocol",
          "rank": 176,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "gene name": {
          "name": "gene name",
          "rank": 178,
          "slot_group": "Pathogen diagnostic testing"
        },
        "diagnostic target presence": {
          "name": "diagnostic target presence",
          "rank": 179,
          "slot_group": "Pathogen diagnostic testing"
        },
        "diagnostic measurement value": {
          "name": "diagnostic measurement value",
          "rank": 180,
          "slot_group": "Pathogen diagnostic testing"
        },
        "diagnostic measurement unit": {
          "name": "diagnostic measurement unit",
          "rank": 181,
          "slot_group": "Pathogen diagnostic testing"
        },
        "diagnostic measurement method": {
          "name": "diagnostic measurement method",
          "rank": 182,
          "slot_group": "Pathogen diagnostic testing"
        },
        "authors": {
          "name": "authors",
          "rank": 183,
          "slot_group": "Contributor acknowledgement"
        },
        "DataHarmonizer provenance": {
          "name": "DataHarmonizer provenance",
          "rank": 184,
          "slot_group": "Contributor acknowledgement"
        }
      },
      "attributes": {
        "specimen collector sample ID": {
          "name": "specimen collector sample ID",
          "description": "The user-defined name for the sample.",
          "title": "specimen collector sample ID",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 1,
          "slot_uri": "GENEPIO:0001123",
          "identifier": true,
          "alias": "specimen_collector_sample_ID",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString",
          "required": true
        },
        "specimen collector subsample ID": {
          "name": "specimen collector subsample ID",
          "description": "The user-defined identifier assigned to a portion of the original sample.",
          "title": "specimen collector subsample ID",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 2,
          "slot_uri": "GENEPIO:0100752",
          "alias": "specimen_collector_subsample_ID",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString"
        },
        "pooled sample ID": {
          "name": "pooled sample ID",
          "description": "The user-defined identifier assigned to a combined (pooled) set of samples.",
          "title": "pooled sample ID",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 3,
          "slot_uri": "GENEPIO:0100996",
          "alias": "pooled_sample_ID",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString"
        },
        "specimen collector project ID": {
          "name": "specimen collector project ID",
          "description": "The user-defined project name assigned to a sequencing project.",
          "title": "specimen collector project ID",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 4,
          "slot_uri": "GENEPIO:0100918",
          "alias": "specimen_collector_project_ID",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString"
        },
        "BioProject accession": {
          "name": "BioProject accession",
          "description": "The INSDC (i.e., ENA, NCBI, or DDBJ) accession number of the BioProject(s) to which the BioSample belongs.",
          "title": "BioProject accession",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 5,
          "slot_uri": "GENEPIO:0001136",
          "alias": "BioProject_accession",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString",
          "pattern": "{UPPER_CASE}",
          "structured_pattern": {
            "syntax": "{UPPER_CASE}",
            "interpolated": true,
            "partial_match": false
          }
        },
        "BioSample accession": {
          "name": "BioSample accession",
          "description": "The identifier assigned to a BioSample in INSDC (i.e., ENA, NCBI, or DDBJ) archives.",
          "title": "BioSample accession",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 6,
          "slot_uri": "GENEPIO:0001139",
          "alias": "BioSample_accession",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString",
          "recommended": true,
          "pattern": "{UPPER_CASE}",
          "structured_pattern": {
            "syntax": "{UPPER_CASE}",
            "interpolated": true,
            "partial_match": false
          }
        },
        "GenBank accession (versioned)": {
          "name": "GenBank accession (versioned)",
          "description": "The versioned identifier assigned to an assembly or consensus sequence in GenBank archives.",
          "title": "GenBank accession (versioned)",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 7,
          "slot_uri": "GENEPIO:0100754",
          "alias": "GenBank_accession_(versioned)",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString",
          "pattern": "{UPPER_CASE}",
          "structured_pattern": {
            "syntax": "{UPPER_CASE}",
            "interpolated": true,
            "partial_match": false
          }
        },
        "SRA accession": {
          "name": "SRA accession",
          "description": "The Sequence Read Archive (SRA) identifier linking raw read data, methodological metadata and quality control metrics submitted to the INSDC.",
          "title": "SRA accession",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 8,
          "slot_uri": "GENEPIO:0001142",
          "alias": "SRA_accession",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString",
          "pattern": "{UPPER_CASE}",
          "structured_pattern": {
            "syntax": "{UPPER_CASE}",
            "interpolated": true,
            "partial_match": false
          }
        },
        "GISAID accession": {
          "name": "GISAID accession",
          "description": "The identifier assigned to a sequence in GISAID (the Global Initiative on Sharing All Influenza Data) archives.",
          "title": "GISAID accession",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 9,
          "slot_uri": "GENEPIO:0001147",
          "alias": "GISAID_accession",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString",
          "pattern": "{UPPER_CASE}",
          "structured_pattern": {
            "syntax": "{UPPER_CASE}",
            "interpolated": true,
            "partial_match": false
          }
        },
        "GISAID virus name": {
          "name": "GISAID virus name",
          "description": "The user-defined GISAID virus name assigned to the sequence.",
          "title": "GISAID virus name",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 10,
          "slot_uri": "GENEPIO:0100282",
          "alias": "GISAID_virus_name",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString",
          "pattern": "{UPPER_CASE}",
          "structured_pattern": {
            "syntax": "{UPPER_CASE}",
            "interpolated": true,
            "partial_match": false
          }
        },
        "ENA accession": {
          "name": "ENA accession",
          "description": "The identifier assigned to a BioSample in ENA (European Nucleotide Archive) archives.",
          "title": "ENA accession",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 11,
          "slot_uri": "GENEPIO:0100755",
          "alias": "ENA_accession",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString",
          "pattern": "{UPPER_CASE}",
          "structured_pattern": {
            "syntax": "{UPPER_CASE}",
            "interpolated": true,
            "partial_match": false
          }
        },
        "DDBJ accession": {
          "name": "DDBJ accession",
          "description": "The identifier assigned to a sequence in DDBJ (DNA Data Bank of Japan) archives.",
          "title": "DDBJ accession",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 12,
          "slot_uri": "GENEPIO:0100756",
          "alias": "DDBJ_accession",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString",
          "pattern": "{UPPER_CASE}",
          "structured_pattern": {
            "syntax": "{UPPER_CASE}",
            "interpolated": true,
            "partial_match": false
          }
        },
        "DRA accession": {
          "name": "DRA accession",
          "description": "The identifier assigned to a BioSample in DRA (DDBJ Sequence Read Archive) archives.",
          "title": "DRA accession",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 13,
          "slot_uri": "GENEPIO:0100757",
          "alias": "DRA_accession",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString",
          "pattern": "{UPPER_CASE}",
          "structured_pattern": {
            "syntax": "{UPPER_CASE}",
            "interpolated": true,
            "partial_match": false
          }
        },
        "GSA accession": {
          "name": "GSA accession",
          "description": "The identifier assigned to a BioSample in GSA (Genome Sequence Archive) archives.",
          "title": "GSA accession",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 14,
          "slot_uri": "GENEPIO:0100758",
          "alias": "GSA_accession",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString",
          "pattern": "{UPPER_CASE}",
          "structured_pattern": {
            "syntax": "{UPPER_CASE}",
            "interpolated": true,
            "partial_match": false
          }
        },
        "Enterobase accession": {
          "name": "Enterobase accession",
          "description": "The identifier assigned to a sequence in Enterobase archives.",
          "title": "Enterobase accession",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 15,
          "slot_uri": "GENEPIO:0100759",
          "alias": "Enterobase_accession",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString",
          "pattern": "{UPPER_CASE}",
          "structured_pattern": {
            "syntax": "{UPPER_CASE}",
            "interpolated": true,
            "partial_match": false
          }
        },
        "sampling site ID": {
          "name": "sampling site ID",
          "description": "The user-defined identifier assigned to a specific location from which samples are taken.",
          "title": "sampling site ID",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 16,
          "slot_uri": "GENEPIO:0100760",
          "alias": "sampling_site_ID",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString",
          "recommended": true
        },
        "sampling event ID": {
          "name": "sampling event ID",
          "description": "The user-defined identifier assigned to a specific event during which one or more samples are taken, from one or more sites.",
          "title": "sampling event ID",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 17,
          "slot_uri": "GENEPIO:0100761",
          "alias": "sampling_event_ID",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString",
          "recommended": true
        },
        "sample collection data steward name": {
          "name": "sample collection data steward name",
          "description": "The name of the individual at the organization that collected the original sample that plays a data governance role and oversees how a sample and associated contextual data is used and distributed.",
          "title": "sample collection data steward name",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 18,
          "slot_uri": "GENEPIO:0100762",
          "alias": "sample_collection_data_steward_name",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "sample collected by": {
          "name": "sample collected by",
          "description": "The name of the organization with which the sample collector is affiliated.",
          "title": "sample collected by",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 19,
          "slot_uri": "GENEPIO:0001153",
          "alias": "sample_collected_by",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "required": true
        },
        "sample collector contact email": {
          "name": "sample collector contact email",
          "description": "The email address of the contact responsible for follow-up regarding the sample.",
          "title": "sample collector contact email",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 20,
          "slot_uri": "GENEPIO:0001156",
          "alias": "sample_collector_contact_email",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString",
          "pattern": "^\\S+@\\S+\\.\\S+$"
        },
        "geo_loc_name (country)": {
          "name": "geo_loc_name (country)",
          "description": "The country of origin of the sample.",
          "title": "geo_loc_name (country)",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 21,
          "slot_uri": "GENEPIO:0001181",
          "alias": "geo_loc_name_(country)",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "required": true
        },
        "geo_loc_name (state/province/territory)": {
          "name": "geo_loc_name (state/province/territory)",
          "description": "The state/province/territory of origin of the sample.",
          "title": "geo_loc_name (state/province/territory)",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 22,
          "slot_uri": "GENEPIO:0001185",
          "alias": "geo_loc_name_(state/province/territory)",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "required": true
        },
        "geo_loc name (county/region)": {
          "name": "geo_loc name (county/region)",
          "description": "The county/region of origin of the sample.",
          "title": "geo_loc name (county/region)",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 23,
          "slot_uri": "GENEPIO:0100280",
          "alias": "geo_loc_name_(county/region)",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "geo_loc_name (city)": {
          "name": "geo_loc_name (city)",
          "description": "The city of origin of the sample.",
          "title": "geo_loc_name (city)",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 24,
          "slot_uri": "GENEPIO:0001189",
          "alias": "geo_loc_name_(city)",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "geo_loc name (site)": {
          "name": "geo_loc name (site)",
          "description": "The name of a specific geographical location e.g. Credit River (rather than river).",
          "title": "geo_loc name (site)",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 25,
          "slot_uri": "GENEPIO:0100436",
          "alias": "geo_loc_name_(site)",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "geo_loc latitude": {
          "name": "geo_loc latitude",
          "description": "The latitude coordinates of the geographical location of sample collection.",
          "title": "geo_loc latitude",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 26,
          "slot_uri": "GENEPIO:0100309",
          "alias": "geo_loc_latitude",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "geo_loc longitude": {
          "name": "geo_loc longitude",
          "description": "The longitude coordinates of the geographical location of sample collection.",
          "title": "geo_loc longitude",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 27,
          "slot_uri": "GENEPIO:0100310",
          "alias": "geo_loc_longitude",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "watershed shapefile availability": {
          "name": "watershed shapefile availability",
          "description": "The availability status of a shapefile descriping the catchment contributing to a watershed.",
          "title": "watershed shapefile availability",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 28,
          "slot_uri": "GENEPIO:0100919",
          "alias": "watershed_shapefile_availability",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing"
        },
        "watershed shapefile filename": {
          "name": "watershed shapefile filename",
          "description": "The name of the watershed shapefile.",
          "title": "watershed shapefile filename",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 29,
          "slot_uri": "GENEPIO:0100920",
          "alias": "watershed_shapefile_filename",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "organism": {
          "name": "organism",
          "description": "The name of the gene used in the diagnostic RT-PCR test.",
          "title": "organism",
          "comments": [
            "Provide the full name of the gene used in the test. The gene symbol (short form of gene name) can also be provided. Standardized gene names and symbols can be found in the Gene Ontology using this look-up service: https://bit.ly/2Sq1LbI"
          ],
          "examples": [
            {
              "value": "E gene (orf4)"
            }
          ],
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 177,
          "slot_uri": "GENEPIO:0001191",
          "alias": "organism",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Pathogen diagnostic testing"
        },
        "purpose of sampling": {
          "name": "purpose of sampling",
          "description": "The reason that the sample was collected.",
          "title": "purpose of sampling",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 31,
          "slot_uri": "GENEPIO:0001198",
          "alias": "purpose_of_sampling",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "required": true
        },
        "scope of sampling": {
          "name": "scope of sampling",
          "description": "The range of locations or entities sampled expressed in general terms.",
          "title": "scope of sampling",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 32,
          "slot_uri": "GENEPIO:0100877",
          "alias": "scope_of_sampling",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "recommended": true
        },
        "sample received date": {
          "name": "sample received date",
          "description": "The date on which the sample was received.",
          "title": "sample received date",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 33,
          "slot_uri": "GENEPIO:0001179",
          "alias": "sample_received_date",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing"
        },
        "sample collection date": {
          "name": "sample collection date",
          "description": "The date on which the sample was collected.",
          "title": "sample collection date",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 34,
          "slot_uri": "GENEPIO:0001174",
          "alias": "sample_collection_date",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "required": true
        },
        "sample processing date": {
          "name": "sample processing date",
          "description": "The date on which the sample was processed.",
          "title": "sample processing date",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 35,
          "slot_uri": "GENEPIO:0100763",
          "alias": "sample_processing_date",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing"
        },
        "sample collection time": {
          "name": "sample collection time",
          "description": "The time at which the sample was collected.",
          "title": "sample collection time",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 36,
          "slot_uri": "GENEPIO:0100764",
          "alias": "sample_collection_time",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "recommended": true
        },
        "sample collection time of day": {
          "name": "sample collection time of day",
          "description": "The descriptive time of day during which the sample was collected.",
          "title": "sample collection time of day",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 37,
          "slot_uri": "GENEPIO:0100765",
          "alias": "sample_collection_time_of_day",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing"
        },
        "sample collection time duration value": {
          "name": "sample collection time duration value",
          "description": "The amount of time over which the sample was collected.",
          "title": "sample collection time duration value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 38,
          "slot_uri": "GENEPIO:0100766",
          "alias": "sample_collection_time_duration_value",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "recommended": true
        },
        "sample collection time duration unit": {
          "name": "sample collection time duration unit",
          "description": "The units of the time duration measurement of sample collection.",
          "title": "sample collection time duration unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 39,
          "slot_uri": "GENEPIO:0100767",
          "alias": "sample_collection_time_duration_unit",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "recommended": true
        },
        "presampling activity": {
          "name": "presampling activity",
          "description": "The activities or variables upstream of sample collection that may affect the sample.",
          "title": "presampling activity",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 40,
          "slot_uri": "GENEPIO:0100433",
          "alias": "presampling_activity",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing"
        },
        "presampling activity details": {
          "name": "presampling activity details",
          "description": "The details of the activities or variables that affected the sample collected.",
          "title": "presampling activity details",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 41,
          "slot_uri": "GENEPIO:0100434",
          "alias": "presampling_activity_details",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing"
        },
        "sample volume measurement value": {
          "name": "sample volume measurement value",
          "description": "The numerical value of the volume measurement of the sample collected.",
          "title": "sample volume measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 42,
          "slot_uri": "GENEPIO:0100768",
          "alias": "sample_volume_measurement_value",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "sample volume measurement unit": {
          "name": "sample volume measurement unit",
          "description": "The units of the volume measurement of the sample collected.",
          "title": "sample volume measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 43,
          "slot_uri": "GENEPIO:0100769",
          "alias": "sample_volume_measurement_unit",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing"
        },
        "sample storage method": {
          "name": "sample storage method",
          "description": "The process used to store the sample.",
          "title": "sample storage method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 44,
          "slot_uri": "GENEPIO:0100448",
          "alias": "sample_storage_method",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "sample storage medium": {
          "name": "sample storage medium",
          "description": "The medium in which a sample is stored.",
          "title": "sample storage medium",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 45,
          "slot_uri": "GENEPIO:0100449",
          "alias": "sample_storage_medium",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "sample storage duration value": {
          "name": "sample storage duration value",
          "description": "The numerical value of the time measurement during which a sample is in storage.",
          "title": "sample storage duration value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 46,
          "slot_uri": "GENEPIO:0100768",
          "alias": "sample_storage_duration_value",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "sample storage duration unit": {
          "name": "sample storage duration unit",
          "description": "The units of a measured sample storage duration.",
          "title": "sample storage duration unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 47,
          "slot_uri": "GENEPIO:0100769",
          "alias": "sample_storage_duration_unit",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing"
        },
        "specimen processing": {
          "name": "specimen processing",
          "description": "Any processing applied to the sample during or after receiving the sample.",
          "title": "specimen processing",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 48,
          "slot_uri": "GENEPIO:0001253",
          "alias": "specimen_processing",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing"
        },
        "specimen processing details": {
          "name": "specimen processing details",
          "description": "The details of the processing applied to the sample during or after receiving the sample.",
          "title": "specimen processing details",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 49,
          "slot_uri": "GENEPIO:0100311",
          "alias": "specimen_processing_details",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "environmental site": {
          "name": "environmental site",
          "description": "An environmental location may describe a site in the natural or built environment e.g. contact surface, metal can, hospital, wet market, bat cave.",
          "title": "environmental site",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 50,
          "slot_uri": "GENEPIO:0001232",
          "alias": "environmental_site",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "recommended": true
        },
        "environmental material": {
          "name": "environmental material",
          "description": "A substance obtained from the natural or man-made environment e.g. soil, water, sewage.",
          "title": "environmental material",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 51,
          "slot_uri": "GENEPIO:0001223",
          "alias": "environmental_material",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "recommended": true
        },
        "environmental material properties": {
          "name": "environmental material properties",
          "description": "The properties, characteristics and qualities of a substance obtained from the natural or man-made environment.",
          "title": "environmental material properties",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 52,
          "slot_uri": "GENEPIO:0100770",
          "alias": "environmental_material_properties",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "recommended": true
        },
        "wastewater system type": {
          "name": "wastewater system type",
          "description": "The type or classification of a wastewater system e.g. sanitary sewer, combined sewer",
          "title": "wastewater system type",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 53,
          "slot_uri": "GENEPIO:0100771",
          "alias": "wastewater_system_type",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "recommended": true
        },
        "experimental control type": {
          "name": "experimental control type",
          "description": "The type of control used in the experiment.",
          "title": "experimental control type",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 54,
          "slot_uri": "GENEPIO:0100921",
          "alias": "experimental_control_type",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing"
        },
        "experimental control details": {
          "name": "experimental control details",
          "description": "The details regarding the experimental control contained in the sample.",
          "title": "experimental control details",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 55,
          "slot_uri": "GENEPIO:0100922",
          "alias": "experimental_control_details",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "collection device": {
          "name": "collection device",
          "description": "The instrument or container used to collect the sample e.g. grab sampler.",
          "title": "collection device",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 56,
          "slot_uri": "GENEPIO:0001234",
          "alias": "collection_device",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing"
        },
        "collection method": {
          "name": "collection method",
          "description": "The process used to collect the sample.",
          "title": "collection method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 57,
          "slot_uri": "GENEPIO:0001241",
          "alias": "collection_method",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "recommended": true
        },
        "nucleic acid extraction method": {
          "name": "nucleic acid extraction method",
          "description": "The process used to extract genomic material from a sample.",
          "title": "nucleic acid extraction method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 58,
          "slot_uri": "GENEPIO:0100939",
          "alias": "nucleic_acid_extraction_method",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "extraction kit": {
          "name": "extraction kit",
          "description": "The kit used to extract genomic material from a sample",
          "title": "extraction kit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 59,
          "slot_uri": "GENEPIO:0100772",
          "alias": "extraction_kit",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "endogenous control details": {
          "name": "endogenous control details",
          "description": "The description of the endogenous controls included when extracting a sample.",
          "title": "endogenous control details",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 60,
          "slot_uri": "GENEPIO:0100923",
          "alias": "endogenous_control_details",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString",
          "recommended": true
        },
        "extraction recovery efficiency measurement value": {
          "name": "extraction recovery efficiency measurement value",
          "description": "The recovery efficiency of an extraction, calculated as the amount of a synthetic or endogenous compound identified in the sample relative to the amount expected.",
          "title": "extraction recovery efficiency measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 61,
          "slot_uri": "GENEPIO:0100924",
          "alias": "extraction_recovery_efficiency_measurement_value",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "extraction recovery efficiency measurement method": {
          "name": "extraction recovery efficiency measurement method",
          "description": "The method by which recovery efficiency of an extraction was calculated.",
          "title": "extraction recovery efficiency measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 62,
          "slot_uri": "GENEPIO:0100925",
          "alias": "extraction_recovery_efficiency_measurement_method",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "water catchment area human population measurement value": {
          "name": "water catchment area human population measurement value",
          "description": "The numerical value of the human population measurement that contributes to the composition of water in a catchment area.",
          "title": "water catchment area human population measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 63,
          "slot_uri": "GENEPIO:0100773",
          "alias": "water_catchment_area_human_population_measurement_value",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "recommended": true
        },
        "water catchment area human population range": {
          "name": "water catchment area human population range",
          "description": "The human population range of the water catchment that contributes effluent to a wastewater site.",
          "title": "water catchment area human population range",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 64,
          "slot_uri": "GENEPIO:0100774",
          "alias": "water_catchment_area_human_population_range",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "water catchment area human population measurement method": {
          "name": "water catchment area human population measurement method",
          "description": "The method by which a water catchment 's human population size was measured or estimated",
          "title": "water catchment area human population measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 65,
          "slot_uri": "GENEPIO:0100775",
          "alias": "water_catchment_area_human_population_measurement_method",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "water catchment area human population density value": {
          "name": "water catchment area human population density value",
          "description": "The numerical value describing the number of humans per geographical area in a water catchment.",
          "title": "water catchment area human population density value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 66,
          "slot_uri": "GENEPIO:0100776",
          "alias": "water_catchment_area_human_population_density_value",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "water catchment area human population density unit": {
          "name": "water catchment area human population density unit",
          "description": "The unit describing the number of humans per geographical area in a water catchment.",
          "title": "water catchment area human population density unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 67,
          "slot_uri": "GENEPIO:0100777",
          "alias": "water_catchment_area_human_population_density_unit",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "populated area type": {
          "name": "populated area type",
          "description": "A type of area that is populated by humans to different degrees.",
          "title": "populated area type",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 68,
          "slot_uri": "GENEPIO:0100778",
          "alias": "populated_area_type",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "sampling weather conditions": {
          "name": "sampling weather conditions",
          "description": "The state of the atmosphere at a place and time as regards heat, dryness, sunshine, wind, rain, etc.",
          "title": "sampling weather conditions",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 69,
          "slot_uri": "GENEPIO:0100779",
          "alias": "sampling_weather_conditions",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "presampling weather conditions": {
          "name": "presampling weather conditions",
          "description": "Weather conditions prior to collection that may affect the sample.",
          "title": "presampling weather conditions",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 70,
          "slot_uri": "GENEPIO:0100780",
          "alias": "presampling_weather_conditions",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "precipitation measurement value": {
          "name": "precipitation measurement value",
          "description": "The amount of water which has fallen during a precipitation process.",
          "title": "precipitation measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 71,
          "slot_uri": "GENEPIO:0100911",
          "alias": "precipitation_measurement_value",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "recommended": true
        },
        "precipitation measurement unit": {
          "name": "precipitation measurement unit",
          "description": "The units of measurement for the amount of water which has fallen during a precipitation process.",
          "title": "precipitation measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 72,
          "slot_uri": "GENEPIO:0100912",
          "alias": "precipitation_measurement_unit",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "recommended": true
        },
        "precipitation measurement method": {
          "name": "precipitation measurement method",
          "description": "The process used to measure the amount of water which has fallen during a precipitation process.",
          "title": "precipitation measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 73,
          "slot_uri": "GENEPIO:0100913",
          "alias": "precipitation_measurement_method",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "ambient temperature measurement value": {
          "name": "ambient temperature measurement value",
          "description": "The numerical value of a measurement of the ambient temperature.",
          "title": "ambient temperature measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 74,
          "slot_uri": "GENEPIO:0100935",
          "alias": "ambient_temperature_measurement_value",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "ambient temperature measurement unit": {
          "name": "ambient temperature measurement unit",
          "description": "The units of a measurement of the ambient temperature.",
          "title": "ambient temperature measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 75,
          "slot_uri": "GENEPIO:0100936",
          "alias": "ambient_temperature_measurement_unit",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "pH measurement value": {
          "name": "pH measurement value",
          "description": "The measured pH value indicating the acidity or basicity(alkalinity) of an aqueous solution.",
          "title": "pH measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 76,
          "slot_uri": "GENEPIO:0001736",
          "alias": "pH_measurement_value",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "pH measurement method": {
          "name": "pH measurement method",
          "description": "The process used to measure pH value.",
          "title": "pH measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 77,
          "slot_uri": "GENEPIO:0100781",
          "alias": "pH_measurement_method",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "total daily flow rate measurement value": {
          "name": "total daily flow rate measurement value",
          "description": "The numerical value of a measured fluid flow rate over the course of a day.",
          "title": "total daily flow rate measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 78,
          "slot_uri": "GENEPIO:0100905",
          "alias": "total_daily_flow_rate_measurement_value",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "total daily flow rate measurement unit": {
          "name": "total daily flow rate measurement unit",
          "description": "The units of a measured fluid flow rate over the course of a day.",
          "title": "total daily flow rate measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 79,
          "slot_uri": "GENEPIO:0100906",
          "alias": "total_daily_flow_rate_measurement_unit",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "total daily flow rate measurement method": {
          "name": "total daily flow rate measurement method",
          "description": "The process used to measure total daily fluid flow rate.",
          "title": "total daily flow rate measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 80,
          "slot_uri": "GENEPIO:0100907",
          "alias": "total_daily_flow_rate_measurement_method",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "instantaneous flow rate measurement value": {
          "name": "instantaneous flow rate measurement value",
          "description": "The numerical value of a measured instantaneous fluid flow rate.",
          "title": "instantaneous flow rate measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 81,
          "slot_uri": "GENEPIO:0100908",
          "alias": "instantaneous_flow_rate_measurement_value",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "instantaneous flow rate measurement unit": {
          "name": "instantaneous flow rate measurement unit",
          "description": "The units of a measured instantaneous fluid flow rate.",
          "title": "instantaneous flow rate measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 82,
          "slot_uri": "GENEPIO:0100909",
          "alias": "instantaneous_flow_rate_measurement_unit",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "instantaneous flow rate measurement method": {
          "name": "instantaneous flow rate measurement method",
          "description": "The process used to measure instantaneous fluid flow rate.",
          "title": "instantaneous flow rate measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 83,
          "slot_uri": "GENEPIO:0100910",
          "alias": "instantaneous_flow_rate_measurement_method",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "turbidity measurement value": {
          "name": "turbidity measurement value",
          "description": "The numerical value of a measurement of turbidity.",
          "title": "turbidity measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 84,
          "slot_uri": "GENEPIO:0100783",
          "alias": "turbidity_measurement_value",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString",
          "recommended": true
        },
        "turbidity measurement unit": {
          "name": "turbidity measurement unit",
          "description": "The units of a measurement of turbidity.",
          "title": "turbidity measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 85,
          "slot_uri": "GENEPIO:0100914",
          "alias": "turbidity_measurement_unit",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "recommended": true
        },
        "turbidity measurement method": {
          "name": "turbidity measurement method",
          "description": "The process used to measure turbidity.",
          "title": "turbidity measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 86,
          "slot_uri": "GENEPIO:0100783",
          "alias": "turbidity_measurement_method",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "dissolved oxygen measurement value": {
          "name": "dissolved oxygen measurement value",
          "description": "The numerical value of a measurement of dissolved oxygen.",
          "title": "dissolved oxygen measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 87,
          "slot_uri": "GENEPIO:0100915",
          "alias": "dissolved_oxygen_measurement_value",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "dissolved oxygen measurement unit": {
          "name": "dissolved oxygen measurement unit",
          "description": "The units of a measurement of dissolved oxygen.",
          "title": "dissolved oxygen measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 88,
          "slot_uri": "GENEPIO:0100784",
          "alias": "dissolved_oxygen_measurement_unit",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "dissolved oxygen measurement method": {
          "name": "dissolved oxygen measurement method",
          "description": "The method used to measure dissolved oxygen.",
          "title": "dissolved oxygen measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 89,
          "slot_uri": "GENEPIO:0100785",
          "alias": "dissolved_oxygen_measurement_method",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "oxygen reduction potential (ORP) measurement value": {
          "name": "oxygen reduction potential (ORP) measurement value",
          "description": "The numerical value of a measurement of oxygen reduction potential (ORP).",
          "title": "oxygen reduction potential (ORP) measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 90,
          "slot_uri": "GENEPIO:0100917",
          "alias": "oxygen_reduction_potential_(ORP)_measurement_value",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "oxygen reduction potential (ORP) measurement unit": {
          "name": "oxygen reduction potential (ORP) measurement unit",
          "description": "The units of a measurement of oxygen reduction potential (ORP).",
          "title": "oxygen reduction potential (ORP) measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 91,
          "slot_uri": "GENEPIO:0100786",
          "alias": "oxygen_reduction_potential_(ORP)_measurement_unit",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "oxygen reduction potential (ORP) measurement method": {
          "name": "oxygen reduction potential (ORP) measurement method",
          "description": "The method used to measure oxygen reduction potential (ORP).",
          "title": "oxygen reduction potential (ORP) measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 92,
          "slot_uri": "GENEPIO:0100787",
          "alias": "oxygen_reduction_potential_(ORP)_measurement_method",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "chemical oxygen demand (COD) measurement value": {
          "name": "chemical oxygen demand (COD) measurement value",
          "description": "The measured value from a chemical oxygen demand (COD) test.",
          "title": "chemical oxygen demand (COD) measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 93,
          "slot_uri": "GENEPIO:0100788",
          "alias": "chemical_oxygen_demand_(COD)_measurement_value",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "chemical oxygen demand (COD) measurement unit": {
          "name": "chemical oxygen demand (COD) measurement unit",
          "description": "The units associated with a value from a chemical oxygen demand (COD) test.",
          "title": "chemical oxygen demand (COD) measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 94,
          "slot_uri": "GENEPIO:0100789",
          "alias": "chemical_oxygen_demand_(COD)_measurement_unit",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "chemical oxygen demand (COD) measurement method": {
          "name": "chemical oxygen demand (COD) measurement method",
          "description": "The method used to measure chemical oxygen demand (COD).",
          "title": "chemical oxygen demand (COD) measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 95,
          "slot_uri": "GENEPIO:0100790",
          "alias": "chemical_oxygen_demand_(COD)_measurement_method",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "carbonaceous biochemical oxygen demand (CBOD) measurement value": {
          "name": "carbonaceous biochemical oxygen demand (CBOD) measurement value",
          "description": "The numerical value of a measurement of carbonaceous biochemical oxygen demand (CBOD).",
          "title": "carbonaceous biochemical oxygen demand (CBOD) measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 96,
          "slot_uri": "GENEPIO:0100791",
          "alias": "carbonaceous_biochemical_oxygen_demand_(CBOD)_measurement_value",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "carbonaceous biochemical oxygen demand (CBOD) measurement unit": {
          "name": "carbonaceous biochemical oxygen demand (CBOD) measurement unit",
          "description": "The units of a measurement of carbonaceous biochemical oxygen demand (CBOD).",
          "title": "carbonaceous biochemical oxygen demand (CBOD) measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 97,
          "slot_uri": "GENEPIO:0100792",
          "alias": "carbonaceous_biochemical_oxygen_demand_(CBOD)_measurement_unit",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "carbonaceous biochemical oxygen demand (CBOD) measurement method": {
          "name": "carbonaceous biochemical oxygen demand (CBOD) measurement method",
          "description": "The method used to measure carbonaceous biochemical oxygen demand (CBOD).",
          "title": "carbonaceous biochemical oxygen demand (CBOD) measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 98,
          "slot_uri": "GENEPIO:0100793",
          "alias": "carbonaceous_biochemical_oxygen_demand_(CBOD)_measurement_method",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "total suspended solids (TSS) measurement value": {
          "name": "total suspended solids (TSS) measurement value",
          "description": "The numerical value from a total suspended solids (TSS) test.",
          "title": "total suspended solids (TSS) measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 99,
          "slot_uri": "GENEPIO:0100794",
          "alias": "total_suspended_solids_(TSS)_measurement_value",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "total suspended solids (TSS) measurement unit": {
          "name": "total suspended solids (TSS) measurement unit",
          "description": "The units associated with a value from a total suspended solids (TSS) test.",
          "title": "total suspended solids (TSS) measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 100,
          "slot_uri": "GENEPIO:0100795",
          "alias": "total_suspended_solids_(TSS)_measurement_unit",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "total suspended solids (TSS) measurement method": {
          "name": "total suspended solids (TSS) measurement method",
          "description": "The method used to measure total suspended solids (TSS).",
          "title": "total suspended solids (TSS) measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 101,
          "slot_uri": "GENEPIO:0100796",
          "alias": "total_suspended_solids_(TSS)_measurement_method",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "total dissolved solids (TDS) measurement value": {
          "name": "total dissolved solids (TDS) measurement value",
          "description": "The numerical value from a total dissolved solids (TDS) test.",
          "title": "total dissolved solids (TDS) measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 102,
          "slot_uri": "GENEPIO:0100797",
          "alias": "total_dissolved_solids_(TDS)_measurement_value",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "total dissolved solids (TDS) measurement unit": {
          "name": "total dissolved solids (TDS) measurement unit",
          "description": "The units associated with a value from a total dissolved solids (TDS) test.",
          "title": "total dissolved solids (TDS) measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 103,
          "slot_uri": "GENEPIO:0100798",
          "alias": "total_dissolved_solids_(TDS)_measurement_unit",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "total dissolved solids (TDS) measurement method": {
          "name": "total dissolved solids (TDS) measurement method",
          "description": "The method used to measure total dissolved solids (TDS).",
          "title": "total dissolved solids (TDS) measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 104,
          "slot_uri": "GENEPIO:0100799",
          "alias": "total_dissolved_solids_(TDS)_measurement_method",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "total solids (TS) measurement value": {
          "name": "total solids (TS) measurement value",
          "description": "The numerical value from a total solids (TS) test.",
          "title": "total solids (TS) measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 105,
          "slot_uri": "GENEPIO:0100800",
          "alias": "total_solids_(TS)_measurement_value",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "total solids (TS) measurement unit": {
          "name": "total solids (TS) measurement unit",
          "description": "The units associated with a value from a total solids (TS) test.",
          "title": "total solids (TS) measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 106,
          "slot_uri": "GENEPIO:0100801",
          "alias": "total_solids_(TS)_measurement_unit",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "total solids (TS) measurement method": {
          "name": "total solids (TS) measurement method",
          "description": "The method used to measure total solids (TS).",
          "title": "total solids (TS) measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 107,
          "slot_uri": "GENEPIO:0100802",
          "alias": "total_solids_(TS)_measurement_method",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "alkalinity measurement value": {
          "name": "alkalinity measurement value",
          "description": "The numerical value of a measurement of alkalinity.",
          "title": "alkalinity measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 108,
          "slot_uri": "GENEPIO:0100878",
          "alias": "alkalinity_measurement_value",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "alkalinity measurement unit": {
          "name": "alkalinity measurement unit",
          "description": "The units of a measurement of alkalinity.",
          "title": "alkalinity measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 109,
          "slot_uri": "GENEPIO:0100879",
          "alias": "alkalinity_measurement_unit",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "alkalinity measurement method": {
          "name": "alkalinity measurement method",
          "description": "The process used to measure alkalinity.",
          "title": "alkalinity measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 110,
          "slot_uri": "GENEPIO:0100880",
          "alias": "alkalinity_measurement_method",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "conductivity measurement value": {
          "name": "conductivity measurement value",
          "description": "The numerical value of a measurement of conductivity.",
          "title": "conductivity measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 111,
          "slot_uri": "GENEPIO:0100916",
          "alias": "conductivity_measurement_value",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "conductivity measurement unit": {
          "name": "conductivity measurement unit",
          "description": "The units of a measurement of conductivity.",
          "title": "conductivity measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 112,
          "slot_uri": "GENEPIO:0100803",
          "alias": "conductivity_measurement_unit",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "conductivity measurement method": {
          "name": "conductivity measurement method",
          "description": "The method used to measure conductivity.",
          "title": "conductivity measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 113,
          "slot_uri": "GENEPIO:0100804",
          "alias": "conductivity_measurement_method",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "salinity measurement value": {
          "name": "salinity measurement value",
          "description": "The numerical value of a measurement of salinity.",
          "title": "salinity measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 114,
          "slot_uri": "GENEPIO:0100805",
          "alias": "salinity_measurement_value",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "salinity measurement unit": {
          "name": "salinity measurement unit",
          "description": "The units of a measurement of salinity.",
          "title": "salinity measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 115,
          "slot_uri": "GENEPIO:0100806",
          "alias": "salinity_measurement_unit",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "salinity measurement method": {
          "name": "salinity measurement method",
          "description": "The method used to measure salinity.",
          "title": "salinity measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 116,
          "slot_uri": "GENEPIO:0100807",
          "alias": "salinity_measurement_method",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "total nitrogen (TN) measurement value": {
          "name": "total nitrogen (TN) measurement value",
          "description": "The numerical value of a measurement of total nitrogen (TN).",
          "title": "total nitrogen (TN) measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 117,
          "slot_uri": "GENEPIO:0100808",
          "alias": "total_nitrogen_(TN)_measurement_value",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "total nitrogen (TN) measurement unit": {
          "name": "total nitrogen (TN) measurement unit",
          "description": "The units of a measurement of total nitrogen (TN).",
          "title": "total nitrogen (TN) measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 118,
          "slot_uri": "GENEPIO:0100809",
          "alias": "total_nitrogen_(TN)_measurement_unit",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "total nitrogen (TN) measurement method": {
          "name": "total nitrogen (TN) measurement method",
          "description": "The method used to measure total nitrogen (TN).",
          "title": "total nitrogen (TN) measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 119,
          "slot_uri": "GENEPIO:0100810",
          "alias": "total_nitrogen_(TN)_measurement_method",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "total phosphorus (TP) measurement value": {
          "name": "total phosphorus (TP) measurement value",
          "description": "The numerical value of a measurement of total phosphorus (TP).",
          "title": "total phosphorus (TP) measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 120,
          "slot_uri": "GENEPIO:0100811",
          "alias": "total_phosphorus_(TP)_measurement_value",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "total phosphorus (TP) measurement unit": {
          "name": "total phosphorus (TP) measurement unit",
          "description": "The units of a measurement of total phosphorus (TP).",
          "title": "total phosphorus (TP) measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 121,
          "slot_uri": "GENEPIO:0100812",
          "alias": "total_phosphorus_(TP)_measurement_unit",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "total phosphorus (TP) measurement method": {
          "name": "total phosphorus (TP) measurement method",
          "description": "The method used to measure total phosphorus (TP).",
          "title": "total phosphorus (TP) measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 122,
          "slot_uri": "GENEPIO:0100813",
          "alias": "total_phosphorus_(TP)_measurement_method",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "fecal contamination indicator": {
          "name": "fecal contamination indicator",
          "description": "A gene, virus, bacteria, or substance used to measure the sanitary quality of water in regards to fecal contamination.",
          "title": "fecal contamination indicator",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 123,
          "slot_uri": "GENEPIO:0100814",
          "alias": "fecal_contamination_indicator",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "recommended": true
        },
        "fecal contamination value": {
          "name": "fecal contamination value",
          "description": "The numerical value of a measurement of fecal contamination.",
          "title": "fecal contamination value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 124,
          "slot_uri": "GENEPIO:0100815",
          "alias": "fecal_contamination_value",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString",
          "recommended": true
        },
        "fecal contamination unit": {
          "name": "fecal contamination unit",
          "description": "The units of a measurement of fecal contamination.",
          "title": "fecal contamination unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 125,
          "slot_uri": "GENEPIO:0100816",
          "alias": "fecal_contamination_unit",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "recommended": true
        },
        "fecal contamination method": {
          "name": "fecal contamination method",
          "description": "The method used to measure fecal contamination.",
          "title": "fecal contamination method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 126,
          "slot_uri": "GENEPIO:0100817",
          "alias": "fecal_contamination_method",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "fecal coliform count value": {
          "name": "fecal coliform count value",
          "description": "The numerical value of a measurement of fecal coliforms within a sample.",
          "title": "fecal coliform count value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 127,
          "slot_uri": "GENEPIO:0100818",
          "alias": "fecal_coliform_count_value",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "fecal coliform count unit": {
          "name": "fecal coliform count unit",
          "description": "The units of a measurement of fecal coliforms.",
          "title": "fecal coliform count unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 128,
          "slot_uri": "GENEPIO:0100819",
          "alias": "fecal_coliform_count_unit",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "fecal coliform count method": {
          "name": "fecal coliform count method",
          "description": "The method used to measure fecal coliforms.",
          "title": "fecal coliform count method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 129,
          "slot_uri": "GENEPIO:0100820",
          "alias": "fecal_coliform_count_method",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "urinary contamination indicator": {
          "name": "urinary contamination indicator",
          "description": "A gene, virus, bacteria, or substance used to measure the sanitary quality of water in regards to urinary contamination.",
          "title": "urinary contamination indicator",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 130,
          "slot_uri": "GENEPIO:0100837",
          "alias": "urinary_contamination_indicator",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "urinary contamination value": {
          "name": "urinary contamination value",
          "description": "The numerical value of a measurement of urinary contamination.",
          "title": "urinary contamination value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 131,
          "slot_uri": "GENEPIO:0100838",
          "alias": "urinary_contamination_value",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "urinary contamination unit": {
          "name": "urinary contamination unit",
          "description": "The units of a measurement of urinary contamination.",
          "title": "urinary contamination unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 132,
          "slot_uri": "GENEPIO:0100839",
          "alias": "urinary_contamination_unit",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "urinary contamination method": {
          "name": "urinary contamination method",
          "description": "The method used to measure urinary contamination.",
          "title": "urinary contamination method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 133,
          "slot_uri": "GENEPIO:0100840",
          "alias": "urinary_contamination_method",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "sample temperature value (at collection)": {
          "name": "sample temperature value (at collection)",
          "description": "The numerical value of a measurement of temperature of a sample at collection.",
          "title": "sample temperature value (at collection)",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 134,
          "slot_uri": "GENEPIO:0100821",
          "alias": "sample_temperature_value_(at_collection)",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "sample temperature unit (at collection)": {
          "name": "sample temperature unit (at collection)",
          "description": "The units of a measurement of temperature of a sample at the time of collection.",
          "title": "sample temperature unit (at collection)",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 135,
          "slot_uri": "GENEPIO:0100822",
          "alias": "sample_temperature_unit_(at_collection)",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "sample temperature value (when received)": {
          "name": "sample temperature value (when received)",
          "description": "The numerical value of a measurement of temperature of a sample upon receipt.",
          "title": "sample temperature value (when received)",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 136,
          "slot_uri": "GENEPIO:0100823",
          "alias": "sample_temperature_value_(when_received)",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "sample temperature unit (when received)": {
          "name": "sample temperature unit (when received)",
          "description": "The units of a measurement of temperature of a sample at the time upon receipt.",
          "title": "sample temperature unit (when received)",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 137,
          "slot_uri": "GENEPIO:0100824",
          "alias": "sample_temperature_unit_(when_received)",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "purpose of sequencing": {
          "name": "purpose of sequencing",
          "description": "The reason that the sample was sequenced.",
          "title": "purpose of sequencing",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 138,
          "slot_uri": "GENEPIO:0001445",
          "alias": "purpose_of_sequencing",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sequence information",
          "required": true
        },
        "purpose of sequencing details": {
          "name": "purpose of sequencing details",
          "description": "The description of why the sample was sequenced providing specific details.",
          "title": "purpose of sequencing details",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 139,
          "slot_uri": "GENEPIO:0001446",
          "alias": "purpose_of_sequencing_details",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sequence information",
          "range": "WhitespaceMinimizedString"
        },
        "sequence submitted by": {
          "name": "sequence submitted by",
          "description": "The name of the agency that submitted the sequence to a database.",
          "title": "sequence submitted by",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 140,
          "slot_uri": "GENEPIO:0001159",
          "alias": "sequence_submitted_by",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sequence information",
          "required": true
        },
        "sequence submitter contact email": {
          "name": "sequence submitter contact email",
          "description": "The email address of the contact responsible for follow-up regarding the sequence.",
          "title": "sequence submitter contact email",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 141,
          "slot_uri": "GENEPIO:0001165",
          "alias": "sequence_submitter_contact_email",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sequence information",
          "recommended": true,
          "pattern": "^\\S+@\\S+\\.\\S+$"
        },
        "sequencing date": {
          "name": "sequencing date",
          "description": "The date the sample was sequenced.",
          "title": "sequencing date",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 142,
          "slot_uri": "GENEPIO:0001447",
          "alias": "sequencing_date",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sequence information",
          "range": "date"
        },
        "library ID": {
          "name": "library ID",
          "description": "The user-specified identifier for the library prepared for sequencing.",
          "title": "library ID",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 143,
          "slot_uri": "GENEPIO:0001448",
          "alias": "library_ID",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sequence information",
          "range": "WhitespaceMinimizedString"
        },
        "sequencing platform": {
          "name": "sequencing platform",
          "description": "The platform technology used to perform the sequencing.",
          "title": "sequencing platform",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 144,
          "slot_uri": "GENEPIO:0100473",
          "alias": "sequencing_platform",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sequence information"
        },
        "sequencing instrument": {
          "name": "sequencing instrument",
          "description": "The model of the sequencing instrument used.",
          "title": "sequencing instrument",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 145,
          "slot_uri": "GENEPIO:0001452",
          "alias": "sequencing_instrument",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sequence information",
          "required": true
        },
        "sequencing method type": {
          "name": "sequencing method type",
          "title": "sequencing method type",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 146,
          "alias": "sequencing_method_type",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sequence information",
          "recommended": true
        },
        "library preparation kit": {
          "name": "library preparation kit",
          "description": "The name of the DNA library preparation kit used to generate the library being sequenced.",
          "title": "library preparation kit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 147,
          "slot_uri": "GENEPIO:0001450",
          "alias": "library_preparation_kit",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sequence information",
          "range": "WhitespaceMinimizedString"
        },
        "sequencing protocol": {
          "name": "sequencing protocol",
          "description": "The protocol or method used for sequencing.",
          "title": "sequencing protocol",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 148,
          "slot_uri": "GENEPIO:0001454",
          "alias": "sequencing_protocol",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sequence information",
          "range": "WhitespaceMinimizedString",
          "recommended": true
        },
        "amplicon pcr primer scheme": {
          "name": "amplicon pcr primer scheme",
          "description": "The specifications of the primers (primer sequences, binding positions, fragment size generated etc) used to generate the amplicons to be sequenced.",
          "title": "amplicon pcr primer scheme",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 149,
          "slot_uri": "GENEPIO:0001456",
          "alias": "amplicon_pcr_primer_scheme",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterSARS-CoV-2"
          ],
          "slot_group": "Sequence information",
          "recommended": true
        },
        "amplicon size": {
          "name": "amplicon size",
          "description": "The length of the amplicon generated by PCR amplification.",
          "title": "amplicon size",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 150,
          "slot_uri": "GENEPIO:0001449",
          "alias": "amplicon_size",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterSARS-CoV-2"
          ],
          "slot_group": "Sequence information",
          "range": "integer"
        },
        "quality control method name": {
          "name": "quality control method name",
          "description": "The name of the method used to assess whether a sequence passed a predetermined quality control threshold.",
          "title": "quality control method name",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 151,
          "slot_uri": "GENEPIO:0100557",
          "alias": "quality_control_method_name",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "WhitespaceMinimizedString"
        },
        "quality control method version": {
          "name": "quality control method version",
          "description": "The version number of the method used to assess whether a sequence passed a predetermined quality control threshold.",
          "title": "quality control method version",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 152,
          "slot_uri": "GENEPIO:0100558",
          "alias": "quality_control_method_version",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "WhitespaceMinimizedString"
        },
        "quality control determination": {
          "name": "quality control determination",
          "description": "The determination of a quality control assessment.",
          "title": "quality control determination",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 153,
          "slot_uri": "GENEPIO:0100559",
          "alias": "quality_control_determination",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Bioinformatics and QC metrics"
        },
        "quality control issues": {
          "name": "quality control issues",
          "description": "The reason contributing to, or causing, a low quality determination in a quality control assessment.",
          "title": "quality control issues",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 154,
          "slot_uri": "GENEPIO:0100560",
          "alias": "quality_control_issues",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Bioinformatics and QC metrics"
        },
        "quality control details": {
          "name": "quality control details",
          "description": "The details surrounding a low quality determination in a quality control assessment.",
          "title": "quality control details",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 155,
          "slot_uri": "GENEPIO:0100561",
          "alias": "quality_control_details",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "WhitespaceMinimizedString"
        },
        "raw sequence data processing method": {
          "name": "raw sequence data processing method",
          "description": "The names of the software and version number used for raw data processing such as removing barcodes, adapter trimming, filtering etc.",
          "title": "raw sequence data processing method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 156,
          "slot_uri": "GENEPIO:0001458",
          "alias": "raw_sequence_data_processing_method",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "recommended": true
        },
        "dehosting method": {
          "name": "dehosting method",
          "description": "The method used to remove host reads from the pathogen sequence.",
          "title": "dehosting method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 157,
          "slot_uri": "GENEPIO:0001459",
          "alias": "dehosting_method",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "recommended": true
        },
        "consensus sequence software name": {
          "name": "consensus sequence software name",
          "description": "The name of the software used to generate the consensus sequence.",
          "title": "consensus sequence software name",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 2,
          "slot_uri": "GENEPIO:0001463",
          "alias": "consensus_sequence_software_name",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterSARS-CoV-2"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "required": true
        },
        "consensus sequence software version": {
          "name": "consensus sequence software version",
          "description": "The version of the software used to generate the consensus sequence.",
          "title": "consensus sequence software version",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 3,
          "slot_uri": "GENEPIO:0001469",
          "alias": "consensus_sequence_software_version",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterSARS-CoV-2"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "required": true
        },
        "breadth of coverage value": {
          "name": "breadth of coverage value",
          "description": "The percentage of the reference genome covered by the sequenced data, to a prescribed depth.",
          "title": "breadth of coverage value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 160,
          "slot_uri": "GENEPIO:0001472",
          "alias": "breadth_of_coverage_value",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "WhitespaceMinimizedString"
        },
        "depth of coverage value": {
          "name": "depth of coverage value",
          "description": "The average number of reads representing a given nucleotide in the reconstructed sequence.",
          "title": "depth of coverage value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 161,
          "slot_uri": "GENEPIO:0001474",
          "alias": "depth_of_coverage_value",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "WhitespaceMinimizedString"
        },
        "depth of coverage threshold": {
          "name": "depth of coverage threshold",
          "description": "The threshold used as a cut-off for the depth of coverage.",
          "title": "depth of coverage threshold",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 162,
          "slot_uri": "GENEPIO:0001475",
          "alias": "depth_of_coverage_threshold",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "WhitespaceMinimizedString"
        },
        "genome completeness": {
          "name": "genome completeness",
          "description": "The percentage of expected genes identified in the genome being sequenced. Missing genes indicate missing genomic regions (incompleteness) in the data.",
          "title": "genome completeness",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 163,
          "slot_uri": "GENEPIO:0100844",
          "alias": "genome_completeness",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "WhitespaceMinimizedString"
        },
        "number of base pairs sequenced": {
          "name": "number of base pairs sequenced",
          "description": "The number of total base pairs generated by the sequencing process.",
          "title": "number of base pairs sequenced",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 4,
          "slot_uri": "GENEPIO:0001482",
          "alias": "number_of_base_pairs_sequenced",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterSARS-CoV-2"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "integer"
        },
        "number of total reads": {
          "name": "number of total reads",
          "description": "The total number of non-unique reads generated by the sequencing process.",
          "title": "number of total reads",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 5,
          "slot_uri": "GENEPIO:0100827",
          "alias": "number_of_total_reads",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterSARS-CoV-2"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "integer"
        },
        "number of unique reads": {
          "name": "number of unique reads",
          "description": "The number of unique reads generated by the sequencing process.",
          "title": "number of unique reads",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 6,
          "slot_uri": "GENEPIO:0100828",
          "alias": "number_of_unique_reads",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterSARS-CoV-2"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "integer"
        },
        "minimum post-trimming read length": {
          "name": "minimum post-trimming read length",
          "description": "The threshold used as a cut-off for the minimum length of a read after trimming.",
          "title": "minimum post-trimming read length",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 7,
          "slot_uri": "GENEPIO:0100829",
          "alias": "minimum_post_trimming_read_length",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterSARS-CoV-2"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "integer"
        },
        "number of contigs": {
          "name": "number of contigs",
          "description": "The number of contigs (contiguous sequences) in a sequence assembly.",
          "title": "number of contigs",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 8,
          "slot_uri": "GENEPIO:0100937",
          "alias": "number_of_contigs",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterSARS-CoV-2"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "integer"
        },
        "percent Ns across total genome length": {
          "name": "percent Ns across total genome length",
          "description": "The percentage of the assembly that consists of ambiguous bases (Ns).",
          "title": "percent Ns across total genome length",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 9,
          "slot_uri": "GENEPIO:0100830",
          "alias": "percent_Ns_across_total_genome_length",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterSARS-CoV-2"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "integer"
        },
        "Ns per 100 kbp": {
          "name": "Ns per 100 kbp",
          "description": "The number of ambiguous bases (Ns) normalized per 100 kilobasepairs (kbp).",
          "title": "Ns per 100 kbp",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 10,
          "slot_uri": "GENEPIO:0001484",
          "alias": "Ns_per_100_kbp",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterSARS-CoV-2"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "integer"
        },
        "N50": {
          "name": "N50",
          "description": "The length of the shortest read that, together with other reads, represents at least 50% of the nucleotides in a set of sequences.",
          "title": "N50",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 11,
          "slot_uri": "GENEPIO:0100938",
          "alias": "N50",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterSARS-CoV-2"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "integer"
        },
        "percent read contamination": {
          "name": "percent read contamination",
          "description": "The percent of the total number of reads identified as contamination (not belonging to the target organism) in a sequence dataset.",
          "title": "percent read contamination",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 12,
          "slot_uri": "GENEPIO:0100845",
          "alias": "percent_read_contamination",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterSARS-CoV-2"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "integer"
        },
        "consensus genome length": {
          "name": "consensus genome length",
          "description": "The length of the genome defined by the most common nucleotides at each position.",
          "title": "consensus genome length",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 13,
          "slot_uri": "GENEPIO:0001483",
          "alias": "consensus_genome_length",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterSARS-CoV-2"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "integer"
        },
        "reference genome accession": {
          "name": "reference genome accession",
          "description": "A persistent, unique identifier of a genome database entry.",
          "title": "reference genome accession",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 14,
          "slot_uri": "GENEPIO:0001485",
          "alias": "reference_genome_accession",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterSARS-CoV-2"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "WhitespaceMinimizedString"
        },
        "deduplication method": {
          "name": "deduplication method",
          "description": "The method used to remove duplicated reads in a sequence read dataset.",
          "title": "deduplication method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 15,
          "slot_uri": "GENEPIO:0100831",
          "alias": "deduplication_method",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterSARS-CoV-2"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "WhitespaceMinimizedString"
        },
        "bioinformatics protocol": {
          "name": "bioinformatics protocol",
          "description": "A description of the overall bioinformatics strategy used.",
          "title": "bioinformatics protocol",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 176,
          "slot_uri": "GENEPIO:0001489",
          "alias": "bioinformatics_protocol",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "WhitespaceMinimizedString"
        },
        "gene name": {
          "name": "gene name",
          "description": "The binary value of the result from a diagnostic test.",
          "title": "gene name",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 178,
          "slot_uri": "GENEPIO:0100655",
          "alias": "gene_name",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Pathogen diagnostic testing"
        },
        "diagnostic target presence": {
          "name": "diagnostic target presence",
          "description": "The value of the result from a diagnostic test.",
          "title": "diagnostic target presence",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 179,
          "slot_uri": "GENEPIO:0100962",
          "alias": "diagnostic_target_presence",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Pathogen diagnostic testing"
        },
        "diagnostic measurement value": {
          "name": "diagnostic measurement value",
          "description": "The unit of the result from a diagnostic test.",
          "title": "diagnostic measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 180,
          "slot_uri": "GENEPIO:0100963",
          "alias": "diagnostic_measurement_value",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Pathogen diagnostic testing",
          "range": "WhitespaceMinimizedString"
        },
        "diagnostic measurement unit": {
          "name": "diagnostic measurement unit",
          "description": "The method by which a diagnostic result was received.",
          "title": "diagnostic measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 181,
          "slot_uri": "GENEPIO:0100964",
          "alias": "diagnostic_measurement_unit",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Pathogen diagnostic testing"
        },
        "diagnostic measurement method": {
          "name": "diagnostic measurement method",
          "title": "diagnostic measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 182,
          "slot_uri": "GENEPIO:0100965",
          "alias": "diagnostic_measurement_method",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Pathogen diagnostic testing"
        },
        "authors": {
          "name": "authors",
          "description": "Names of individuals contributing to the processes of sample collection, sequence generation, analysis, and data submission.",
          "title": "authors",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 183,
          "slot_uri": "GENEPIO:0001517",
          "alias": "authors",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Contributor acknowledgement",
          "range": "WhitespaceMinimizedString",
          "recommended": true
        },
        "DataHarmonizer provenance": {
          "name": "DataHarmonizer provenance",
          "description": "The DataHarmonizer software and template version provenance.",
          "title": "DataHarmonizer provenance",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 184,
          "slot_uri": "GENEPIO:0001518",
          "alias": "DataHarmonizer_provenance",
          "owner": "WastewaterSARS-CoV-2",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Contributor acknowledgement",
          "range": "Provenance"
        }
      }
    },
    "WastewaterSinglePathogen": {
      "name": "WastewaterSinglePathogen",
      "description": "A public health microbial genomic surveillance specification for standardizing single pathogen whole genome sequencing contextual data from wastewater. Developed in collaboration by CIDGOH, PHA4GE, PHAC-NML, The Broad Institute, and the Bill & Melinda Gates Foundation.",
      "from_schema": "https://example.com/CanCOGeN_Covid-19",
      "see_also": [
        "templates/wastewater/SOP.pdf"
      ],
      "is_a": "dh_interface",
      "slot_usage": {
        "specimen collector sample ID": {
          "name": "specimen collector sample ID",
          "rank": 1,
          "slot_group": "Database identifiers"
        },
        "pooled sample ID": {
          "name": "pooled sample ID",
          "rank": 2,
          "slot_group": "Database identifiers"
        },
        "metagenome-assembled genome (MAG) ID": {
          "name": "metagenome-assembled genome (MAG) ID",
          "rank": 3,
          "slot_group": "Database identifiers"
        },
        "specimen collector project ID": {
          "name": "specimen collector project ID",
          "rank": 4,
          "slot_group": "Database identifiers"
        },
        "BioProject accession": {
          "name": "BioProject accession",
          "rank": 5,
          "slot_group": "Database identifiers"
        },
        "BioSample accession": {
          "name": "BioSample accession",
          "rank": 6,
          "slot_group": "Database identifiers"
        },
        "GenBank accession (versioned)": {
          "name": "GenBank accession (versioned)",
          "rank": 7,
          "slot_group": "Database identifiers"
        },
        "SRA accession": {
          "name": "SRA accession",
          "rank": 8,
          "slot_group": "Database identifiers"
        },
        "GISAID accession": {
          "name": "GISAID accession",
          "rank": 9,
          "slot_group": "Database identifiers"
        },
        "GISAID virus name": {
          "name": "GISAID virus name",
          "rank": 10,
          "slot_group": "Database identifiers"
        },
        "ENA accession": {
          "name": "ENA accession",
          "rank": 11,
          "slot_group": "Database identifiers"
        },
        "DDBJ accession": {
          "name": "DDBJ accession",
          "rank": 12,
          "slot_group": "Database identifiers"
        },
        "DRA accession": {
          "name": "DRA accession",
          "rank": 13,
          "slot_group": "Database identifiers"
        },
        "GSA accession": {
          "name": "GSA accession",
          "rank": 14,
          "slot_group": "Database identifiers"
        },
        "Enterobase accession": {
          "name": "Enterobase accession",
          "rank": 15,
          "slot_group": "Database identifiers"
        },
        "sampling site ID": {
          "name": "sampling site ID",
          "rank": 16,
          "slot_group": "Database identifiers"
        },
        "sampling event ID": {
          "name": "sampling event ID",
          "rank": 17,
          "slot_group": "Database identifiers"
        },
        "sample collection data steward name": {
          "name": "sample collection data steward name",
          "rank": 18,
          "slot_group": "Sample collection and processing"
        },
        "sample collected by": {
          "name": "sample collected by",
          "rank": 19,
          "slot_group": "Sample collection and processing"
        },
        "sample collector contact email": {
          "name": "sample collector contact email",
          "rank": 20,
          "slot_group": "Sample collection and processing"
        },
        "geo_loc_name (country)": {
          "name": "geo_loc_name (country)",
          "rank": 21,
          "slot_group": "Sample collection and processing"
        },
        "geo_loc_name (state/province/territory)": {
          "name": "geo_loc_name (state/province/territory)",
          "rank": 22,
          "slot_group": "Sample collection and processing"
        },
        "geo_loc name (county/region)": {
          "name": "geo_loc name (county/region)",
          "rank": 23,
          "slot_group": "Sample collection and processing"
        },
        "geo_loc_name (city)": {
          "name": "geo_loc_name (city)",
          "rank": 24,
          "slot_group": "Sample collection and processing"
        },
        "geo_loc name (site)": {
          "name": "geo_loc name (site)",
          "rank": 25,
          "slot_group": "Sample collection and processing"
        },
        "geo_loc latitude": {
          "name": "geo_loc latitude",
          "rank": 26,
          "slot_group": "Sample collection and processing"
        },
        "geo_loc longitude": {
          "name": "geo_loc longitude",
          "rank": 27,
          "slot_group": "Sample collection and processing"
        },
        "watershed shapefile availability": {
          "name": "watershed shapefile availability",
          "rank": 28,
          "slot_group": "Sample collection and processing"
        },
        "watershed shapefile filename": {
          "name": "watershed shapefile filename",
          "rank": 29,
          "slot_group": "Sample collection and processing"
        },
        "organism": {
          "name": "organism",
          "description": "The name of the gene used in the diagnostic RT-PCR test.",
          "comments": [
            "Provide the full name of the gene used in the test. The gene symbol (short form of gene name) can also be provided. Standardized gene names and symbols can be found in the Gene Ontology using this look-up service: https://bit.ly/2Sq1LbI"
          ],
          "examples": [
            {
              "value": "E gene (orf4)"
            }
          ],
          "rank": 172,
          "slot_group": "Pathogen diagnostic testing"
        },
        "purpose of sampling": {
          "name": "purpose of sampling",
          "rank": 31,
          "slot_group": "Sample collection and processing"
        },
        "scope of sampling": {
          "name": "scope of sampling",
          "rank": 32,
          "slot_group": "Sample collection and processing"
        },
        "sample received date": {
          "name": "sample received date",
          "rank": 33,
          "slot_group": "Sample collection and processing"
        },
        "sample collection date": {
          "name": "sample collection date",
          "rank": 34,
          "slot_group": "Sample collection and processing"
        },
        "sample processing date": {
          "name": "sample processing date",
          "rank": 35,
          "slot_group": "Sample collection and processing"
        },
        "sample collection time": {
          "name": "sample collection time",
          "rank": 36,
          "slot_group": "Sample collection and processing"
        },
        "sample collection time of day": {
          "name": "sample collection time of day",
          "rank": 37,
          "slot_group": "Sample collection and processing"
        },
        "sample collection time duration value": {
          "name": "sample collection time duration value",
          "rank": 38,
          "slot_group": "Sample collection and processing"
        },
        "sample collection time duration unit": {
          "name": "sample collection time duration unit",
          "rank": 39,
          "slot_group": "Sample collection and processing"
        },
        "presampling activity": {
          "name": "presampling activity",
          "rank": 40,
          "slot_group": "Sample collection and processing"
        },
        "presampling activity details": {
          "name": "presampling activity details",
          "rank": 41,
          "slot_group": "Sample collection and processing"
        },
        "sample volume measurement value": {
          "name": "sample volume measurement value",
          "rank": 42,
          "slot_group": "Sample collection and processing"
        },
        "sample volume measurement unit": {
          "name": "sample volume measurement unit",
          "rank": 43,
          "slot_group": "Sample collection and processing"
        },
        "sample storage method": {
          "name": "sample storage method",
          "rank": 44,
          "slot_group": "Sample collection and processing"
        },
        "sample storage medium": {
          "name": "sample storage medium",
          "rank": 45,
          "slot_group": "Sample collection and processing"
        },
        "sample storage duration value": {
          "name": "sample storage duration value",
          "rank": 46,
          "slot_group": "Sample collection and processing"
        },
        "sample storage duration unit": {
          "name": "sample storage duration unit",
          "rank": 47,
          "slot_group": "Sample collection and processing"
        },
        "specimen processing": {
          "name": "specimen processing",
          "rank": 48,
          "slot_group": "Sample collection and processing"
        },
        "specimen processing details": {
          "name": "specimen processing details",
          "rank": 49,
          "slot_group": "Sample collection and processing"
        },
        "environmental site": {
          "name": "environmental site",
          "rank": 50,
          "slot_group": "Sample collection and processing"
        },
        "environmental material": {
          "name": "environmental material",
          "rank": 51,
          "slot_group": "Sample collection and processing"
        },
        "environmental material properties": {
          "name": "environmental material properties",
          "rank": 52,
          "slot_group": "Sample collection and processing"
        },
        "wastewater system type": {
          "name": "wastewater system type",
          "rank": 53,
          "slot_group": "Sample collection and processing"
        },
        "experimental control type": {
          "name": "experimental control type",
          "rank": 54,
          "slot_group": "Sample collection and processing"
        },
        "experimental control details": {
          "name": "experimental control details",
          "rank": 55,
          "slot_group": "Sample collection and processing"
        },
        "collection device": {
          "name": "collection device",
          "rank": 56,
          "slot_group": "Sample collection and processing"
        },
        "collection method": {
          "name": "collection method",
          "rank": 57,
          "slot_group": "Sample collection and processing"
        },
        "nucleic acid extraction method": {
          "name": "nucleic acid extraction method",
          "rank": 58,
          "slot_group": "Sample collection and processing"
        },
        "extraction kit": {
          "name": "extraction kit",
          "rank": 59,
          "slot_group": "Sample collection and processing"
        },
        "endogenous control details": {
          "name": "endogenous control details",
          "rank": 60,
          "slot_group": "Sample collection and processing"
        },
        "extraction recovery efficiency measurement value": {
          "name": "extraction recovery efficiency measurement value",
          "rank": 61,
          "slot_group": "Sample collection and processing"
        },
        "extraction recovery efficiency measurement method": {
          "name": "extraction recovery efficiency measurement method",
          "rank": 62,
          "slot_group": "Sample collection and processing"
        },
        "water catchment area human population measurement value": {
          "name": "water catchment area human population measurement value",
          "rank": 63,
          "slot_group": "Environmental conditions and measurements"
        },
        "water catchment area human population range": {
          "name": "water catchment area human population range",
          "rank": 64,
          "slot_group": "Environmental conditions and measurements"
        },
        "water catchment area human population measurement method": {
          "name": "water catchment area human population measurement method",
          "rank": 65,
          "slot_group": "Environmental conditions and measurements"
        },
        "water catchment area human population density value": {
          "name": "water catchment area human population density value",
          "rank": 66,
          "slot_group": "Environmental conditions and measurements"
        },
        "water catchment area human population density unit": {
          "name": "water catchment area human population density unit",
          "rank": 67,
          "slot_group": "Environmental conditions and measurements"
        },
        "populated area type": {
          "name": "populated area type",
          "rank": 68,
          "slot_group": "Environmental conditions and measurements"
        },
        "sampling weather conditions": {
          "name": "sampling weather conditions",
          "rank": 69,
          "slot_group": "Environmental conditions and measurements"
        },
        "presampling weather conditions": {
          "name": "presampling weather conditions",
          "rank": 70,
          "slot_group": "Environmental conditions and measurements"
        },
        "precipitation measurement value": {
          "name": "precipitation measurement value",
          "rank": 71,
          "slot_group": "Environmental conditions and measurements"
        },
        "precipitation measurement unit": {
          "name": "precipitation measurement unit",
          "rank": 72,
          "slot_group": "Environmental conditions and measurements"
        },
        "precipitation measurement method": {
          "name": "precipitation measurement method",
          "rank": 73,
          "slot_group": "Environmental conditions and measurements"
        },
        "ambient temperature measurement value": {
          "name": "ambient temperature measurement value",
          "rank": 74,
          "slot_group": "Environmental conditions and measurements"
        },
        "ambient temperature measurement unit": {
          "name": "ambient temperature measurement unit",
          "rank": 75,
          "slot_group": "Environmental conditions and measurements"
        },
        "pH measurement value": {
          "name": "pH measurement value",
          "rank": 76,
          "slot_group": "Environmental conditions and measurements"
        },
        "pH measurement method": {
          "name": "pH measurement method",
          "rank": 77,
          "slot_group": "Environmental conditions and measurements"
        },
        "total daily flow rate measurement value": {
          "name": "total daily flow rate measurement value",
          "rank": 78,
          "slot_group": "Environmental conditions and measurements"
        },
        "total daily flow rate measurement unit": {
          "name": "total daily flow rate measurement unit",
          "rank": 79,
          "slot_group": "Environmental conditions and measurements"
        },
        "total daily flow rate measurement method": {
          "name": "total daily flow rate measurement method",
          "rank": 80,
          "slot_group": "Environmental conditions and measurements"
        },
        "instantaneous flow rate measurement value": {
          "name": "instantaneous flow rate measurement value",
          "rank": 81,
          "slot_group": "Environmental conditions and measurements"
        },
        "instantaneous flow rate measurement unit": {
          "name": "instantaneous flow rate measurement unit",
          "rank": 82,
          "slot_group": "Environmental conditions and measurements"
        },
        "instantaneous flow rate measurement method": {
          "name": "instantaneous flow rate measurement method",
          "rank": 83,
          "slot_group": "Environmental conditions and measurements"
        },
        "turbidity measurement value": {
          "name": "turbidity measurement value",
          "rank": 84,
          "slot_group": "Environmental conditions and measurements"
        },
        "turbidity measurement unit": {
          "name": "turbidity measurement unit",
          "rank": 85,
          "slot_group": "Environmental conditions and measurements"
        },
        "turbidity measurement method": {
          "name": "turbidity measurement method",
          "rank": 86,
          "slot_group": "Environmental conditions and measurements"
        },
        "dissolved oxygen measurement value": {
          "name": "dissolved oxygen measurement value",
          "rank": 87,
          "slot_group": "Environmental conditions and measurements"
        },
        "dissolved oxygen measurement unit": {
          "name": "dissolved oxygen measurement unit",
          "rank": 88,
          "slot_group": "Environmental conditions and measurements"
        },
        "dissolved oxygen measurement method": {
          "name": "dissolved oxygen measurement method",
          "rank": 89,
          "slot_group": "Environmental conditions and measurements"
        },
        "oxygen reduction potential (ORP) measurement value": {
          "name": "oxygen reduction potential (ORP) measurement value",
          "rank": 90,
          "slot_group": "Environmental conditions and measurements"
        },
        "oxygen reduction potential (ORP) measurement unit": {
          "name": "oxygen reduction potential (ORP) measurement unit",
          "rank": 91,
          "slot_group": "Environmental conditions and measurements"
        },
        "oxygen reduction potential (ORP) measurement method": {
          "name": "oxygen reduction potential (ORP) measurement method",
          "rank": 92,
          "slot_group": "Environmental conditions and measurements"
        },
        "chemical oxygen demand (COD) measurement value": {
          "name": "chemical oxygen demand (COD) measurement value",
          "rank": 93,
          "slot_group": "Environmental conditions and measurements"
        },
        "chemical oxygen demand (COD) measurement unit": {
          "name": "chemical oxygen demand (COD) measurement unit",
          "rank": 94,
          "slot_group": "Environmental conditions and measurements"
        },
        "chemical oxygen demand (COD) measurement method": {
          "name": "chemical oxygen demand (COD) measurement method",
          "rank": 95,
          "slot_group": "Environmental conditions and measurements"
        },
        "carbonaceous biochemical oxygen demand (CBOD) measurement value": {
          "name": "carbonaceous biochemical oxygen demand (CBOD) measurement value",
          "rank": 96,
          "slot_group": "Environmental conditions and measurements"
        },
        "carbonaceous biochemical oxygen demand (CBOD) measurement unit": {
          "name": "carbonaceous biochemical oxygen demand (CBOD) measurement unit",
          "rank": 97,
          "slot_group": "Environmental conditions and measurements"
        },
        "carbonaceous biochemical oxygen demand (CBOD) measurement method": {
          "name": "carbonaceous biochemical oxygen demand (CBOD) measurement method",
          "rank": 98,
          "slot_group": "Environmental conditions and measurements"
        },
        "total suspended solids (TSS) measurement value": {
          "name": "total suspended solids (TSS) measurement value",
          "rank": 99,
          "slot_group": "Environmental conditions and measurements"
        },
        "total suspended solids (TSS) measurement unit": {
          "name": "total suspended solids (TSS) measurement unit",
          "rank": 100,
          "slot_group": "Environmental conditions and measurements"
        },
        "total suspended solids (TSS) measurement method": {
          "name": "total suspended solids (TSS) measurement method",
          "rank": 101,
          "slot_group": "Environmental conditions and measurements"
        },
        "total dissolved solids (TDS) measurement value": {
          "name": "total dissolved solids (TDS) measurement value",
          "rank": 102,
          "slot_group": "Environmental conditions and measurements"
        },
        "total dissolved solids (TDS) measurement unit": {
          "name": "total dissolved solids (TDS) measurement unit",
          "rank": 103,
          "slot_group": "Environmental conditions and measurements"
        },
        "total dissolved solids (TDS) measurement method": {
          "name": "total dissolved solids (TDS) measurement method",
          "rank": 104,
          "slot_group": "Environmental conditions and measurements"
        },
        "total solids (TS) measurement value": {
          "name": "total solids (TS) measurement value",
          "rank": 105,
          "slot_group": "Environmental conditions and measurements"
        },
        "total solids (TS) measurement unit": {
          "name": "total solids (TS) measurement unit",
          "rank": 106,
          "slot_group": "Environmental conditions and measurements"
        },
        "total solids (TS) measurement method": {
          "name": "total solids (TS) measurement method",
          "rank": 107,
          "slot_group": "Environmental conditions and measurements"
        },
        "alkalinity measurement value": {
          "name": "alkalinity measurement value",
          "rank": 108,
          "slot_group": "Environmental conditions and measurements"
        },
        "alkalinity measurement unit": {
          "name": "alkalinity measurement unit",
          "rank": 109,
          "slot_group": "Environmental conditions and measurements"
        },
        "alkalinity measurement method": {
          "name": "alkalinity measurement method",
          "rank": 110,
          "slot_group": "Environmental conditions and measurements"
        },
        "conductivity measurement value": {
          "name": "conductivity measurement value",
          "rank": 111,
          "slot_group": "Environmental conditions and measurements"
        },
        "conductivity measurement unit": {
          "name": "conductivity measurement unit",
          "rank": 112,
          "slot_group": "Environmental conditions and measurements"
        },
        "conductivity measurement method": {
          "name": "conductivity measurement method",
          "rank": 113,
          "slot_group": "Environmental conditions and measurements"
        },
        "salinity measurement value": {
          "name": "salinity measurement value",
          "rank": 114,
          "slot_group": "Environmental conditions and measurements"
        },
        "salinity measurement unit": {
          "name": "salinity measurement unit",
          "rank": 115,
          "slot_group": "Environmental conditions and measurements"
        },
        "salinity measurement method": {
          "name": "salinity measurement method",
          "rank": 116,
          "slot_group": "Environmental conditions and measurements"
        },
        "total nitrogen (TN) measurement value": {
          "name": "total nitrogen (TN) measurement value",
          "rank": 117,
          "slot_group": "Environmental conditions and measurements"
        },
        "total nitrogen (TN) measurement unit": {
          "name": "total nitrogen (TN) measurement unit",
          "rank": 118,
          "slot_group": "Environmental conditions and measurements"
        },
        "total nitrogen (TN) measurement method": {
          "name": "total nitrogen (TN) measurement method",
          "rank": 119,
          "slot_group": "Environmental conditions and measurements"
        },
        "total phosphorus (TP) measurement value": {
          "name": "total phosphorus (TP) measurement value",
          "rank": 120,
          "slot_group": "Environmental conditions and measurements"
        },
        "total phosphorus (TP) measurement unit": {
          "name": "total phosphorus (TP) measurement unit",
          "rank": 121,
          "slot_group": "Environmental conditions and measurements"
        },
        "total phosphorus (TP) measurement method": {
          "name": "total phosphorus (TP) measurement method",
          "rank": 122,
          "slot_group": "Environmental conditions and measurements"
        },
        "fecal contamination indicator": {
          "name": "fecal contamination indicator",
          "rank": 123,
          "slot_group": "Environmental conditions and measurements"
        },
        "fecal contamination value": {
          "name": "fecal contamination value",
          "rank": 124,
          "slot_group": "Environmental conditions and measurements"
        },
        "fecal contamination unit": {
          "name": "fecal contamination unit",
          "rank": 125,
          "slot_group": "Environmental conditions and measurements"
        },
        "fecal contamination method": {
          "name": "fecal contamination method",
          "rank": 126,
          "slot_group": "Environmental conditions and measurements"
        },
        "fecal coliform count value": {
          "name": "fecal coliform count value",
          "rank": 127,
          "slot_group": "Environmental conditions and measurements"
        },
        "fecal coliform count unit": {
          "name": "fecal coliform count unit",
          "rank": 128,
          "slot_group": "Environmental conditions and measurements"
        },
        "fecal coliform count method": {
          "name": "fecal coliform count method",
          "rank": 129,
          "slot_group": "Environmental conditions and measurements"
        },
        "urinary contamination indicator": {
          "name": "urinary contamination indicator",
          "rank": 130,
          "slot_group": "Environmental conditions and measurements"
        },
        "urinary contamination value": {
          "name": "urinary contamination value",
          "rank": 131,
          "slot_group": "Environmental conditions and measurements"
        },
        "urinary contamination unit": {
          "name": "urinary contamination unit",
          "rank": 132,
          "slot_group": "Environmental conditions and measurements"
        },
        "urinary contamination method": {
          "name": "urinary contamination method",
          "rank": 133,
          "slot_group": "Environmental conditions and measurements"
        },
        "sample temperature value (at collection)": {
          "name": "sample temperature value (at collection)",
          "rank": 134,
          "slot_group": "Environmental conditions and measurements"
        },
        "sample temperature unit (at collection)": {
          "name": "sample temperature unit (at collection)",
          "rank": 135,
          "slot_group": "Environmental conditions and measurements"
        },
        "sample temperature value (when received)": {
          "name": "sample temperature value (when received)",
          "rank": 136,
          "slot_group": "Environmental conditions and measurements"
        },
        "sample temperature unit (when received)": {
          "name": "sample temperature unit (when received)",
          "rank": 137,
          "slot_group": "Environmental conditions and measurements"
        },
        "purpose of sequencing": {
          "name": "purpose of sequencing",
          "rank": 138,
          "slot_group": "Sequence information"
        },
        "purpose of sequencing details": {
          "name": "purpose of sequencing details",
          "rank": 139,
          "slot_group": "Sequence information"
        },
        "sequence submitted by": {
          "name": "sequence submitted by",
          "rank": 140,
          "slot_group": "Sequence information"
        },
        "sequence submitter contact email": {
          "name": "sequence submitter contact email",
          "rank": 141,
          "slot_group": "Sequence information"
        },
        "sequencing date": {
          "name": "sequencing date",
          "rank": 142,
          "slot_group": "Sequence information"
        },
        "library ID": {
          "name": "library ID",
          "rank": 143,
          "slot_group": "Sequence information"
        },
        "sequencing platform": {
          "name": "sequencing platform",
          "rank": 144,
          "slot_group": "Sequence information"
        },
        "sequencing instrument": {
          "name": "sequencing instrument",
          "rank": 145,
          "slot_group": "Sequence information"
        },
        "sequencing method type": {
          "name": "sequencing method type",
          "rank": 146,
          "slot_group": "Sequence information"
        },
        "library preparation kit": {
          "name": "library preparation kit",
          "rank": 147,
          "slot_group": "Sequence information"
        },
        "sequencing protocol": {
          "name": "sequencing protocol",
          "rank": 148,
          "slot_group": "Sequence information"
        },
        "DNA fragment length": {
          "name": "DNA fragment length",
          "rank": 149,
          "slot_group": "Sequence information"
        },
        "genomic target enrichment method": {
          "name": "genomic target enrichment method",
          "rank": 150,
          "slot_group": "Sequence information"
        },
        "genomic target enrichment method details": {
          "name": "genomic target enrichment method details",
          "rank": 151,
          "slot_group": "Sequence information"
        },
        "quality control method name": {
          "name": "quality control method name",
          "rank": 152,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "quality control method version": {
          "name": "quality control method version",
          "rank": 153,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "quality control determination": {
          "name": "quality control determination",
          "rank": 154,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "quality control issues": {
          "name": "quality control issues",
          "rank": 155,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "quality control details": {
          "name": "quality control details",
          "rank": 156,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "raw sequence data processing method": {
          "name": "raw sequence data processing method",
          "rank": 157,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "dehosting method": {
          "name": "dehosting method",
          "rank": 158,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "sequence assembly software name": {
          "name": "sequence assembly software name",
          "rank": 159,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "sequence assembly software version": {
          "name": "sequence assembly software version",
          "rank": 160,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "breadth of coverage value": {
          "name": "breadth of coverage value",
          "rank": 161,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "depth of coverage value": {
          "name": "depth of coverage value",
          "rank": 162,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "depth of coverage threshold": {
          "name": "depth of coverage threshold",
          "rank": 163,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "genome completeness": {
          "name": "genome completeness",
          "rank": 164,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "sequence assembly length": {
          "name": "sequence assembly length",
          "rank": 165,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "read mapping software name": {
          "name": "read mapping software name",
          "rank": 166,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "read mapping software version": {
          "name": "read mapping software version",
          "rank": 167,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "taxonomic reference database name": {
          "name": "taxonomic reference database name",
          "rank": 168,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "taxonomic reference database version": {
          "name": "taxonomic reference database version",
          "rank": 169,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "read mapping criteria": {
          "name": "read mapping criteria",
          "rank": 170,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "bioinformatics protocol": {
          "name": "bioinformatics protocol",
          "rank": 171,
          "slot_group": "Bioinformatics and QC metrics"
        },
        "gene name": {
          "name": "gene name",
          "rank": 173,
          "slot_group": "Pathogen diagnostic testing"
        },
        "diagnostic target presence": {
          "name": "diagnostic target presence",
          "rank": 174,
          "slot_group": "Pathogen diagnostic testing"
        },
        "diagnostic measurement value": {
          "name": "diagnostic measurement value",
          "rank": 175,
          "slot_group": "Pathogen diagnostic testing"
        },
        "diagnostic measurement unit": {
          "name": "diagnostic measurement unit",
          "rank": 176,
          "slot_group": "Pathogen diagnostic testing"
        },
        "diagnostic measurement method": {
          "name": "diagnostic measurement method",
          "rank": 177,
          "slot_group": "Pathogen diagnostic testing"
        },
        "authors": {
          "name": "authors",
          "rank": 178,
          "slot_group": "Contributor acknowledgement"
        },
        "DataHarmonizer provenance": {
          "name": "DataHarmonizer provenance",
          "rank": 179,
          "slot_group": "Contributor acknowledgement"
        }
      },
      "attributes": {
        "specimen collector sample ID": {
          "name": "specimen collector sample ID",
          "description": "The user-defined name for the sample.",
          "title": "specimen collector sample ID",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 1,
          "slot_uri": "GENEPIO:0001123",
          "identifier": true,
          "alias": "specimen_collector_sample_ID",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString",
          "required": true
        },
        "pooled sample ID": {
          "name": "pooled sample ID",
          "description": "The user-defined identifier assigned to a combined (pooled) set of samples.",
          "title": "pooled sample ID",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 2,
          "slot_uri": "GENEPIO:0100996",
          "alias": "pooled_sample_ID",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString"
        },
        "metagenome-assembled genome (MAG) ID": {
          "name": "metagenome-assembled genome (MAG) ID",
          "description": "The user-defined identifier assigned to a genome reconstructed from metagenomic data.",
          "title": "metagenome-assembled genome (MAG) ID",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 3,
          "slot_uri": "GENEPIO:0100753",
          "alias": "metagenome_assembled_genome_(MAG)_ID",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString"
        },
        "specimen collector project ID": {
          "name": "specimen collector project ID",
          "description": "The user-defined project name assigned to a sequencing project.",
          "title": "specimen collector project ID",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 4,
          "slot_uri": "GENEPIO:0100918",
          "alias": "specimen_collector_project_ID",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString"
        },
        "BioProject accession": {
          "name": "BioProject accession",
          "description": "The INSDC (i.e., ENA, NCBI, or DDBJ) accession number of the BioProject(s) to which the BioSample belongs.",
          "title": "BioProject accession",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 5,
          "slot_uri": "GENEPIO:0001136",
          "alias": "BioProject_accession",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString",
          "pattern": "{UPPER_CASE}",
          "structured_pattern": {
            "syntax": "{UPPER_CASE}",
            "interpolated": true,
            "partial_match": false
          }
        },
        "BioSample accession": {
          "name": "BioSample accession",
          "description": "The identifier assigned to a BioSample in INSDC (i.e., ENA, NCBI, or DDBJ) archives.",
          "title": "BioSample accession",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 6,
          "slot_uri": "GENEPIO:0001139",
          "alias": "BioSample_accession",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString",
          "recommended": true,
          "pattern": "{UPPER_CASE}",
          "structured_pattern": {
            "syntax": "{UPPER_CASE}",
            "interpolated": true,
            "partial_match": false
          }
        },
        "GenBank accession (versioned)": {
          "name": "GenBank accession (versioned)",
          "description": "The versioned identifier assigned to an assembly or consensus sequence in GenBank archives.",
          "title": "GenBank accession (versioned)",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 7,
          "slot_uri": "GENEPIO:0100754",
          "alias": "GenBank_accession_(versioned)",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString",
          "pattern": "{UPPER_CASE}",
          "structured_pattern": {
            "syntax": "{UPPER_CASE}",
            "interpolated": true,
            "partial_match": false
          }
        },
        "SRA accession": {
          "name": "SRA accession",
          "description": "The Sequence Read Archive (SRA) identifier linking raw read data, methodological metadata and quality control metrics submitted to the INSDC.",
          "title": "SRA accession",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 8,
          "slot_uri": "GENEPIO:0001142",
          "alias": "SRA_accession",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString",
          "pattern": "{UPPER_CASE}",
          "structured_pattern": {
            "syntax": "{UPPER_CASE}",
            "interpolated": true,
            "partial_match": false
          }
        },
        "GISAID accession": {
          "name": "GISAID accession",
          "description": "The identifier assigned to a sequence in GISAID (the Global Initiative on Sharing All Influenza Data) archives.",
          "title": "GISAID accession",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 9,
          "slot_uri": "GENEPIO:0001147",
          "alias": "GISAID_accession",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString",
          "pattern": "{UPPER_CASE}",
          "structured_pattern": {
            "syntax": "{UPPER_CASE}",
            "interpolated": true,
            "partial_match": false
          }
        },
        "GISAID virus name": {
          "name": "GISAID virus name",
          "description": "The user-defined GISAID virus name assigned to the sequence.",
          "title": "GISAID virus name",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 10,
          "slot_uri": "GENEPIO:0100282",
          "alias": "GISAID_virus_name",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString",
          "pattern": "{UPPER_CASE}",
          "structured_pattern": {
            "syntax": "{UPPER_CASE}",
            "interpolated": true,
            "partial_match": false
          }
        },
        "ENA accession": {
          "name": "ENA accession",
          "description": "The identifier assigned to a BioSample in ENA (European Nucleotide Archive) archives.",
          "title": "ENA accession",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 11,
          "slot_uri": "GENEPIO:0100755",
          "alias": "ENA_accession",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString",
          "pattern": "{UPPER_CASE}",
          "structured_pattern": {
            "syntax": "{UPPER_CASE}",
            "interpolated": true,
            "partial_match": false
          }
        },
        "DDBJ accession": {
          "name": "DDBJ accession",
          "description": "The identifier assigned to a sequence in DDBJ (DNA Data Bank of Japan) archives.",
          "title": "DDBJ accession",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 12,
          "slot_uri": "GENEPIO:0100756",
          "alias": "DDBJ_accession",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString",
          "pattern": "{UPPER_CASE}",
          "structured_pattern": {
            "syntax": "{UPPER_CASE}",
            "interpolated": true,
            "partial_match": false
          }
        },
        "DRA accession": {
          "name": "DRA accession",
          "description": "The identifier assigned to a BioSample in DRA (DDBJ Sequence Read Archive) archives.",
          "title": "DRA accession",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 13,
          "slot_uri": "GENEPIO:0100757",
          "alias": "DRA_accession",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString",
          "pattern": "{UPPER_CASE}",
          "structured_pattern": {
            "syntax": "{UPPER_CASE}",
            "interpolated": true,
            "partial_match": false
          }
        },
        "GSA accession": {
          "name": "GSA accession",
          "description": "The identifier assigned to a BioSample in GSA (Genome Sequence Archive) archives.",
          "title": "GSA accession",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 14,
          "slot_uri": "GENEPIO:0100758",
          "alias": "GSA_accession",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString",
          "pattern": "{UPPER_CASE}",
          "structured_pattern": {
            "syntax": "{UPPER_CASE}",
            "interpolated": true,
            "partial_match": false
          }
        },
        "Enterobase accession": {
          "name": "Enterobase accession",
          "description": "The identifier assigned to a sequence in Enterobase archives.",
          "title": "Enterobase accession",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 15,
          "slot_uri": "GENEPIO:0100759",
          "alias": "Enterobase_accession",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString",
          "pattern": "{UPPER_CASE}",
          "structured_pattern": {
            "syntax": "{UPPER_CASE}",
            "interpolated": true,
            "partial_match": false
          }
        },
        "sampling site ID": {
          "name": "sampling site ID",
          "description": "The user-defined identifier assigned to a specific location from which samples are taken.",
          "title": "sampling site ID",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 16,
          "slot_uri": "GENEPIO:0100760",
          "alias": "sampling_site_ID",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString",
          "recommended": true
        },
        "sampling event ID": {
          "name": "sampling event ID",
          "description": "The user-defined identifier assigned to a specific event during which one or more samples are taken, from one or more sites.",
          "title": "sampling event ID",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 17,
          "slot_uri": "GENEPIO:0100761",
          "alias": "sampling_event_ID",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Database identifiers",
          "range": "WhitespaceMinimizedString",
          "recommended": true
        },
        "sample collection data steward name": {
          "name": "sample collection data steward name",
          "description": "The name of the individual at the organization that collected the original sample that plays a data governance role and oversees how a sample and associated contextual data is used and distributed.",
          "title": "sample collection data steward name",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 18,
          "slot_uri": "GENEPIO:0100762",
          "alias": "sample_collection_data_steward_name",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "sample collected by": {
          "name": "sample collected by",
          "description": "The name of the organization with which the sample collector is affiliated.",
          "title": "sample collected by",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 19,
          "slot_uri": "GENEPIO:0001153",
          "alias": "sample_collected_by",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "required": true
        },
        "sample collector contact email": {
          "name": "sample collector contact email",
          "description": "The email address of the contact responsible for follow-up regarding the sample.",
          "title": "sample collector contact email",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 20,
          "slot_uri": "GENEPIO:0001156",
          "alias": "sample_collector_contact_email",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString",
          "pattern": "^\\S+@\\S+\\.\\S+$"
        },
        "geo_loc_name (country)": {
          "name": "geo_loc_name (country)",
          "description": "The country of origin of the sample.",
          "title": "geo_loc_name (country)",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 21,
          "slot_uri": "GENEPIO:0001181",
          "alias": "geo_loc_name_(country)",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "required": true
        },
        "geo_loc_name (state/province/territory)": {
          "name": "geo_loc_name (state/province/territory)",
          "description": "The state/province/territory of origin of the sample.",
          "title": "geo_loc_name (state/province/territory)",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 22,
          "slot_uri": "GENEPIO:0001185",
          "alias": "geo_loc_name_(state/province/territory)",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "required": true
        },
        "geo_loc name (county/region)": {
          "name": "geo_loc name (county/region)",
          "description": "The county/region of origin of the sample.",
          "title": "geo_loc name (county/region)",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 23,
          "slot_uri": "GENEPIO:0100280",
          "alias": "geo_loc_name_(county/region)",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "geo_loc_name (city)": {
          "name": "geo_loc_name (city)",
          "description": "The city of origin of the sample.",
          "title": "geo_loc_name (city)",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 24,
          "slot_uri": "GENEPIO:0001189",
          "alias": "geo_loc_name_(city)",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "geo_loc name (site)": {
          "name": "geo_loc name (site)",
          "description": "The name of a specific geographical location e.g. Credit River (rather than river).",
          "title": "geo_loc name (site)",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 25,
          "slot_uri": "GENEPIO:0100436",
          "alias": "geo_loc_name_(site)",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "geo_loc latitude": {
          "name": "geo_loc latitude",
          "description": "The latitude coordinates of the geographical location of sample collection.",
          "title": "geo_loc latitude",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 26,
          "slot_uri": "GENEPIO:0100309",
          "alias": "geo_loc_latitude",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "geo_loc longitude": {
          "name": "geo_loc longitude",
          "description": "The longitude coordinates of the geographical location of sample collection.",
          "title": "geo_loc longitude",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 27,
          "slot_uri": "GENEPIO:0100310",
          "alias": "geo_loc_longitude",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "watershed shapefile availability": {
          "name": "watershed shapefile availability",
          "description": "The availability status of a shapefile descriping the catchment contributing to a watershed.",
          "title": "watershed shapefile availability",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 28,
          "slot_uri": "GENEPIO:0100919",
          "alias": "watershed_shapefile_availability",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing"
        },
        "watershed shapefile filename": {
          "name": "watershed shapefile filename",
          "description": "The name of the watershed shapefile.",
          "title": "watershed shapefile filename",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 29,
          "slot_uri": "GENEPIO:0100920",
          "alias": "watershed_shapefile_filename",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "organism": {
          "name": "organism",
          "description": "The name of the gene used in the diagnostic RT-PCR test.",
          "title": "organism",
          "comments": [
            "Provide the full name of the gene used in the test. The gene symbol (short form of gene name) can also be provided. Standardized gene names and symbols can be found in the Gene Ontology using this look-up service: https://bit.ly/2Sq1LbI"
          ],
          "examples": [
            {
              "value": "E gene (orf4)"
            }
          ],
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 172,
          "slot_uri": "GENEPIO:0001191",
          "alias": "organism",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Pathogen diagnostic testing"
        },
        "purpose of sampling": {
          "name": "purpose of sampling",
          "description": "The reason that the sample was collected.",
          "title": "purpose of sampling",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 31,
          "slot_uri": "GENEPIO:0001198",
          "alias": "purpose_of_sampling",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "required": true
        },
        "scope of sampling": {
          "name": "scope of sampling",
          "description": "The range of locations or entities sampled expressed in general terms.",
          "title": "scope of sampling",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 32,
          "slot_uri": "GENEPIO:0100877",
          "alias": "scope_of_sampling",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "recommended": true
        },
        "sample received date": {
          "name": "sample received date",
          "description": "The date on which the sample was received.",
          "title": "sample received date",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 33,
          "slot_uri": "GENEPIO:0001179",
          "alias": "sample_received_date",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing"
        },
        "sample collection date": {
          "name": "sample collection date",
          "description": "The date on which the sample was collected.",
          "title": "sample collection date",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 34,
          "slot_uri": "GENEPIO:0001174",
          "alias": "sample_collection_date",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "required": true
        },
        "sample processing date": {
          "name": "sample processing date",
          "description": "The date on which the sample was processed.",
          "title": "sample processing date",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 35,
          "slot_uri": "GENEPIO:0100763",
          "alias": "sample_processing_date",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing"
        },
        "sample collection time": {
          "name": "sample collection time",
          "description": "The time at which the sample was collected.",
          "title": "sample collection time",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 36,
          "slot_uri": "GENEPIO:0100764",
          "alias": "sample_collection_time",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "recommended": true
        },
        "sample collection time of day": {
          "name": "sample collection time of day",
          "description": "The descriptive time of day during which the sample was collected.",
          "title": "sample collection time of day",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 37,
          "slot_uri": "GENEPIO:0100765",
          "alias": "sample_collection_time_of_day",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing"
        },
        "sample collection time duration value": {
          "name": "sample collection time duration value",
          "description": "The amount of time over which the sample was collected.",
          "title": "sample collection time duration value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 38,
          "slot_uri": "GENEPIO:0100766",
          "alias": "sample_collection_time_duration_value",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "recommended": true
        },
        "sample collection time duration unit": {
          "name": "sample collection time duration unit",
          "description": "The units of the time duration measurement of sample collection.",
          "title": "sample collection time duration unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 39,
          "slot_uri": "GENEPIO:0100767",
          "alias": "sample_collection_time_duration_unit",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "recommended": true
        },
        "presampling activity": {
          "name": "presampling activity",
          "description": "The activities or variables upstream of sample collection that may affect the sample.",
          "title": "presampling activity",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 40,
          "slot_uri": "GENEPIO:0100433",
          "alias": "presampling_activity",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing"
        },
        "presampling activity details": {
          "name": "presampling activity details",
          "description": "The details of the activities or variables that affected the sample collected.",
          "title": "presampling activity details",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 41,
          "slot_uri": "GENEPIO:0100434",
          "alias": "presampling_activity_details",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing"
        },
        "sample volume measurement value": {
          "name": "sample volume measurement value",
          "description": "The numerical value of the volume measurement of the sample collected.",
          "title": "sample volume measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 42,
          "slot_uri": "GENEPIO:0100768",
          "alias": "sample_volume_measurement_value",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "sample volume measurement unit": {
          "name": "sample volume measurement unit",
          "description": "The units of the volume measurement of the sample collected.",
          "title": "sample volume measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 43,
          "slot_uri": "GENEPIO:0100769",
          "alias": "sample_volume_measurement_unit",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing"
        },
        "sample storage method": {
          "name": "sample storage method",
          "description": "The process used to store the sample.",
          "title": "sample storage method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 44,
          "slot_uri": "GENEPIO:0100448",
          "alias": "sample_storage_method",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "sample storage medium": {
          "name": "sample storage medium",
          "description": "The medium in which a sample is stored.",
          "title": "sample storage medium",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 45,
          "slot_uri": "GENEPIO:0100449",
          "alias": "sample_storage_medium",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "sample storage duration value": {
          "name": "sample storage duration value",
          "description": "The numerical value of the time measurement during which a sample is in storage.",
          "title": "sample storage duration value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 46,
          "slot_uri": "GENEPIO:0100768",
          "alias": "sample_storage_duration_value",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "sample storage duration unit": {
          "name": "sample storage duration unit",
          "description": "The units of a measured sample storage duration.",
          "title": "sample storage duration unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 47,
          "slot_uri": "GENEPIO:0100769",
          "alias": "sample_storage_duration_unit",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing"
        },
        "specimen processing": {
          "name": "specimen processing",
          "description": "Any processing applied to the sample during or after receiving the sample.",
          "title": "specimen processing",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 48,
          "slot_uri": "GENEPIO:0001253",
          "alias": "specimen_processing",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing"
        },
        "specimen processing details": {
          "name": "specimen processing details",
          "description": "The details of the processing applied to the sample during or after receiving the sample.",
          "title": "specimen processing details",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 49,
          "slot_uri": "GENEPIO:0100311",
          "alias": "specimen_processing_details",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "environmental site": {
          "name": "environmental site",
          "description": "An environmental location may describe a site in the natural or built environment e.g. contact surface, metal can, hospital, wet market, bat cave.",
          "title": "environmental site",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 50,
          "slot_uri": "GENEPIO:0001232",
          "alias": "environmental_site",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "recommended": true
        },
        "environmental material": {
          "name": "environmental material",
          "description": "A substance obtained from the natural or man-made environment e.g. soil, water, sewage.",
          "title": "environmental material",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 51,
          "slot_uri": "GENEPIO:0001223",
          "alias": "environmental_material",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "recommended": true
        },
        "environmental material properties": {
          "name": "environmental material properties",
          "description": "The properties, characteristics and qualities of a substance obtained from the natural or man-made environment.",
          "title": "environmental material properties",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 52,
          "slot_uri": "GENEPIO:0100770",
          "alias": "environmental_material_properties",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "recommended": true
        },
        "wastewater system type": {
          "name": "wastewater system type",
          "description": "The type or classification of a wastewater system e.g. sanitary sewer, combined sewer",
          "title": "wastewater system type",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 53,
          "slot_uri": "GENEPIO:0100771",
          "alias": "wastewater_system_type",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "recommended": true
        },
        "experimental control type": {
          "name": "experimental control type",
          "description": "The type of control used in the experiment.",
          "title": "experimental control type",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 54,
          "slot_uri": "GENEPIO:0100921",
          "alias": "experimental_control_type",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing"
        },
        "experimental control details": {
          "name": "experimental control details",
          "description": "The details regarding the experimental control contained in the sample.",
          "title": "experimental control details",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 55,
          "slot_uri": "GENEPIO:0100922",
          "alias": "experimental_control_details",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "collection device": {
          "name": "collection device",
          "description": "The instrument or container used to collect the sample e.g. grab sampler.",
          "title": "collection device",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 56,
          "slot_uri": "GENEPIO:0001234",
          "alias": "collection_device",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing"
        },
        "collection method": {
          "name": "collection method",
          "description": "The process used to collect the sample.",
          "title": "collection method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 57,
          "slot_uri": "GENEPIO:0001241",
          "alias": "collection_method",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "recommended": true
        },
        "nucleic acid extraction method": {
          "name": "nucleic acid extraction method",
          "description": "The process used to extract genomic material from a sample.",
          "title": "nucleic acid extraction method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 58,
          "slot_uri": "GENEPIO:0100939",
          "alias": "nucleic_acid_extraction_method",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "extraction kit": {
          "name": "extraction kit",
          "description": "The kit used to extract genomic material from a sample",
          "title": "extraction kit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 59,
          "slot_uri": "GENEPIO:0100772",
          "alias": "extraction_kit",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "endogenous control details": {
          "name": "endogenous control details",
          "description": "The description of the endogenous controls included when extracting a sample.",
          "title": "endogenous control details",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 60,
          "slot_uri": "GENEPIO:0100923",
          "alias": "endogenous_control_details",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString",
          "recommended": true
        },
        "extraction recovery efficiency measurement value": {
          "name": "extraction recovery efficiency measurement value",
          "description": "The recovery efficiency of an extraction, calculated as the amount of a synthetic or endogenous compound identified in the sample relative to the amount expected.",
          "title": "extraction recovery efficiency measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 61,
          "slot_uri": "GENEPIO:0100924",
          "alias": "extraction_recovery_efficiency_measurement_value",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "extraction recovery efficiency measurement method": {
          "name": "extraction recovery efficiency measurement method",
          "description": "The method by which recovery efficiency of an extraction was calculated.",
          "title": "extraction recovery efficiency measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 62,
          "slot_uri": "GENEPIO:0100925",
          "alias": "extraction_recovery_efficiency_measurement_method",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sample collection and processing",
          "range": "WhitespaceMinimizedString"
        },
        "water catchment area human population measurement value": {
          "name": "water catchment area human population measurement value",
          "description": "The numerical value of the human population measurement that contributes to the composition of water in a catchment area.",
          "title": "water catchment area human population measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 63,
          "slot_uri": "GENEPIO:0100773",
          "alias": "water_catchment_area_human_population_measurement_value",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "recommended": true
        },
        "water catchment area human population range": {
          "name": "water catchment area human population range",
          "description": "The human population range of the water catchment that contributes effluent to a wastewater site.",
          "title": "water catchment area human population range",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 64,
          "slot_uri": "GENEPIO:0100774",
          "alias": "water_catchment_area_human_population_range",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "water catchment area human population measurement method": {
          "name": "water catchment area human population measurement method",
          "description": "The method by which a water catchment 's human population size was measured or estimated",
          "title": "water catchment area human population measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 65,
          "slot_uri": "GENEPIO:0100775",
          "alias": "water_catchment_area_human_population_measurement_method",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "water catchment area human population density value": {
          "name": "water catchment area human population density value",
          "description": "The numerical value describing the number of humans per geographical area in a water catchment.",
          "title": "water catchment area human population density value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 66,
          "slot_uri": "GENEPIO:0100776",
          "alias": "water_catchment_area_human_population_density_value",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "water catchment area human population density unit": {
          "name": "water catchment area human population density unit",
          "description": "The unit describing the number of humans per geographical area in a water catchment.",
          "title": "water catchment area human population density unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 67,
          "slot_uri": "GENEPIO:0100777",
          "alias": "water_catchment_area_human_population_density_unit",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "populated area type": {
          "name": "populated area type",
          "description": "A type of area that is populated by humans to different degrees.",
          "title": "populated area type",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 68,
          "slot_uri": "GENEPIO:0100778",
          "alias": "populated_area_type",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "sampling weather conditions": {
          "name": "sampling weather conditions",
          "description": "The state of the atmosphere at a place and time as regards heat, dryness, sunshine, wind, rain, etc.",
          "title": "sampling weather conditions",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 69,
          "slot_uri": "GENEPIO:0100779",
          "alias": "sampling_weather_conditions",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "presampling weather conditions": {
          "name": "presampling weather conditions",
          "description": "Weather conditions prior to collection that may affect the sample.",
          "title": "presampling weather conditions",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 70,
          "slot_uri": "GENEPIO:0100780",
          "alias": "presampling_weather_conditions",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "precipitation measurement value": {
          "name": "precipitation measurement value",
          "description": "The amount of water which has fallen during a precipitation process.",
          "title": "precipitation measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 71,
          "slot_uri": "GENEPIO:0100911",
          "alias": "precipitation_measurement_value",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "recommended": true
        },
        "precipitation measurement unit": {
          "name": "precipitation measurement unit",
          "description": "The units of measurement for the amount of water which has fallen during a precipitation process.",
          "title": "precipitation measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 72,
          "slot_uri": "GENEPIO:0100912",
          "alias": "precipitation_measurement_unit",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "recommended": true
        },
        "precipitation measurement method": {
          "name": "precipitation measurement method",
          "description": "The process used to measure the amount of water which has fallen during a precipitation process.",
          "title": "precipitation measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 73,
          "slot_uri": "GENEPIO:0100913",
          "alias": "precipitation_measurement_method",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "ambient temperature measurement value": {
          "name": "ambient temperature measurement value",
          "description": "The numerical value of a measurement of the ambient temperature.",
          "title": "ambient temperature measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 74,
          "slot_uri": "GENEPIO:0100935",
          "alias": "ambient_temperature_measurement_value",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "ambient temperature measurement unit": {
          "name": "ambient temperature measurement unit",
          "description": "The units of a measurement of the ambient temperature.",
          "title": "ambient temperature measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 75,
          "slot_uri": "GENEPIO:0100936",
          "alias": "ambient_temperature_measurement_unit",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "pH measurement value": {
          "name": "pH measurement value",
          "description": "The measured pH value indicating the acidity or basicity(alkalinity) of an aqueous solution.",
          "title": "pH measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 76,
          "slot_uri": "GENEPIO:0001736",
          "alias": "pH_measurement_value",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "pH measurement method": {
          "name": "pH measurement method",
          "description": "The process used to measure pH value.",
          "title": "pH measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 77,
          "slot_uri": "GENEPIO:0100781",
          "alias": "pH_measurement_method",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "total daily flow rate measurement value": {
          "name": "total daily flow rate measurement value",
          "description": "The numerical value of a measured fluid flow rate over the course of a day.",
          "title": "total daily flow rate measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 78,
          "slot_uri": "GENEPIO:0100905",
          "alias": "total_daily_flow_rate_measurement_value",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "total daily flow rate measurement unit": {
          "name": "total daily flow rate measurement unit",
          "description": "The units of a measured fluid flow rate over the course of a day.",
          "title": "total daily flow rate measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 79,
          "slot_uri": "GENEPIO:0100906",
          "alias": "total_daily_flow_rate_measurement_unit",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "total daily flow rate measurement method": {
          "name": "total daily flow rate measurement method",
          "description": "The process used to measure total daily fluid flow rate.",
          "title": "total daily flow rate measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 80,
          "slot_uri": "GENEPIO:0100907",
          "alias": "total_daily_flow_rate_measurement_method",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "instantaneous flow rate measurement value": {
          "name": "instantaneous flow rate measurement value",
          "description": "The numerical value of a measured instantaneous fluid flow rate.",
          "title": "instantaneous flow rate measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 81,
          "slot_uri": "GENEPIO:0100908",
          "alias": "instantaneous_flow_rate_measurement_value",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "instantaneous flow rate measurement unit": {
          "name": "instantaneous flow rate measurement unit",
          "description": "The units of a measured instantaneous fluid flow rate.",
          "title": "instantaneous flow rate measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 82,
          "slot_uri": "GENEPIO:0100909",
          "alias": "instantaneous_flow_rate_measurement_unit",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "instantaneous flow rate measurement method": {
          "name": "instantaneous flow rate measurement method",
          "description": "The process used to measure instantaneous fluid flow rate.",
          "title": "instantaneous flow rate measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 83,
          "slot_uri": "GENEPIO:0100910",
          "alias": "instantaneous_flow_rate_measurement_method",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "turbidity measurement value": {
          "name": "turbidity measurement value",
          "description": "The numerical value of a measurement of turbidity.",
          "title": "turbidity measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 84,
          "slot_uri": "GENEPIO:0100783",
          "alias": "turbidity_measurement_value",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString",
          "recommended": true
        },
        "turbidity measurement unit": {
          "name": "turbidity measurement unit",
          "description": "The units of a measurement of turbidity.",
          "title": "turbidity measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 85,
          "slot_uri": "GENEPIO:0100914",
          "alias": "turbidity_measurement_unit",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "recommended": true
        },
        "turbidity measurement method": {
          "name": "turbidity measurement method",
          "description": "The process used to measure turbidity.",
          "title": "turbidity measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 86,
          "slot_uri": "GENEPIO:0100783",
          "alias": "turbidity_measurement_method",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "dissolved oxygen measurement value": {
          "name": "dissolved oxygen measurement value",
          "description": "The numerical value of a measurement of dissolved oxygen.",
          "title": "dissolved oxygen measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 87,
          "slot_uri": "GENEPIO:0100915",
          "alias": "dissolved_oxygen_measurement_value",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "dissolved oxygen measurement unit": {
          "name": "dissolved oxygen measurement unit",
          "description": "The units of a measurement of dissolved oxygen.",
          "title": "dissolved oxygen measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 88,
          "slot_uri": "GENEPIO:0100784",
          "alias": "dissolved_oxygen_measurement_unit",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "dissolved oxygen measurement method": {
          "name": "dissolved oxygen measurement method",
          "description": "The method used to measure dissolved oxygen.",
          "title": "dissolved oxygen measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 89,
          "slot_uri": "GENEPIO:0100785",
          "alias": "dissolved_oxygen_measurement_method",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "oxygen reduction potential (ORP) measurement value": {
          "name": "oxygen reduction potential (ORP) measurement value",
          "description": "The numerical value of a measurement of oxygen reduction potential (ORP).",
          "title": "oxygen reduction potential (ORP) measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 90,
          "slot_uri": "GENEPIO:0100917",
          "alias": "oxygen_reduction_potential_(ORP)_measurement_value",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "oxygen reduction potential (ORP) measurement unit": {
          "name": "oxygen reduction potential (ORP) measurement unit",
          "description": "The units of a measurement of oxygen reduction potential (ORP).",
          "title": "oxygen reduction potential (ORP) measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 91,
          "slot_uri": "GENEPIO:0100786",
          "alias": "oxygen_reduction_potential_(ORP)_measurement_unit",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "oxygen reduction potential (ORP) measurement method": {
          "name": "oxygen reduction potential (ORP) measurement method",
          "description": "The method used to measure oxygen reduction potential (ORP).",
          "title": "oxygen reduction potential (ORP) measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 92,
          "slot_uri": "GENEPIO:0100787",
          "alias": "oxygen_reduction_potential_(ORP)_measurement_method",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "chemical oxygen demand (COD) measurement value": {
          "name": "chemical oxygen demand (COD) measurement value",
          "description": "The measured value from a chemical oxygen demand (COD) test.",
          "title": "chemical oxygen demand (COD) measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 93,
          "slot_uri": "GENEPIO:0100788",
          "alias": "chemical_oxygen_demand_(COD)_measurement_value",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "chemical oxygen demand (COD) measurement unit": {
          "name": "chemical oxygen demand (COD) measurement unit",
          "description": "The units associated with a value from a chemical oxygen demand (COD) test.",
          "title": "chemical oxygen demand (COD) measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 94,
          "slot_uri": "GENEPIO:0100789",
          "alias": "chemical_oxygen_demand_(COD)_measurement_unit",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "chemical oxygen demand (COD) measurement method": {
          "name": "chemical oxygen demand (COD) measurement method",
          "description": "The method used to measure chemical oxygen demand (COD).",
          "title": "chemical oxygen demand (COD) measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 95,
          "slot_uri": "GENEPIO:0100790",
          "alias": "chemical_oxygen_demand_(COD)_measurement_method",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "carbonaceous biochemical oxygen demand (CBOD) measurement value": {
          "name": "carbonaceous biochemical oxygen demand (CBOD) measurement value",
          "description": "The numerical value of a measurement of carbonaceous biochemical oxygen demand (CBOD).",
          "title": "carbonaceous biochemical oxygen demand (CBOD) measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 96,
          "slot_uri": "GENEPIO:0100791",
          "alias": "carbonaceous_biochemical_oxygen_demand_(CBOD)_measurement_value",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "carbonaceous biochemical oxygen demand (CBOD) measurement unit": {
          "name": "carbonaceous biochemical oxygen demand (CBOD) measurement unit",
          "description": "The units of a measurement of carbonaceous biochemical oxygen demand (CBOD).",
          "title": "carbonaceous biochemical oxygen demand (CBOD) measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 97,
          "slot_uri": "GENEPIO:0100792",
          "alias": "carbonaceous_biochemical_oxygen_demand_(CBOD)_measurement_unit",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "carbonaceous biochemical oxygen demand (CBOD) measurement method": {
          "name": "carbonaceous biochemical oxygen demand (CBOD) measurement method",
          "description": "The method used to measure carbonaceous biochemical oxygen demand (CBOD).",
          "title": "carbonaceous biochemical oxygen demand (CBOD) measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 98,
          "slot_uri": "GENEPIO:0100793",
          "alias": "carbonaceous_biochemical_oxygen_demand_(CBOD)_measurement_method",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "total suspended solids (TSS) measurement value": {
          "name": "total suspended solids (TSS) measurement value",
          "description": "The numerical value from a total suspended solids (TSS) test.",
          "title": "total suspended solids (TSS) measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 99,
          "slot_uri": "GENEPIO:0100794",
          "alias": "total_suspended_solids_(TSS)_measurement_value",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "total suspended solids (TSS) measurement unit": {
          "name": "total suspended solids (TSS) measurement unit",
          "description": "The units associated with a value from a total suspended solids (TSS) test.",
          "title": "total suspended solids (TSS) measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 100,
          "slot_uri": "GENEPIO:0100795",
          "alias": "total_suspended_solids_(TSS)_measurement_unit",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "total suspended solids (TSS) measurement method": {
          "name": "total suspended solids (TSS) measurement method",
          "description": "The method used to measure total suspended solids (TSS).",
          "title": "total suspended solids (TSS) measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 101,
          "slot_uri": "GENEPIO:0100796",
          "alias": "total_suspended_solids_(TSS)_measurement_method",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "total dissolved solids (TDS) measurement value": {
          "name": "total dissolved solids (TDS) measurement value",
          "description": "The numerical value from a total dissolved solids (TDS) test.",
          "title": "total dissolved solids (TDS) measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 102,
          "slot_uri": "GENEPIO:0100797",
          "alias": "total_dissolved_solids_(TDS)_measurement_value",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "total dissolved solids (TDS) measurement unit": {
          "name": "total dissolved solids (TDS) measurement unit",
          "description": "The units associated with a value from a total dissolved solids (TDS) test.",
          "title": "total dissolved solids (TDS) measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 103,
          "slot_uri": "GENEPIO:0100798",
          "alias": "total_dissolved_solids_(TDS)_measurement_unit",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "total dissolved solids (TDS) measurement method": {
          "name": "total dissolved solids (TDS) measurement method",
          "description": "The method used to measure total dissolved solids (TDS).",
          "title": "total dissolved solids (TDS) measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 104,
          "slot_uri": "GENEPIO:0100799",
          "alias": "total_dissolved_solids_(TDS)_measurement_method",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "total solids (TS) measurement value": {
          "name": "total solids (TS) measurement value",
          "description": "The numerical value from a total solids (TS) test.",
          "title": "total solids (TS) measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 105,
          "slot_uri": "GENEPIO:0100800",
          "alias": "total_solids_(TS)_measurement_value",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "total solids (TS) measurement unit": {
          "name": "total solids (TS) measurement unit",
          "description": "The units associated with a value from a total solids (TS) test.",
          "title": "total solids (TS) measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 106,
          "slot_uri": "GENEPIO:0100801",
          "alias": "total_solids_(TS)_measurement_unit",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "total solids (TS) measurement method": {
          "name": "total solids (TS) measurement method",
          "description": "The method used to measure total solids (TS).",
          "title": "total solids (TS) measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 107,
          "slot_uri": "GENEPIO:0100802",
          "alias": "total_solids_(TS)_measurement_method",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "alkalinity measurement value": {
          "name": "alkalinity measurement value",
          "description": "The numerical value of a measurement of alkalinity.",
          "title": "alkalinity measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 108,
          "slot_uri": "GENEPIO:0100878",
          "alias": "alkalinity_measurement_value",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "alkalinity measurement unit": {
          "name": "alkalinity measurement unit",
          "description": "The units of a measurement of alkalinity.",
          "title": "alkalinity measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 109,
          "slot_uri": "GENEPIO:0100879",
          "alias": "alkalinity_measurement_unit",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "alkalinity measurement method": {
          "name": "alkalinity measurement method",
          "description": "The process used to measure alkalinity.",
          "title": "alkalinity measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 110,
          "slot_uri": "GENEPIO:0100880",
          "alias": "alkalinity_measurement_method",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "conductivity measurement value": {
          "name": "conductivity measurement value",
          "description": "The numerical value of a measurement of conductivity.",
          "title": "conductivity measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 111,
          "slot_uri": "GENEPIO:0100916",
          "alias": "conductivity_measurement_value",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "conductivity measurement unit": {
          "name": "conductivity measurement unit",
          "description": "The units of a measurement of conductivity.",
          "title": "conductivity measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 112,
          "slot_uri": "GENEPIO:0100803",
          "alias": "conductivity_measurement_unit",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "conductivity measurement method": {
          "name": "conductivity measurement method",
          "description": "The method used to measure conductivity.",
          "title": "conductivity measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 113,
          "slot_uri": "GENEPIO:0100804",
          "alias": "conductivity_measurement_method",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "salinity measurement value": {
          "name": "salinity measurement value",
          "description": "The numerical value of a measurement of salinity.",
          "title": "salinity measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 114,
          "slot_uri": "GENEPIO:0100805",
          "alias": "salinity_measurement_value",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "salinity measurement unit": {
          "name": "salinity measurement unit",
          "description": "The units of a measurement of salinity.",
          "title": "salinity measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 115,
          "slot_uri": "GENEPIO:0100806",
          "alias": "salinity_measurement_unit",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "salinity measurement method": {
          "name": "salinity measurement method",
          "description": "The method used to measure salinity.",
          "title": "salinity measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 116,
          "slot_uri": "GENEPIO:0100807",
          "alias": "salinity_measurement_method",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "total nitrogen (TN) measurement value": {
          "name": "total nitrogen (TN) measurement value",
          "description": "The numerical value of a measurement of total nitrogen (TN).",
          "title": "total nitrogen (TN) measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 117,
          "slot_uri": "GENEPIO:0100808",
          "alias": "total_nitrogen_(TN)_measurement_value",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "total nitrogen (TN) measurement unit": {
          "name": "total nitrogen (TN) measurement unit",
          "description": "The units of a measurement of total nitrogen (TN).",
          "title": "total nitrogen (TN) measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 118,
          "slot_uri": "GENEPIO:0100809",
          "alias": "total_nitrogen_(TN)_measurement_unit",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "total nitrogen (TN) measurement method": {
          "name": "total nitrogen (TN) measurement method",
          "description": "The method used to measure total nitrogen (TN).",
          "title": "total nitrogen (TN) measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 119,
          "slot_uri": "GENEPIO:0100810",
          "alias": "total_nitrogen_(TN)_measurement_method",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "total phosphorus (TP) measurement value": {
          "name": "total phosphorus (TP) measurement value",
          "description": "The numerical value of a measurement of total phosphorus (TP).",
          "title": "total phosphorus (TP) measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 120,
          "slot_uri": "GENEPIO:0100811",
          "alias": "total_phosphorus_(TP)_measurement_value",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "total phosphorus (TP) measurement unit": {
          "name": "total phosphorus (TP) measurement unit",
          "description": "The units of a measurement of total phosphorus (TP).",
          "title": "total phosphorus (TP) measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 121,
          "slot_uri": "GENEPIO:0100812",
          "alias": "total_phosphorus_(TP)_measurement_unit",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "total phosphorus (TP) measurement method": {
          "name": "total phosphorus (TP) measurement method",
          "description": "The method used to measure total phosphorus (TP).",
          "title": "total phosphorus (TP) measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 122,
          "slot_uri": "GENEPIO:0100813",
          "alias": "total_phosphorus_(TP)_measurement_method",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "fecal contamination indicator": {
          "name": "fecal contamination indicator",
          "description": "A gene, virus, bacteria, or substance used to measure the sanitary quality of water in regards to fecal contamination.",
          "title": "fecal contamination indicator",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 123,
          "slot_uri": "GENEPIO:0100814",
          "alias": "fecal_contamination_indicator",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "recommended": true
        },
        "fecal contamination value": {
          "name": "fecal contamination value",
          "description": "The numerical value of a measurement of fecal contamination.",
          "title": "fecal contamination value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 124,
          "slot_uri": "GENEPIO:0100815",
          "alias": "fecal_contamination_value",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString",
          "recommended": true
        },
        "fecal contamination unit": {
          "name": "fecal contamination unit",
          "description": "The units of a measurement of fecal contamination.",
          "title": "fecal contamination unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 125,
          "slot_uri": "GENEPIO:0100816",
          "alias": "fecal_contamination_unit",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "recommended": true
        },
        "fecal contamination method": {
          "name": "fecal contamination method",
          "description": "The method used to measure fecal contamination.",
          "title": "fecal contamination method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 126,
          "slot_uri": "GENEPIO:0100817",
          "alias": "fecal_contamination_method",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "fecal coliform count value": {
          "name": "fecal coliform count value",
          "description": "The numerical value of a measurement of fecal coliforms within a sample.",
          "title": "fecal coliform count value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 127,
          "slot_uri": "GENEPIO:0100818",
          "alias": "fecal_coliform_count_value",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "fecal coliform count unit": {
          "name": "fecal coliform count unit",
          "description": "The units of a measurement of fecal coliforms.",
          "title": "fecal coliform count unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 128,
          "slot_uri": "GENEPIO:0100819",
          "alias": "fecal_coliform_count_unit",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "fecal coliform count method": {
          "name": "fecal coliform count method",
          "description": "The method used to measure fecal coliforms.",
          "title": "fecal coliform count method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 129,
          "slot_uri": "GENEPIO:0100820",
          "alias": "fecal_coliform_count_method",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "urinary contamination indicator": {
          "name": "urinary contamination indicator",
          "description": "A gene, virus, bacteria, or substance used to measure the sanitary quality of water in regards to urinary contamination.",
          "title": "urinary contamination indicator",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 130,
          "slot_uri": "GENEPIO:0100837",
          "alias": "urinary_contamination_indicator",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "urinary contamination value": {
          "name": "urinary contamination value",
          "description": "The numerical value of a measurement of urinary contamination.",
          "title": "urinary contamination value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 131,
          "slot_uri": "GENEPIO:0100838",
          "alias": "urinary_contamination_value",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "urinary contamination unit": {
          "name": "urinary contamination unit",
          "description": "The units of a measurement of urinary contamination.",
          "title": "urinary contamination unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 132,
          "slot_uri": "GENEPIO:0100839",
          "alias": "urinary_contamination_unit",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "urinary contamination method": {
          "name": "urinary contamination method",
          "description": "The method used to measure urinary contamination.",
          "title": "urinary contamination method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 133,
          "slot_uri": "GENEPIO:0100840",
          "alias": "urinary_contamination_method",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "sample temperature value (at collection)": {
          "name": "sample temperature value (at collection)",
          "description": "The numerical value of a measurement of temperature of a sample at collection.",
          "title": "sample temperature value (at collection)",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 134,
          "slot_uri": "GENEPIO:0100821",
          "alias": "sample_temperature_value_(at_collection)",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "sample temperature unit (at collection)": {
          "name": "sample temperature unit (at collection)",
          "description": "The units of a measurement of temperature of a sample at the time of collection.",
          "title": "sample temperature unit (at collection)",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 135,
          "slot_uri": "GENEPIO:0100822",
          "alias": "sample_temperature_unit_(at_collection)",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "sample temperature value (when received)": {
          "name": "sample temperature value (when received)",
          "description": "The numerical value of a measurement of temperature of a sample upon receipt.",
          "title": "sample temperature value (when received)",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 136,
          "slot_uri": "GENEPIO:0100823",
          "alias": "sample_temperature_value_(when_received)",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements",
          "range": "WhitespaceMinimizedString"
        },
        "sample temperature unit (when received)": {
          "name": "sample temperature unit (when received)",
          "description": "The units of a measurement of temperature of a sample at the time upon receipt.",
          "title": "sample temperature unit (when received)",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 137,
          "slot_uri": "GENEPIO:0100824",
          "alias": "sample_temperature_unit_(when_received)",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Environmental conditions and measurements"
        },
        "purpose of sequencing": {
          "name": "purpose of sequencing",
          "description": "The reason that the sample was sequenced.",
          "title": "purpose of sequencing",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 138,
          "slot_uri": "GENEPIO:0001445",
          "alias": "purpose_of_sequencing",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sequence information",
          "required": true
        },
        "purpose of sequencing details": {
          "name": "purpose of sequencing details",
          "description": "The description of why the sample was sequenced providing specific details.",
          "title": "purpose of sequencing details",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 139,
          "slot_uri": "GENEPIO:0001446",
          "alias": "purpose_of_sequencing_details",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sequence information",
          "range": "WhitespaceMinimizedString"
        },
        "sequence submitted by": {
          "name": "sequence submitted by",
          "description": "The name of the agency that submitted the sequence to a database.",
          "title": "sequence submitted by",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 140,
          "slot_uri": "GENEPIO:0001159",
          "alias": "sequence_submitted_by",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sequence information",
          "required": true
        },
        "sequence submitter contact email": {
          "name": "sequence submitter contact email",
          "description": "The email address of the contact responsible for follow-up regarding the sequence.",
          "title": "sequence submitter contact email",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 141,
          "slot_uri": "GENEPIO:0001165",
          "alias": "sequence_submitter_contact_email",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sequence information",
          "recommended": true,
          "pattern": "^\\S+@\\S+\\.\\S+$"
        },
        "sequencing date": {
          "name": "sequencing date",
          "description": "The date the sample was sequenced.",
          "title": "sequencing date",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 142,
          "slot_uri": "GENEPIO:0001447",
          "alias": "sequencing_date",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sequence information",
          "range": "date"
        },
        "library ID": {
          "name": "library ID",
          "description": "The user-specified identifier for the library prepared for sequencing.",
          "title": "library ID",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 143,
          "slot_uri": "GENEPIO:0001448",
          "alias": "library_ID",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sequence information",
          "range": "WhitespaceMinimizedString"
        },
        "sequencing platform": {
          "name": "sequencing platform",
          "description": "The platform technology used to perform the sequencing.",
          "title": "sequencing platform",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 144,
          "slot_uri": "GENEPIO:0100473",
          "alias": "sequencing_platform",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sequence information"
        },
        "sequencing instrument": {
          "name": "sequencing instrument",
          "description": "The model of the sequencing instrument used.",
          "title": "sequencing instrument",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 145,
          "slot_uri": "GENEPIO:0001452",
          "alias": "sequencing_instrument",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sequence information",
          "required": true
        },
        "sequencing method type": {
          "name": "sequencing method type",
          "title": "sequencing method type",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 146,
          "alias": "sequencing_method_type",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sequence information",
          "recommended": true
        },
        "library preparation kit": {
          "name": "library preparation kit",
          "description": "The name of the DNA library preparation kit used to generate the library being sequenced.",
          "title": "library preparation kit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 147,
          "slot_uri": "GENEPIO:0001450",
          "alias": "library_preparation_kit",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sequence information",
          "range": "WhitespaceMinimizedString"
        },
        "sequencing protocol": {
          "name": "sequencing protocol",
          "description": "The protocol or method used for sequencing.",
          "title": "sequencing protocol",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 148,
          "slot_uri": "GENEPIO:0001454",
          "alias": "sequencing_protocol",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sequence information",
          "range": "WhitespaceMinimizedString",
          "recommended": true
        },
        "DNA fragment length": {
          "name": "DNA fragment length",
          "description": "The length of the DNA fragment generated by mechanical shearing or enzymatic digestion for the purposes of library preparation.",
          "title": "DNA fragment length",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 149,
          "slot_uri": "GENEPIO:0100843",
          "alias": "DNA_fragment_length",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sequence information",
          "range": "WhitespaceMinimizedString"
        },
        "genomic target enrichment method": {
          "name": "genomic target enrichment method",
          "title": "genomic target enrichment method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 150,
          "slot_uri": "GENEPIO:0100966",
          "alias": "genomic_target_enrichment_method",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sequence information",
          "recommended": true
        },
        "genomic target enrichment method details": {
          "name": "genomic target enrichment method details",
          "title": "genomic target enrichment method details",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 151,
          "slot_uri": "GENEPIO:0100967",
          "alias": "genomic_target_enrichment_method_details",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Sequence information",
          "range": "WhitespaceMinimizedString"
        },
        "quality control method name": {
          "name": "quality control method name",
          "description": "The name of the method used to assess whether a sequence passed a predetermined quality control threshold.",
          "title": "quality control method name",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 152,
          "slot_uri": "GENEPIO:0100557",
          "alias": "quality_control_method_name",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "WhitespaceMinimizedString"
        },
        "quality control method version": {
          "name": "quality control method version",
          "description": "The version number of the method used to assess whether a sequence passed a predetermined quality control threshold.",
          "title": "quality control method version",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 153,
          "slot_uri": "GENEPIO:0100558",
          "alias": "quality_control_method_version",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "WhitespaceMinimizedString"
        },
        "quality control determination": {
          "name": "quality control determination",
          "description": "The determination of a quality control assessment.",
          "title": "quality control determination",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 154,
          "slot_uri": "GENEPIO:0100559",
          "alias": "quality_control_determination",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Bioinformatics and QC metrics"
        },
        "quality control issues": {
          "name": "quality control issues",
          "description": "The reason contributing to, or causing, a low quality determination in a quality control assessment.",
          "title": "quality control issues",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 155,
          "slot_uri": "GENEPIO:0100560",
          "alias": "quality_control_issues",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Bioinformatics and QC metrics"
        },
        "quality control details": {
          "name": "quality control details",
          "description": "The details surrounding a low quality determination in a quality control assessment.",
          "title": "quality control details",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 156,
          "slot_uri": "GENEPIO:0100561",
          "alias": "quality_control_details",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "WhitespaceMinimizedString"
        },
        "raw sequence data processing method": {
          "name": "raw sequence data processing method",
          "description": "The names of the software and version number used for raw data processing such as removing barcodes, adapter trimming, filtering etc.",
          "title": "raw sequence data processing method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 157,
          "slot_uri": "GENEPIO:0001458",
          "alias": "raw_sequence_data_processing_method",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "recommended": true
        },
        "dehosting method": {
          "name": "dehosting method",
          "description": "The method used to remove host reads from the pathogen sequence.",
          "title": "dehosting method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 158,
          "slot_uri": "GENEPIO:0001459",
          "alias": "dehosting_method",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "recommended": true
        },
        "sequence assembly software name": {
          "name": "sequence assembly software name",
          "description": "The name of the software used to assemble a sequence.",
          "title": "sequence assembly software name",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 159,
          "slot_uri": "GENEPIO:0100825",
          "alias": "sequence_assembly_software_name",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "required": true
        },
        "sequence assembly software version": {
          "name": "sequence assembly software version",
          "description": "The version of the software used to assemble a sequence.",
          "title": "sequence assembly software version",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 160,
          "slot_uri": "GENEPIO:0100826",
          "alias": "sequence_assembly_software_version",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "required": true
        },
        "breadth of coverage value": {
          "name": "breadth of coverage value",
          "description": "The percentage of the reference genome covered by the sequenced data, to a prescribed depth.",
          "title": "breadth of coverage value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 161,
          "slot_uri": "GENEPIO:0001472",
          "alias": "breadth_of_coverage_value",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "WhitespaceMinimizedString"
        },
        "depth of coverage value": {
          "name": "depth of coverage value",
          "description": "The average number of reads representing a given nucleotide in the reconstructed sequence.",
          "title": "depth of coverage value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 162,
          "slot_uri": "GENEPIO:0001474",
          "alias": "depth_of_coverage_value",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "WhitespaceMinimizedString"
        },
        "depth of coverage threshold": {
          "name": "depth of coverage threshold",
          "description": "The threshold used as a cut-off for the depth of coverage.",
          "title": "depth of coverage threshold",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 163,
          "slot_uri": "GENEPIO:0001475",
          "alias": "depth_of_coverage_threshold",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "WhitespaceMinimizedString"
        },
        "genome completeness": {
          "name": "genome completeness",
          "description": "The percentage of expected genes identified in the genome being sequenced. Missing genes indicate missing genomic regions (incompleteness) in the data.",
          "title": "genome completeness",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 164,
          "slot_uri": "GENEPIO:0100844",
          "alias": "genome_completeness",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "WhitespaceMinimizedString"
        },
        "sequence assembly length": {
          "name": "sequence assembly length",
          "description": "The length of the genome generated by assembling reads using a scaffold or by reference-based mapping.",
          "title": "sequence assembly length",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 165,
          "slot_uri": "GENEPIO:0100846",
          "alias": "sequence_assembly_length",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "integer"
        },
        "read mapping software name": {
          "name": "read mapping software name",
          "description": "The name of the software used to map sequence reads to a reference genome or set of reference genes.",
          "title": "read mapping software name",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 166,
          "slot_uri": "GENEPIO:0100832",
          "alias": "read_mapping_software_name",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "WhitespaceMinimizedString"
        },
        "read mapping software version": {
          "name": "read mapping software version",
          "description": "The version of the software used to map sequence reads to a reference genome or set of reference genes.",
          "title": "read mapping software version",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 167,
          "slot_uri": "GENEPIO:0100833",
          "alias": "read_mapping_software_version",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "WhitespaceMinimizedString"
        },
        "taxonomic reference database name": {
          "name": "taxonomic reference database name",
          "description": "The name of the taxonomic reference database used to identify the organism.",
          "title": "taxonomic reference database name",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 168,
          "slot_uri": "GENEPIO:0100834",
          "alias": "taxonomic_reference_database_name",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "WhitespaceMinimizedString"
        },
        "taxonomic reference database version": {
          "name": "taxonomic reference database version",
          "description": "The version of the taxonomic reference database used to identify the organism.",
          "title": "taxonomic reference database version",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 169,
          "slot_uri": "GENEPIO:0100835",
          "alias": "taxonomic_reference_database_version",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "WhitespaceMinimizedString"
        },
        "read mapping criteria": {
          "name": "read mapping criteria",
          "description": "A description of the criteria used to map reads to a reference sequence.",
          "title": "read mapping criteria",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 170,
          "slot_uri": "GENEPIO:0100836",
          "alias": "read_mapping_criteria",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "WhitespaceMinimizedString"
        },
        "bioinformatics protocol": {
          "name": "bioinformatics protocol",
          "description": "A description of the overall bioinformatics strategy used.",
          "title": "bioinformatics protocol",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 171,
          "slot_uri": "GENEPIO:0001489",
          "alias": "bioinformatics_protocol",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Bioinformatics and QC metrics",
          "range": "WhitespaceMinimizedString"
        },
        "gene name": {
          "name": "gene name",
          "description": "The binary value of the result from a diagnostic test.",
          "title": "gene name",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 173,
          "slot_uri": "GENEPIO:0100655",
          "alias": "gene_name",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Pathogen diagnostic testing"
        },
        "diagnostic target presence": {
          "name": "diagnostic target presence",
          "description": "The value of the result from a diagnostic test.",
          "title": "diagnostic target presence",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 174,
          "slot_uri": "GENEPIO:0100962",
          "alias": "diagnostic_target_presence",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Pathogen diagnostic testing"
        },
        "diagnostic measurement value": {
          "name": "diagnostic measurement value",
          "description": "The unit of the result from a diagnostic test.",
          "title": "diagnostic measurement value",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 175,
          "slot_uri": "GENEPIO:0100963",
          "alias": "diagnostic_measurement_value",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Pathogen diagnostic testing",
          "range": "WhitespaceMinimizedString"
        },
        "diagnostic measurement unit": {
          "name": "diagnostic measurement unit",
          "description": "The method by which a diagnostic result was received.",
          "title": "diagnostic measurement unit",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 176,
          "slot_uri": "GENEPIO:0100964",
          "alias": "diagnostic_measurement_unit",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Pathogen diagnostic testing"
        },
        "diagnostic measurement method": {
          "name": "diagnostic measurement method",
          "title": "diagnostic measurement method",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 177,
          "slot_uri": "GENEPIO:0100965",
          "alias": "diagnostic_measurement_method",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Pathogen diagnostic testing"
        },
        "authors": {
          "name": "authors",
          "description": "Names of individuals contributing to the processes of sample collection, sequence generation, analysis, and data submission.",
          "title": "authors",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 178,
          "slot_uri": "GENEPIO:0001517",
          "alias": "authors",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Contributor acknowledgement",
          "range": "WhitespaceMinimizedString",
          "recommended": true
        },
        "DataHarmonizer provenance": {
          "name": "DataHarmonizer provenance",
          "description": "The DataHarmonizer software and template version provenance.",
          "title": "DataHarmonizer provenance",
          "from_schema": "https://example.com/CanCOGeN_Covid-19",
          "rank": 179,
          "slot_uri": "GENEPIO:0001518",
          "alias": "DataHarmonizer_provenance",
          "owner": "WastewaterSinglePathogen",
          "domain_of": [
            "WastewaterAMR",
            "WastewaterSARS-CoV-2",
            "WastewaterSinglePathogen"
          ],
          "slot_group": "Contributor acknowledgement",
          "range": "Provenance"
        }
      }
    }
  },
  "source_file": "schema.yaml",
  "settings": {
    "Title_Case": {
      "setting_key": "Title_Case",
      "setting_value": "(((?<=\\b)[^a-z\\W]\\w*?|[\\W])+)"
    },
    "UPPER_CASE": {
      "setting_key": "UPPER_CASE",
      "setting_value": "[A-Z\\W\\d_]*"
    },
    "lower_case": {
      "setting_key": "lower_case",
      "setting_value": "[a-z\\W\\d_]*"
    }
  },
  "@type": "SchemaDefinition"
}